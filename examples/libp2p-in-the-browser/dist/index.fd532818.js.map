{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAIA,WAAW;IAASC,WAAW;IAASC,aAAa;IAAUC,eAAe;AAAmCC,OAAOC,OAAOC,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqC/IC,aAAa;IAEbC,YAAYJ,OAAOC,OAAOI;AAE9B,gBAAgBC;EACdF,UAAUG,KAAK,MAAMD;EACrB,KAAKE;IACHC,MAAMT,OAAOC,OAAOS;IACpBC;IACAC;IACAC,QAAQ,UAASC;MACf,KAAKH,iBAAiBI,KAAKD,OAAM;;IAEnCE,SAAS,UAASF;MAChB,KAAKF,kBAAkBG,KAAKD;;;EAGhCd,OAAOC,OAAOS,UAAUO;;AAE1BjB,OAAOC,OAAOI,SAASA;IAEnBa;AACFC;;AACAC;AAEF;SAEIxB,aACCyB,SAASC,SAASC,QAAQ,YAAY,IAAIF,SAASG,WAAW;;AAInE;SACS3B,YAAYwB,SAASI;;;IAI1BC,SAAS1B,OAAOC,OAAOyB;MACrBA,WAAWA,OAAOC,2BAA2BC,cAAc;MAC3DJ,WAAWK;MACXJ,OAAOK;MACPR,WACFxB,cACCuB,SAASC,YAAY,cACnB,+BAA8BS,KAAKP,YAClC,QACA;MACFQ,SAASJ,UACXN,WAAW,QAAQE,YAAYC,OAAO,MAAMA,OAAO,MAAM;;EAG3DO,GAAGC,YAAY,UAASC;;IACtBhB;;;IACAC;;;IACAC;QAEIX;IAAyB0B,KAAKC,MAAMF,MAAMzB;QAE1CA,KAAK4B,SAAS;;MAEhBC;UAEIC,SAAS9B,KAAK8B,OAAOC,OAAO,AAAAC,SAASA,MAAMC,YAAY3C;;UAGvD4C,UAAU;MACdJ,OAAOK,QAAQ,AAAAH;YACTI,YACFJ,MAAMJ,SAAS,SACdI,MAAMJ,SAAS,QACdS,eAAe9C,OAAOC,OAAO8C,MAAMN,MAAMO,IAAIP,MAAMQ;YACnDJ;UACFF,UAAU;;;UAIVA;QACFO,QAAQC;QAERZ,OAAOK,QAAQ,UAASH;UACtBW,SAASpD,OAAOC,OAAO8C,MAAMN;;iBAGtBY,IAAI,GAAGA,IAAIjC,eAAekC,QAAQD;cACrCL,KAAK5B,eAAeiC,GAAG;eACtBlC,eAAe6B;YAClBO,aAAanC,eAAeiC,GAAG,IAAIL;;;;QAIvCQ,OAAOnC,SAASoC;;;QAIhBhD,KAAK4B,SAAS;;eAEPqB,kBAAkBjD,KAAKkD,YAAYC;YACtCC,QAAQH,eAAeI,YACvBJ,eAAeI,YACfJ,eAAeG;QAEnBX,QAAQa,MACN,kBACEL,eAAeM,UACf,OACAH,QACA,SACAH,eAAeO,MAAMC,KAAK;;;MAKhC5B;UACI6B,UAAUC,mBAAmB3D,KAAKkD,YAAYU;;MAElDC,SAASC,KAAKC,YAAYL;;;EAG9BnC,GAAGyC,UAAU,UAASC;IACpBxB,QAAQa,MAAMW,EAAEV;;EAElBhC,GAAG2C,UAAU,UAASD;sBACiB;MACnCxB,QAAQ0B,KAAK;;;;AAKnB;MACMT,UAAUG,SAASO,eAAe1E;MAClCgE;IACFA,QAAQW;IACR5B,QAAQ6B,IAAI;;;AAIhB,4BAA4BpB;MACtBQ,UAAUG,SAASU,cAAc;EACrCb,QAAQnB,KAAK7C;MAET8E,YACF;WAEOC,cAAcvB;QACjBE,QAAQqB,WAAWpB,YAAYoB,WAAWpB,YAAYoB,WAAWrB;IAErEoB,cAAc;;;eAGHC,WAAWlB,QAAQ;;;YAGtBH,MAAM;;;YAGNqB,WAAWjB,MAAMkB,IAAI,AAAAC,QAAQ,UAAUA,OAAO,UAAUlB,KAAK,IAAI;;;;;EAM3Ee,aAAa;EAEbd,QAAQkB,YAAYJ;SAEbd;;AAGT,oBAAoBlE,QAAQ+C;;MACtBsC,UAAUrF,OAAOqF;OAChBA;;;MAIDC;MACAC,GAAGC,GAAGC;OAELF,KAAKF;SACHG,KAAKH,QAAQE,GAAG;MACnBE,MAAMJ,QAAQE,GAAG,GAAGC;UAEhBC,QAAQ1C,MAAO2C,MAAMC,QAAQF,QAAQA,IAAIA,IAAIpC,SAAS,OAAON;QAC/DuC,QAAQxE,MAAMd,QAAQuF;;;;MAKxBvF,OAAOyB;IACT6D,UAAUA,QAAQM,OAAOC,WAAW7F,OAAOyB,QAAQsB;;SAG9CuC;;AAGT,oBAAoBQ;MACdC,UAAUD,KAAKE;EACnBD,QAAQE,SAAS;QACXH,KAAKI,eAAe;;MAEtBJ,KAAKI,WAAWC,YAAYL;;;EAGhCC,QAAQK,aACN;EAEAN,KAAKO,aAAa,QAAQC,MAAM,KAAK,KAAK,MAAMC,KAAKC;;EAGvDV,KAAKI,WAAWO,aAAaV,SAASD,KAAKY;;IAGzCC,aAAa;AACjB;MACMA;;;EAIJA,aAAaC,WAAW;QAClBC,QAAQxC,SAASyC,iBAAiB;aAC7B1D,IAAI,GAAGA,IAAIyD,MAAMxD,QAAQD;;UAE5B2D;MAAqBF,MAAMzD,GAAGiD,aAAa;UAC3C9E,WAAWK;UACXoF,sBACFzF,aAAa,kBACL0F,OACF,mDAAmDpF,WACnDC,KAAKiF,QACPA,KAAKzF,QAAQC,WAAW,MAAMM;UAChCqF,YACF,iBAAgBpF,KAAKiF,SACrBA,KAAKzF,QAAQiC,OAAOnC,SAAS+F,YAAY,MACxCH;WACEE;QACHE,WAAWP,MAAMzD;;;IAIrBuD,aAAa;KACZ;;AAGL,kBAAkB3G;AAA6BwC;;MACzC6C,UAAUrF,OAAOqF;OAChBA;;;MAID7C,MAAMJ,SAAS;IACjBiF;;;MAIEC,OAAO9E,MAAMQ,aAAahD,OAAOC;MACjCqH;QACEzG,SAAS0G,SAAS,WAAW,UAAU,WAAW/E,MAAMgF;IAC5DnC,QAAQ7C,MAAMO,OAAOlC,IAAIyG;aAChBtH,OAAOyB;IAChB0B,SAASnD,OAAOyB,QAAQe;;;AAI5B,wBACExC;AACA+C;;AACAC;;MAEIqC,UAAUrF,OAAOqF;OAChBA;;;MAIDrC,iBAAiBA,aAAahD,OAAOC;;;SAGlCD,OAAOyB;aACH;;WAGFoB,eAAe7C,OAAOyB,QAAQsB,IAAIC;;MAGvC/B,cAAc8B;;;EAIlB9B,cAAc8B,MAAM;MAEhB0E,SAASzH,OAAO0H,MAAM3E;EAE1B5B,eAAeL,MAAMd,QAAQ+C;MAEzB0E,UAAUA,OAAOlH,OAAOkH,OAAOlH,IAAIG,iBAAiB2C;WAC/C;;SAGFwC,WAAW9F,OAAOC,OAAO8C,MAAMC,IAAI4E,KAAK,UAASC;WAC/C/E,eAAe+E,EAAE,IAAIA,EAAE,IAAI;;;AAItC,sBAAsB5H;AAA6B+C;;MAC7C0E,SAASzH,OAAO0H,MAAM3E;EAC1B/C,OAAOS;MACHgH,UAAUA,OAAOlH;IACnBkH,OAAOlH,IAAIC,OAAOR,OAAOS;;MAGvBgH,UAAUA,OAAOlH,OAAOkH,OAAOlH,IAAII,kBAAkB0C;IACvDoE,OAAOlH,IAAII,kBAAkBgC,QAAQ,UAASkF;MAC5CA,GAAG7H,OAAOS;;;SAIPT,OAAO0H,MAAM3E;EACpB/C,OAAO+C;EAEP0E,SAASzH,OAAO0H,MAAM3E;MAClB0E,UAAUA,OAAOlH,OAAOkH,OAAOlH,IAAIG,iBAAiB2C;IACtDoE,OAAOlH,IAAIG,iBAAiBiC,QAAQ,UAASkF;UACvCC,qBAAqBD,GAAG;eACnBhC,WAAW9F,OAAOC,OAAO8C,MAAMC;;UAEpC+E,sBAAsB3G,eAAekC;QACvClC,eAAeL,KAAKiH,MAAM5G,gBAAgB2G;;;;EAIhD5G,eAAe6B,MAAM;;;;;;;;;;;;;;;;;ACrWvBsB,SAAS2D,iBAAiB,oBAAoB;8BA0CnClD;;;;QAAAA,mBAAKmD;UACZhF,QAAQiF,KAAKD;UACbT,OAAOW,gBAAgB,EAAEF,IAAIG,OAAO;;;wDA1CVC;UAC1BC;;;;YAIEC,SACE,gEACA;;UAGJlD;YACEmD;YACAC;YACAC;YACAC;;UAEFC;YACED;;;wCAGaE;gBACTC,SAAS;gBACTC,OACE,mFACA,mFACA,mFACA,mFACA;;;;;;QA3BJC;;QAmCAC,SAAS5E,SAASO,eAAe;QACjC4C,SAASnD,SAASO,eAAe;QAEvC4C,OAAOW,cAAc;;QAQrBa,OAAOE,GAAG,kBAAkB,AAACC;UAC3BrE,KAAK,aAAaqE,OAAOC,cAAc;;;QAIzCJ,OAAOK,kBAAkBH,GAAG,gBAAgB,AAACI;UAC3CxE,KAAK,eAAewE,WAAWC,WAAWH,cAAc;;;QAI1DJ,OAAOK,kBAAkBH,GAAG,mBAAmB,AAACI;UAC9CxE,KAAK,oBAAoBwE,WAAWC,WAAWH,cAAc;;;wCAGzDJ,OAAOQ;;QACbP,OAAOQ,YAAY;QACnB3E,KAAK,eAAekE,OAAOG,OAAOC,cAAc;;QAGhD7F,OAAOyF,SAASA;;;;;;;;;AC3ElB;;AAEAU,QAAQ;AAERA,QAAQ;AAERA,QAAQ;IAEJC,OAAOC;YACCC,MAAM;;AAElBF,OAAOC,iBAAiB;IAEpBE,kBAAkB;AACtB,gBAAgBC,GAAGC,KAAKC;EACtBF,EAAEC,QAAQE,OAAOJ,iBAAiBC,GAAGC;IACnCG,UAAU;IACVC,cAAc;IACdH,OAAOA;;;AAIXI,OAAOC,OAAOC,WAAW,YAAW,IAAGC;AACvCH,OAAOC,OAAOC,WAAW,aAAY,IAAGE;CAExC,iMAAgMnE,MAAM,KAAK3D,QAAQ,UAAUqH;KACxNA,QAAQK,OAAO3E,OAAOsE,KAAKzC,SAASjH,KAAKoK,QAAQV;;;;AC1BtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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9D+C,KAAKwD,OAAO,MAAM,UAASxD,QAAQhD,WAAU4D,eAAe5D,SAASgD;IAAQxF,OAAOqB,OAAOgB,EAAEmD;;;;;ACPnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;;;ACHA;;;ACAA;;;ACAA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;;;ACFA;AACA;AACA;;;ACFA;AACA;AACA;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;;;ACFA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;ACDA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;IACI9F,SAASD,QAAQ;IACjBiB,MAAMjB,QAAQ;IACdwJ,MAAMxJ,QAAQ;IACdyJ,oBAAoBzJ,QAAQ;IAC5BmC,cAAcnC,QAAQ;IACtB0J,QAAQ1J,QAAQ;IAChB8C,OAAO9C,QAAQ,kBAAkB4C;IACjCD,OAAO3C,QAAQ,kBAAkB4C;IACjCC,KAAK7C,QAAQ,gBAAgB4C;IAC7B+G,QAAQ3J,QAAQ,kBAAkBtB;IAClCkL,SAAS;IACTC,UAAU5J,OAAO2J;IACjBE,OAAOD;IACPE,QAAQF,QAAQhJ;;IAEhBmJ,aAAaR,IAAIxJ,QAAQ,oBAAoB+J,WAAWH;IACxDK,QAAO,UAAUrJ,OAAOC;;IAGxBqJ,WAAW,UAAUC;MACnB/F,KAAKjC,YAAYgI,UAAU;aACpB/F,MAAM,YAAYA,GAAGzK,SAAS;IACvCyK,KAAK6F,OAAO7F,GAAG1F,SAASiL,MAAMvF,IAAI;QAC9BgG,QAAQhG,GAAGiG,WAAW;QACtBC,OAAOC,OAAOC;QACdJ,UAAU,MAAMA,UAAU;MAC5BE,QAAQlG,GAAGiG,WAAW;UAClBC,UAAU,MAAMA,UAAU,YAAYG;eACjCL,UAAU;cACXhG,GAAGiG,WAAW;aACf;aAAS;UAAIE,QAAQ;UAAGC,UAAU;;aAClC;aAAS;UAAKD,QAAQ;UAAGC,UAAU;;;kBACvBpG;;eAEVsG,SAAStG,GAAGuG,MAAM,IAAIjR,IAAI,GAAGuL,IAAIyF,OAAO/Q,QAAQiR,MAAMlR,IAAIuL,GAAGvL;QACpEkR,OAAOF,OAAOL,WAAW3Q;;;YAGrBkR,OAAO,MAAMA,OAAOJ,gBAAgBC;;aACjCI,SAASH,QAAQH;;;UAEpBnG;;KAGPyF,QAAQ,YAAYA,QAAQ,UAAUA,QAAQ;EACjDA,UAAU,gBAAgBtJ;QACpB6D,KAAKwB,UAAUjM,SAAS,IAAI,IAAI4G;QAChCuK,OAAO;WACJA,gBAAgBjB;IAEjBG,aAAaN,MAAM;MAAcK,MAAM3C,QAAQxQ,KAAKkU;SAAYtB,IAAIsB,SAASlB,UAC7EH,sBAAsBK,KAAKI,SAAS9F,MAAM0G,MAAMjB,WAAWK,SAAS9F;;WAEnEY,OAAOhF,QAAQ,oBAAoB8C,KAAKgH;EAE/C;EAEA,qEACA,kDACAlN,MAAM,MAAMwJ,IAAI,GAAG9F,KAAK0E,KAAKrL,SAASyM,GAAGA;QACrCnF,IAAI6I,MAAMxJ,MAAM0E,KAAKoB,QAAQnF,IAAI4I,SAASvJ;MAC5CuC,GAAGgH,SAASvJ,KAAKqC,KAAKmH,MAAMxJ;;;EAGhCuJ,QAAQhJ,YAAYkJ;EACpBA,MAAMgB,cAAclB;EACpB7J,QAAQ,eAAeC,QAAQ2J,QAAQC;;;;ACnEzjHA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpEA;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3CA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AK,UAAU6D,GAAGwP;;UAE5B3R,SAASmC,OAAO4Q,aAAa5Q;aAC1B,KAAKoR,IAAI,KAAKA,SAASL;YACxB1P,SAAS,KAAK+P,GAAGjV,KAAK6D,GAAGwP;eACtBrT,OAAO,QAAQ,OAAOkF;;aAEtB8P,OAAO1e,KAAK,MAAMuN,GAAGwP;;;;;;ACxDpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IC7CI1T,SAASD,QAAQ;IACjB0H,OAAO1H,QAAQ;IACf0B,MAAM1B,QAAQ;IACdwV,QAAQ9T,IAAI;IACZ+T,OAAO/T,IAAI;IACXgU,SAASzV,OAAO0V,eAAe1V,OAAO2V;IACtCC,SAASH;IACThc,IAAI;IACJuL,IAAI;IACJ6Q;IAEAC,0BACF,kHACAnZ,MAAM;OAEDlD,IAAIuL;MACL6Q,QAAQ7V,OAAO8V,uBAAuBrc;IACxCgO,KAAKoO,MAAMjV,WAAW2U,OAAO;IAC7B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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/dA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;;;ACAA;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;;;ACHA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;;;ACDA;AACA;;;ACDA;AACA;;;ACDA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;;;ACDA;AACA;;;ACDA;AACA;;;ACDA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACLA;IACIvV,UAAUnB,QAAQ;IAClByH,OAAOzH,QAAQ;IACfC,SAASD,QAAQ;IACjBkM,qBAAqBlM,QAAQ;IAC7BwM,iBAAiBxM,QAAQ;AAE7BmB,QAAQA,QAAQ4D,IAAI5D,QAAQsH,GAAG;EAAa,WAAW,UAAUmS;QAC3D3P,IAAIiB,mBAAmB,MAAMzE,KAAKuI,WAAW/P,OAAO+P;QACpD/G,oBAAoB2R,aAAa;WAC9B,KAAKlN,KACVzE,aAAa,UAAUmH;aACd5D,eAAevB,GAAG2P,aAAalN,KAAK;eAAqB0C;;QAC9DwK,WACJ3R,aAAa,UAAUlO;aACdyR,eAAevB,GAAG2P,aAAalN,KAAK;cAAoB3S;;QAC7D6f;;;;;ACjBR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ICbIzZ,UAAUnB,QAAQ;IAClBoM,YAAYpM,QAAQ;IACpB0M,UAAU1M,QAAQ,aAAa0M;IAC/BI,SAAS9M,QAAQ,UAAU0M,YAAY;AAE3CvL,QAAQA,QAAQ6E;EACd6U,MAAM,cAAc1jB;QACdsX,SAAS3B,UAAUJ,QAAQ+B;IAC/BrC,UAAUqC,SAASA,OAAOzN,KAAK7J,MAAMA;;;;;ACTzC;;IAEIgK,UAAUnB,QAAQ;IAClBC,SAASD,QAAQ;IACjByH,OAA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzvBAD,QAAQ4d,aAAaA;AACrB5d,QAAQ6d,OAAOA;AACf7d,QAAQ8d,OAAOA;AACf9d,QAAQ+d,YAAYA;AACpB/d,QAAQge,UAAUC;AAClBje,QAAQke,WAAW;MACdC,SAAS;SAEN;SACDA;MACJA,SAAS;MACTlsB,QAAQ0B,KAAK;;;;;;;AAShBqM,QAAQoe,UACP,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA;;;;;;;;;AAYD;;;;aAIY7rB,WAAW,eAAeA,OAAO6S,YAAY7S,OAAO6S,QAAQhU,SAAS,cAAcmB,OAAO6S,QAAQiZ;WACrG;;;aAIGjT,cAAc,eAAeA,UAAUnG,aAAamG,UAAUnG,UAAUqZ,cAAcC,MAAM;WAC/F;;;;gBAKOlrB,aAAa,eAAeA,SAASmrB,mBAAmBnrB,SAASmrB,gBAAgBC,SAASprB,SAASmrB,gBAAgBC,MAAMC;SAE/HnsB,WAAW,eAAeA,OAAON,YAAYM,OAAON,QAAQ0sB,WAAYpsB,OAAON,QAAQirB,aAAa3qB,OAAON,QAAQ2sB;;SAGnHxT,cAAc,eAAeA,UAAUnG,aAAamG,UAAUnG,UAAUqZ,cAAcC,MAAM,qBAAqBhb,SAAStN,OAAO4oB,IAAI,OAAO;SAE5IzT,cAAc,eAAeA,UAAUnG,aAAamG,UAAUnG,UAAUqZ,cAAcC,MAAM;;;;;;;AAStG,oBAAoB5e;EACnBA,KAAK,MAAM,KAAKoe,YAAY,OAAO,MAClC,KAAKe,aACJ,KAAKf,YAAY,QAAQ,OAC1Bpe,KAAK,MACJ,KAAKoe,YAAY,QAAQ,OAC1B,MAAMhvB,OAAOiR,QAAQ+e,SAAS,KAAKC;OAE/B,KAAKjB;;;QAIJpN,IAAI,YAAY,KAAKsO;EAC3Btf,KAAKuf,OAAO,GAAG,GAAGvO,GAAG;;;;MAKjBxH,QAAQ;MACRgW,QAAQ;EACZxf,KAAK,GAAGyf,QAAQ,eAAe,AAAAb;QAC1BA,UAAU;;;IAGdpV;QACIoV,UAAU;;;MAGbY,QAAQhW;;;EAIVxJ,KAAKuf,OAAOC,OAAO,GAAGxO;;;;;;;;;;AAWvB3Q,QAAQlM,MAAM7B,QAAQotB,SAASptB,QAAQ6B,QAAQ;;;;;;;AAQ/C,cAAcwrB;;QAERA;MACHtf,QAAQge,QAAQuB,QAAQ,SAASD;;MAEjCtf,QAAQge,QAAQwB,WAAW;;WAEpB1sB;;;;;;;;AAYV;MACK6V;;IAEHA,IAAI3I,QAAQge,QAAQyB,QAAQ;WACpB3sB;;OAMJ6V,YAAYvD,YAAY,gBAAe,SAASA;IACpDuD;;SAGMA;;;;;;;;;;;;AAcR;;;;WAIS+W;WACC5sB;;AAMV/D,OAAOiR,UAAUtH,QAAQ,YAAYsH;OAE9B2f,cAAc5wB,OAAOiR;;;;AAM5B2f,WAAW7gB,IAAI,UAAUlI;;WAEhB1F,KAAK2K,UAAUjF;WACd9D;WACD,iCAAiCA,MAAMC;;;;;;ICzQ5CqS,UAAUrW,OAAOiR;;;;;IAOjB4f;IACAC;AAEJ;YACchnB,MAAM;;AAEpB;YACcA,MAAM;;CAEnB;;eAEkBjD,eAAe;MACtBgqB,mBAAmBhqB;;MAEnBgqB,mBAAmBE;;WAElBrsB;IACLmsB,mBAAmBE;;;eAGRC,iBAAiB;MACxBF,qBAAqBE;;MAErBF,qBAAqBG;;WAEpBvsB;IACLosB,qBAAqBG;;;AAG7B,oBAAoBC;MACZL,qBAAqBhqB;;WAEdA,WAAWqqB,KAAK;;;OAGtBL,qBAAqBE,qBAAqBF,qBAAqBhqB;IAChEgqB,mBAAmBhqB;WACZA,WAAWqqB,KAAK;;;;WAIhBL,iBAAiBK,KAAK;WACzBxsB;;;aAGOmsB,iBAAiBtwB,KAAK,MAAM2wB,KAAK;aACpCxsB;;aAEGmsB,iBAAiBtwB,KAAK,MAAM2wB,KAAK;;;;AAMpD,yBAAyBC;MACjBL,uBAAuBE;;WAEhBA,aAAaG;;;OAGnBL,uBAAuBG,wBAAwBH,uBAAuBE;IACvEF,qBAAqBE;WACdA,aAAaG;;;;WAIbL,mBAAmBK;WACrBzsB;;;aAGMosB,mBAAmBvwB,KAAK,MAAM4wB;aAChCzsB;;;aAGEosB,mBAAmBvwB,KAAK,MAAM4wB;;;;IAO7CjW;IACAkW,WAAW;IACXC;IACAC,cAAc;AAElB;OACSF,aAAaC;;;EAGlBD,WAAW;MACPC,aAAa/tB;IACb4X,QAAQmW,aAAaxrB,OAAOqV;;IAE5BoW,cAAc;;MAEdpW,MAAM5X;IACNiuB;;;AAIR;MACQH;;;MAGAI,UAAUC,WAAWC;EACzBN,WAAW;MAEPO,MAAMzW,MAAM5X;SACVquB;IACFN,eAAenW;IACfA;aACSoW,aAAaK;UACdN;QACAA,aAAaC,YAAYvZ;;;IAGjCuZ,cAAc;IACdK,MAAMzW,MAAM5X;;EAEhB+tB,eAAe;EACfD,WAAW;EACXQ,gBAAgBJ;;AAGpBnb,QAAQmF,WAAW,UAAU0V;MACrBtgB,WAAWjL,MAAM4J,UAAUjM,SAAS;MACpCiM,UAAUjM,SAAS;aACVD,IAAI,GAAGA,IAAIkM,UAAUjM,QAAQD;MAClCuN,KAAKvN,IAAI,KAAKkM,UAAUlM;;;EAGhC6X,MAAMna,SAAS8wB,KAAKX,KAAKtgB;MACrBsK,MAAM5X,WAAW,MAAM8tB;IACvBK,WAAWF;;;;AAKnB,cAAcL,KAAKY;EACf,KAAKZ,MAAMA;EACX,KAAKY,QAAQA;;AAEjBD,KAAKrnB,UAAUuN,MAAM;EACjB,KAAKmZ,IAAIlpB,MAAM,MAAM,KAAK8pB;;AAE9Bzb,QAAQ0b,QAAQ;AAChB1b,QAAQ2b;AACR3b,QAAQ4b;AACR5b,QAAQ6b;AACR7b,QAAQvD,UAAU;;AAClBuD,QAAQC;AAER;AAEAD,QAAQlN,KAAKgpB;AACb9b,QAAQ+b,cAAcD;AACtB9b,QAAQgc,OAAOF;AACf9b,QAAQic,MAAMH;AACd9b,QAAQkc,iBAAiBJ;AACzB9b,QAAQmc,qBAAqBL;AAC7B9b,QAAQwC,OAAOsZ;AACf9b,QAAQoc,kBAAkBN;AAC1B9b,QAAQqc,sBAAsBP;AAE9B9b,QAAQsc,YAAY,UAAUjjB;;;AAE9B2G,QAAQuc,UAAU,UAAUljB;YACd5F,MAAM;;AAGpBuM,QAAQwc,MAAM;SAAqB;;AACnCxc,QAAQyc,QAAQ,UAAUC;YACZjpB,MAAM;;AAEpBuM,QAAQ2c,QAAQ;SAAoB;;;;ACvLppjhfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACppvpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxxNA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnzXA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnhdA;;IACIC,OAAOhiB;;AAGXgiB,KAAKC,YAAYvpB,QAAQ;;AAGzBspB,KAAKE,SAASxpB,QAAQ;;AAGtBspB,KAAKG,eAAezpB,QAAQ;;AAG5BspB,KAAKI,QAAQ1pB,QAAQ;;AAGrBspB,KAAKK,UAAU3pB,QAAQ;;AAGvBspB,KAAKM,OAAO5pB,QAAQ;;AAGpBspB,KAAKO,OAAO7pB,QAAQ;;AAGpBspB,KAAKQ,WAAW9pB,QAAQ;;;;;;AAOxBspB,KAAKxc,SAASid,eAAe9pB,WAAW,eAClBA,UACAA,OAAOyM,WACPzM,OAAOyM,QAAQC,YACf1M,OAAOyM,QAAQC,S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zB,MAAM;;;;;;SAOvB;;aACMsL,OAAOxE,OAAOwE,KAAK,OAAOtL,IAAIsL,KAAKrL,SAAS,GAAGD,KAAK,KAAKA,OAC1DqzB,SAAS/nB,KAAKtL,QAAQ,KAAK,KAAKsL,KAAKtL,QAAQpC,aAAa,KAAK0N,KAAKtL,QAAQ,aACrEsL,KAAKtL;;;;;;;;;;;;;;;AAiB5B4vB,KAAK0D,cAAc,kBAAkBF;;;;;;;SAQ1B,UAAS/mB;aACHrM,IAAI,GAAGA,IAAIozB,WAAWnzB,UAAUD,OACjCozB,WAAWpzB,OAAOqM,aACX,KAAK+mB,WAAWpzB;;;;;;;;;;;;;;;;;;;AAoBvC4vB,KAAK2D;EACDC,OAAOtsB;EACPusB,OAAOvsB;EACPuX,OAAOvX;EACPwsB,MAAM;;;AAIV9D,KAAK+D,aAAa;MACV3C,SAASpB,KAAKoB;;OAEbA;IACDpB,KAAKsB,eAAetB,KAAKuB,sBAAsB;;;;;EAKnDvB,KAAKsB,eAAeF,OAAO3O,SAASiP,WAAWjP,QAAQ2O,OAAO3O;EAE1D,qBAAqBxb,OAAO+sB;eACb5C,OAAOnqB,OAAO+sB;;EAEjChE,KAAKuB,sBAAsBH,OAAO6C;EAE9B,4BAA4BC;eACb9C,OAAO8C;;;;;ACla9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnhxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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QAEzBA,WAAW9yB;MACZI,IAAI21B,WAAW,UAASD,QAAQ1P;QAC9B,kBAAkB5yB;cACZjE,OAAOiE,EAAEjE;cACVA,KAAK22B,SAAS32B,KAAK22B,MAAM2O;YAC1B70B,KAAK82B,oBAAoB,WAAWzsB;YACpC+b,SAAS72B,KAAK22B,MAAM2O,KAAKvsB,KAAK/Y,KAAK22B,MAAM2O,KAAKjkB;;;QAGlD5Q,KAAKjJ,iBAAiB,WAAWsT;QACjCrK,KAAKyK;UAAayb;YAAQ2O;cAAOiB,QAAQA;;;;;;;UAIvCzrB,WAAW,UAAS7W;YAClBjE,OAAOiE,EAAEjE;YACVA,KAAK22B,SAAS32B,KAAK22B,MAAM2O;UAC1Bz0B,IAAI21B,SAASxmC,KAAK22B,MAAM2O,KAAKiB,QAAQ,UAASxtB,KAAKsI;YACjDkiB,OAAOroB;cAAayb;gBAAQ2O;kBAAOvsB,KAAKA;kBAAKsI,OAAOA;;;;;;;;MAK1DkiB,OAAO/7B,iBAAiB,WAAWsT;;;SAIhCjK;;;;ACjazZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjunxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ICtiBI8lB,QAAQztB,QAAQ;AACpBA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;IACJs+B,gBAAgBt+B,QAAQ;IACxBu+B,qBAAqBD,cAAcC;IACnCC,sBAAsBF,cAAcE;WAE9BC,eAAe;MACnBA,aAAahR,MAAMiR,KAAKD;;IAG1BhQ,aAAahB,MAAMnE,KAAKmF;IACxBkQ,sBAAsBjU,WAAW,cAAcM,aAAaN;;;;;AAMhE+C,MAAMmR,MAAMnR,MAAMmR;AAClBvoC,OAAOiR,UAAUmmB,MAAMmR,IAAIC,UAAUpR,MAAMoR,UAAUpR,MAAMoR;IACvDA,UAAUpR,MAAMoR;AAEpBA,QAAQC;AACRD,QAAQC,UAAUC,yBAAyB;AAC3CF,QAAQC,UAAUE,0BAA0B;AAC5CH,QAAQC,UAAUG,mBAAmB;AACrCJ,QAAQC,UAAUI,mBAAmB;AACrCL,QAAQC,UAAUK,mBAAmB;AAErCN,QAAQO,kBAAkB,UAAShO;EACjCA,UAAUA;MACNkL,OAAOlL,QAAQkL;MAChBA,SAAShlC;;IAEVglC,OAAO7O,MAAMuQ,OAAOqB,aAAaR,QAAQC,UAAUG;oBACpC3C,SAAS;QACrBA,KAAK3iC,WAAWklC,QAAQC,UAAUG;gBACzBt5B,UACR,oBAAoBk5B,QAAQC,UAAUG,m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AI;EAC9D/Z,IAAIinC,MAAMltB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQinC,MAAMjnC,IAAI+Z,IAAI;EAC9D/Z,IAAIknC,MAAMntB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQknC,MAAMlnC,IAAI+Z,IAAI;EAC9D/Z,IAAImnC,MAAMptB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQmnC,MAAMnnC,IAAI+Z,IAAI;EAC9DqsB,MAAMrsB,IAAE,IAAI,MAAMA,IAAE;EAEpBqrB,EAAG,KAAKgB;EACRhB,EAAG,KAAKiB;EACRjB,EAAG,KAAKkB;EACRlB,EAAG,KAAKmB;EACRnB,EAAG,KAAKoB;EACRpB,EAAG,KAAKqB;EACRrB,EAAG,KAAKsB;EACRtB,EAAG,KAAKuB;EACRvB,EAAG,KAAKwB;EACRxB,EAAG,KAAKyB;EACRzB,EAAE,MAAM0B;EACR1B,EAAE,MAAM2B;EACR3B,EAAE,MAAM4B;EACR5B,EAAE,MAAM6B;EACR7B,EAAE,MAAM8B;EACR9B,EAAE,MAAM+B;;;;AC9ixJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpjtr3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChzjlbdrzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClzjwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClhxrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrhpxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjrtmzpvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnxGA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChpnvxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;;IAGIgC,YAAY;;;;aAIJ9/B,SAAS;WAAsBA;;aAC/B1N,WAAW;WAAsBA;;aACjCoG,WAAW;WAAsBA;;YAClCE,MAAM;;IAGbF,SAASonC;AAEbhxC,OAAOiR,UAAUA,UAAUrH,OAAOqnC;;IAG9BrnC,OAAOqnC;EACVhgC,QAAQigC,UAAUtnC,OAAOqnC,MAAMtmC,KAAKf;;AAGrCqH,QAAQkgC,UAAUvnC,OAAOunC;AACzBlgC,QAAQmgC,UAAUxnC,OAAOwnC;AACzBngC,QAAQogC,WAAWznC,OAAOynC;;;ACxB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AERA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxtlhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdfjplTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjhvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;OAEQhd,UAAW1qB,QAAQ;;MAErB2nC,aAAa3nC,QAAQ;MACrB4nC,eAAe5nC,QAAQ;MAEvB6nC,gBAAgB;;MAChBC,oBAAoB,KAAK;;;;AAK/B,gBAAiB1W;EACfA,UAAUA;QAEJ2W,WAAW1gC,KAAKqpB,IA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;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9DA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1DA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtxbIrkB,SAASj7B,QAAQ;KAEfu/C,eAAgBv/C,QAAQ;;;;;;MAOxBw/C,uBAAuB;IACzB31B,MAAMwe;IAENrK,SAAS,AAAA7lB;OACN0R,QAAQA,KAAKlwB,SAASwe;IACzB0R,OAAOa,OAAO6C,YAAYpV,QAAQqnC;IAClCvkB,OAAOwkB,eAAe51B;IACtBwe,aAAa;aACJA,aAAalwB,QAAQ0R,KAAKlwB;IACnCshC,OAAOwkB,eAAe51B;IACtBwe,aAAa;;MAGXgF,MAAMxjB,KAAKqK,SAASmU,YAAYA,aAAalwB;EACjDkwB,cAAclwB;SACPk1B;;IAGLqS,eAAe,CAAC9kB,UAAUpN,MAAMmyB;;;;;MAK9BC,QAAQ,KAAM,KAAKv4C,KAAKw4C,MAAOjlB,SAASjhC,SAAS,IAAK,MAAO;;;;;;;;;;;MAa7DmmD,OAAOz4C,KAAKuqB,KAAM,MAAMguB,OAAOpyB,OAAQoN,SAASjhC;SAE7C;QACDN,KAAK;WACF;UACD8e,QAAQwnC,UAAUG;;UAElBpmD,IAAIomD;aACDpmD;;QAELL,MAAMuhC,SAASziB,MAAMze,KAAKkmD,SAAS;YAC/BvmD,GAAGM,WAAW6zB,aAAan0B;;;;;IAMnC0mD,iBAAiB,CAACnlB,UAAUpN,SAASkyB,aAAa9kB,UAAUpN,MAAMwQ;IAElEgiB,SAAS,CAACxyB,OAAO;MACfrV,QAAQ6lB,OAAOxQ;MACfn0B,KAAK;;SAEFm0B;;;;;;IAMLn0B,MAAMkmD,YAAYpnC,MAAMqV,QAAQ;;SAE3Bn0B;;AAGThD,OAAOiR;EAAY04C;EAAQD;EAAgBL;EAAcH;EAAavhB;;;;AC/EtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChGA;;;;;IAIIiiB,YAAY;;;IAIZC,aAAa;AAEjB;YACY//C,MAAM;;IAGduqB,SAAS1qB,QAAQ,eAAe0qB;IAChCuQ,SAASh7B,OAAOg7B,UAAUh7B,OAAO29B;IAEjC3C,UAAUA,OAAO0C;EACnBtnC,OAAOiR,UAAU22B;;EAEjB5nC,OAAOiR,UAAU64C;;AAGnB,qBAAsB3yB,MAAMrvB;;MAEtBqvB,OAAO0yB,sBAAsBvpC,WAAW;MAExCwB,QAAQuS,OAAO6C,YAAYC;MAE3BA,OAAO;;QACLA,OAAOyyB;;;eAEAzjB,YAAY,GAAGA,YAAYhP,MAAMgP,aA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AAG,YAAY4xD,WAAWpwD,KAAK,MAAM2D;SACrCA;;AAGTtO,OAAOiR,UAAU07C;;;AC9MjtvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/FA;IACIt4B,SAAS1qB,QAAQ,UAAU0qB;IAC3B41B,WAAWtgD,QAAQ;IACnBugD,WAAWvgD,QAAQ;IAEnBwgD,cAAcxkD,MAAM;IAEpBq1D,MACF,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAClD,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GACnD,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAClD,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GACnD,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI;IAGhDC,MACF,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAClD,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GACnD,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAClD,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAClD,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG;IAGhDC,MACF,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GACrD,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IACpD,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GACrD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IACpD,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG;IAGnDC,MACF,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GACrD,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IACpD,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GACrD,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GACrD,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI;IAGlDC,MAAM,YAAY,YAAY,YAAY,YAAY;IACtDC,MAAM,YAAY,YAAY,YAAY,YAAY;AAE1D;EACEnR,SAAS3pD,KAAK,MAAM;;EAGpB,KAAKyY,KAAK;EACV,KAAKqJ,KAAK;EACV,KAAK1K,KAAK;EACV,KAAKwB,KAAK;EACV,KAAKmiD,KAAK;;AAGZrR,SAASsR,WAAWrR;AAEpBqR,UAAU/wD,UAAU6/C,UAAU;MACxBmR,QAAQrR;WACHp6C,IAAI,GAAGA,IAAI,MAAMA,GAAGyrD,MAAMzrD,KAAK,KAAKu6C,OAAOlR,YAAYrpC,IAAI;MAEhE0rD,KAAK,KAAKziD,KAAK;MACf2mC,KAAK,KAAKt9B,KAAK;MACfq5C,KAAK,KAAK/jD,KAAK;MACfgkD,KAAK,KAAKxiD,KAAK;MACfyiD,KAAK,KAAKN,KAAK;MAEfO,KAAK,KAAK7iD,KAAK;MACf8iD,KAAK,KAAKz5C,KAAK;MACf05C,KAAK,KAAKpkD,KAAK;MACfqkD,KAAK,KAAK7iD,KAAK;MACf61C,KAAK,KAAKsM,KAAK;;WAGVj4D,IAAI,GAAGA,IAAI,IAAIA,KAAK;QACvB44D;QACAC;QACA74D,IAAI;MACN44D,KAAKE,IAAIV,IAAI9b,IAAI+b,IAAIC,IAAIC,IAAIJ,MAAMR,GAAG33D,KAAK+3D,GAAG,IAAIF,GAAG73D;MACrD64D,KAAKE,IAAIP,IAAIC,IAAIC,IAAIC,IAAIhN,IAAIwM,MAAMP,GAAG53D,KAAKg4D,GAAG,IAAIF,GAAG93D;eAC5CA,IAAI;MACb44D,KAAKI,IAAIZ,IAAI9b,IAAI+b,IAAIC,IAAIC,IAAIJ,MAAMR,GAAG33D,KAAK+3D,GAAG,IAAIF,GAAG73D;MACrD64D,KAAKI,IAAIT,IAAIC,IAAIC,IAAIC,IAAIhN,IAAIwM,MAAMP,GAAG53D,KAAKg4D,GAAG,IAAIF,GAAG93D;eAC5CA,IAAI;MACb44D,KAAKM,IAAId,IAAI9b,IAAI+b,IAAIC,IAAIC,IAAIJ,MAAMR,GAAG33D,KAAK+3D,GAAG,IAAIF,GAAG73D;MACrD64D,KAAKK,IAAIV,IAAIC,IAAIC,IAAIC,IAAIhN,IAAIwM,MAAMP,GAAG53D,KAAKg4D,GAAG,IAAIF,GAAG93D;eAC5CA,IAAI;MACb44D,KAAKK,IAAIb,IAAI9b,IAAI+b,IAAIC,IAAIC,IAAIJ,MAAMR,GAAG33D,KAAK+3D,GAAG,IAAIF,GAAG73D;MACrD64D,KAAKG,IAAIR,IAAIC,IAAIC,IAAIC,IAAIhN,IAAIwM,MAAMP,GAAG53D,KAAKg4D,GAAG,IAAIF,GAAG93D;;;MAErD44D,KAAKG,IAAIX,IAAI9b,IAAI+b,IAAIC,IAAIC,IAAIJ,MAAMR,GAAG33D,KAAK+3D,GAAG,IAAIF,GAAG73D;MACrD64D,KAAKC,IAAIN,IAAIC,IAAIC,IAAIC,IAAIhN,IAAIwM,MAAMP,GAAG53D,KAAKg4D,GAAG,IAAIF,GAAG93D;;IAGvDo4D,KAAKG;IACLA,KAAKD;IACLA,KAAK7Q,KAAK4Q,IAAI;IACdA,KAAK/b;IACLA,KAAKsc;IAELJ,KAAK7M;IACLA,KAAKgN;IACLA,KAAKlR,KAAKiR,IAAI;IACdA,KAAKD;IACLA,KAAKI;;;MAIH5/B,IAAK,KAAKja,KAAKq5C,KAAKM,KAAM;EAC9B,KAAK35C,KAAM,KAAK1K,KAAKgkD,KAAK3M,KAAM;EAChC,KAAKr3C,KAAM,KAAKwB,KAAKyiD,KAAKC,KAAM;EAChC,KAAK1iD,KAAM,KAAKmiD,KAAKG,KAAKK,KAAM;EAChC,KAAKR,KAAM,KAAKtiD,KAAK2mC,KAAKoc,KAAM;EAChC,KAAK/iD,KAAKsjB;;AAGZi/B,UAAU/wD,UAAUmgD,UAAU;;EAE5B,KAAKL,OAAO,KAAKM,kBAAkB;MAC/B,KAAKA,eAAe;IACtB,KAAKN,OAAO9W,KAAK,GAAG,KAAKoX,cAAc;IACvC,KAAKP;IACL,KAAKO,eAAe;;EAGtB,KAAKN,OAAO9W,KAAK,GAAG,KAAKoX,cAAc;EACvC,KAAKN,OAAO/P,cAAc,KAAKsQ,QAAQ,IAAI;EAC3C,KAAKP,OAAO/P,cAAc,KAAKsQ,QAAQ,IAAI;EAC3C,KAAKR;;MAGDhpC,SAASgT,OAAO0d,QAAQ1d,OAAO0d,MAAM,UAAU1d,OAAO;EAC1DhT,OAAO45B,aAAa,KAAKjiC,IAAI;EAC7BqI,OAAO45B,aAAa,KAAK54B,IAAI;EAC7BhB,OAAO45B,aAAa,KAAKtjC,IAAI;EAC7B0J,OAAO45B,aAAa,KAAK9hC,IAAI;EAC7BkI,OAAO45B,aAAa,KAAKqgB,IAAI;SACtBj6C;;AAGT,cAAetH,GAAGoe;SACRpe,KAAKoe,IAAMpe,MAAO,KAAKoe;;AAGjC,aAAcrqB,GAAGwP,GAAGsE,GAAGnc,GAAGf,GAAGid,GAAGnc,GAAGkc;SACzBopC,KAAMh9C,KAAKwP,IAAIsE,IAAInc,KAAKkc,IAAInc,IAAK,GAAGkc,KAAKhd,IAAK;;AAGxD,aAAcoJ,GAAGwP,GAAGsE,GAAGnc,GAAGf,GAAGid,GAAGnc,GAAGkc;SACzBopC,KAAMh9C,KAAMwP,IAAIsE,KAAQtE,IAAK7X,KAAMkc,IAAInc,IAAK,GAAGkc,KAAKhd,IAAK;;AAGnE,aAAcoJ,GAAGwP,GAAGsE,GAAGnc,GAAGf,GAAGid,GAAGnc,GAAGkc;SACzBopC,KAAMh9C,MAAMwP,KAAMsE,KAAMnc,KAAKkc,IAAInc,IAAK,GAAGkc,KAAKhd,IAAK;;AAG7D,aAAcoJ,GAAGwP,GAAGsE,GAAGnc,GAAGf,GAAGid,GAAGnc,GAAGkc;SACzBopC,KAAMh9C,KAAMwP,IAAI7X,IAAMmc,KAAMnc,KAAOkc,IAAInc,IAAK,GAAGkc,KAAKhd,IAAK;;AAGnE,aAAcoJ,GAAGwP,GAAGsE,GAAGnc,GAAGf,GAAGid,GAAGnc,GAAGkc;SACzBopC,KAAMh9C,KAAKwP,KAAKsE,KAAMnc,MAAOkc,IAAInc,IAAK,GAAGkc,KAAKhd,IAAK;;AAG7D1E,OAAOiR,UAAUsqD;;;AClKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ICNItR,WAAWtgD,QAAQ;IACnB6yD,OAAO7yD,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCooC,KACF,YAAY,YAAY,aAAa,GAAG,aAAa;IAGnD7sD,QAAQjK,MAAM;AAElB;EACE,KAAKy4B;EACL,KAAKhlB,KAAKxJ;EAEV4sD,KAAKj8D,KAAK,MAAM,IAAI;;AAGtB0pD,SAASyS,KAAKF;AAEdE,IAAIlyD,UAAU4zB,OAAO;EACnB,KAAKplB,KAAK;EACV,KAAKqJ,KAAK;EACV,KAAK1K,KAAK;EACV,KAAKwB,KAAK;EACV,KAAKmiD,KAAK;SAEH;;AAGT,eAAgBp5B;SACNA,OAAO,IAAMA,QAAQ;;AAG/B,gBAAiBA;SACPA,OAAO,KAAOA,QAAQ;;AAGhC,YAAaxgB,GAAGpE,GAAGsE,GAAGnc;MAChBic,MAAM,UAAWpE,IAAIsE,KAAQtE,IAAK7X;MAClCic,MAAM,UAAWpE,IAAIsE,IAAMtE,IAAI7X,IAAMmc,IAAInc;SACtC6X,IAAIsE,IAAInc;;AAGjBi3D,IAAIlyD,UAAU6/C,UAAU,UAAU7d;MAC5B58B,IAAI,KAAKwJ;MAETtL,IAAI,KAAKkL,KAAK;MACdsE,IAAI,KAAK+E,KAAK;MACdT,IAAI,KAAKjK,KAAK;MACdlS,IAAI,KAAK0T,KAAK;MACdzU,IAAI,KAAK42D,KAAK;WAETj4D,IAAI,GAAGA,IAAI,MAAMA,GAAGuM,EAAEvM,KAAKmpC,EAAE6M,YAAYh2C,IAAI;SAC/CA,IAAI,MAAMA,GAAGuM,EAAEvM,KAAKuM,EAAEvM,IAAI,KAAKuM,EAAEvM,IAAI,KAAKuM,EAAEvM,IAAI,MAAMuM,EAAEvM,IAAI;WAE1D0M,IAAI,GAAGA,IAAI,MAAMA;QACpB2R,OAAO3R,IAAI;QACXusB,IAAKqgC,MAAM7uD,KAAK8uD,GAAGl7C,GAAGpE,GAAGsE,GAAGnc,KAAKf,IAAIkL,EAAEG,KAAK0sD,EAAE/6C,KAAM;IAExDhd,IAAIe;IACJA,IAAImc;IACJA,IAAIi7C,OAAOv/C;IACXA,IAAIxP;IACJA,IAAIwuB;;EAGN,KAAKtjB,KAAMlL,IAAI,KAAKkL,KAAM;EAC1B,KAAKqJ,KAAM/E,IAAI,KAAK+E,KAAM;EAC1B,KAAK1K,KAAMiK,IAAI,KAAKjK,KAAM;EAC1B,KAAKwB,KAAM1T,IAAI,KAAK0T,KAAM;EAC1B,KAAKmiD,KAAM52D,IAAI,KAAK42D,KAAM;;AAG5BoB,IAAIlyD,UAAUsyD,QAAQ;MAChBC,IAAI1oC,OAAO6C,YAAY;EAE3B6lC,EAAE7hB,aAAa,KAAKliC,KAAK,GAAG;EAC5B+jD,EAAE7hB,aAAa,KAAK74B,KAAK,GAAG;EAC5B06C,EAAE7hB,aAAa,KAAKvjC,KAAK,GAAG;EAC5BolD,EAAE7hB,aAAa,KAAK/hC,KAAK,GAAG;EAC5B4jD,EAAE7hB,aAAa,KAAKogB,KAAK,GAAG;SAErByB;;AAGT/8D,OAAOiR,UAAUyrD;;;IC7FbroC,SAAS1qB,QAAQ,eAAe0qB;;AAGpC,cAAe42B,WAAW+R;EACxB,KAAK1S,SAASj2B,OAAO0d,MAAMkZ;EAC3B,KAAKgS,aAAaD;EAClB,KAAK9R,aAAaD;EAClB,KAAKiS,OAAO;;AAGdV,KAAKhyD,UAAUs4B,SAAS,UAAUriC,MAAMgvD;aAC3BhvD,SAAS;IAClBgvD,MAAMA,OAAO;IACbhvD,OAAO4zB,OAAO3O,KAAKjlB,MAAMgvD;;MAGvB5M,QAAQ,KAAKyH;MACbW,YAAY,KAAKC;MACjB5nD,SAAS7C,KAAK6C;MACd65D,QAAQ,KAAKD;WAERt6C,SAAS,GAAGA,SAAStf;QACxB85D,WAAWD,QAAQlS;QACnBnE,YAAY91C,KAAKupB,IAAIj3B,SAASsf,QAAQqoC,YAAYmS;aAE7C/5D,IAAI,GAAGA,IAAIyjD,WAAWzjD;MAC7Bw/C,MAAMua,WAAW/5D,KAAK5C,KAAKmiB,SAASvf;;IAGtC85D,SAASrW;IACTlkC,UAAUkkC;QAELqW,QAAQlS,cAAe;MAC1B,KAAKZ,QAAQxH;;;EAIjB,KAAKqa,QAAQ55D;SACN;;AAGTk5D,KAAKhyD,UAAUm7B,SAAS,UAAU8pB;MAC5B4N,MAAM,KAAKH,OAAO,KAAKhS;EAE3B,KAAKZ,OAAO+S,OAAO;;;EAInB,KAAK/S,OAAO9W,KAAK,GAAG6pB,MAAM;MAEtBA,OAAO,KAAKJ;IACd,KAAK5S,QAAQ,KAAKC;IAClB,KAAKA,OAAO9W,KAAK;;MAGfje,OAAO,KAAK2nC,OAAO;;MAGnB3nC,QAAQ;IACV,KAAK+0B,OAAO7P,cAAcllB,MAAM,KAAK21B,aAAa;;QAI9CoS,WAAW/nC,OAAO,gBAAgB;QAClCgoC,YAAYhoC,OAAO+nC,WAAW;IAElC,KAAKhT,OAAO7P,cAAc8iB,UAAU,KAAKrS,aAAa;IACtD,KAAKZ,OAAO7P,cAAc6iB,SAAS,KAAKpS,aAAa;;EAGvD,KAAKb,QAAQ,KAAKC;MACdj1B,OAAO,KAAKynC;SAETrN,MAAMp6B,KAAKxI,SAAS4iC,OAAOp6B;;AAGpCmnC,KAAKhyD,UAAU6/C,UAAU;YACbvgD,MAAM;;AAGlB9J,OAAOiR,UAAUurD;;;;;;;;;;;ICvEbvS,WAAWtgD,QAAQ;IACnB6yD,OAAO7yD,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCooC,KACF,YAAY,YAAY,aAAa,GAAG,aAAa;IAGnD7sD,QAAQjK,MAAM;AAElB;EACE,KAAKy4B;EACL,KAAKhlB,KAAKxJ;EAEV4sD,KAAKj8D,KAAK,MAAM,IAAI;;AAGtB0pD,SAASuT,MAAMhB;AAEfgB,KAAKhzD,UAAU4zB,OAAO;EACpB,KAAKplB,KAAK;EACV,KAAKqJ,KAAK;EACV,KAAK1K,KAAK;EACV,KAAKwB,KAAK;EACV,KAAKmiD,KAAK;SAEH;;AAGT,eAAgBp5B;SACNA,OAAO,IAAMA,QAAQ;;AAG/B,eAAgBA;SACNA,OAAO,IAAMA,QAAQ;;AAG/B,gBAAiBA;SACPA,OAAO,KAAOA,QAAQ;;AAGhC,YAAaxgB,GAAGpE,GAAGsE,GAAGnc;MAChBic,MAAM,UAAWpE,IAAIsE,KAAQtE,IAAK7X;MAClCic,MAAM,UAAWpE,IAAIsE,IAAMtE,IAAI7X,IAAMmc,IAAInc;SACtC6X,IAAIsE,IAAInc;;AAGjB+3D,KAAKhzD,UAAU6/C,UAAU,UAAU7d;MAC7B58B,IAAI,KAAKwJ;MAETtL,IAAI,KAAKkL,KAAK;MACdsE,IAAI,KAAK+E,KAAK;MACdT,IAAI,KAAKjK,KAAK;MACdlS,IAAI,KAAK0T,KAAK;MACdzU,IAAI,KAAK42D,KAAK;WAETj4D,IAAI,GAAGA,IAAI,MAAMA,GAAGuM,EAAEvM,KAAKmpC,EAAE6M,YAAYh2C,IAAI;SAC/CA,IAAI,MAAMA,GAAGuM,EAAEvM,KAAKo6D,MAAM7tD,EAAEvM,IAAI,KAAKuM,EAAEvM,IAAI,KAAKuM,EAAEvM,IAAI,MAAMuM,EAAEvM,IAAI;WAEhE0M,IAAI,GAAGA,IAAI,MAAMA;QACpB2R,OAAO3R,IAAI;QACXusB,IAAKqgC,MAAM7uD,KAAK8uD,GAAGl7C,GAAGpE,GAAGsE,GAAGnc,KAAKf,IAAIkL,EAAEG,KAAK0sD,EAAE/6C,KAAM;IAExDhd,IAAIe;IACJA,IAAImc;IACJA,IAAIi7C,OAAOv/C;IACXA,IAAIxP;IACJA,IAAIwuB;;EAGN,KAAKtjB,KAAMlL,IAAI,KAAKkL,KAAM;EAC1B,KAAKqJ,KAAM/E,IAAI,KAAK+E,KAAM;EAC1B,KAAK1K,KAAMiK,IAAI,KAAKjK,KAAM;EAC1B,KAAKwB,KAAM1T,IAAI,KAAK0T,KAAM;EAC1B,KAAKmiD,KAAM52D,IAAI,KAAK42D,KAAM;;AAG5BkC,KAAKhzD,UAAUsyD,QAAQ;MACjBC,IAAI1oC,OAAO6C,YAAY;EAE3B6lC,EAAE7hB,aAAa,KAAKliC,KAAK,GAAG;EAC5B+jD,EAAE7hB,aAAa,KAAK74B,KAAK,GAAG;EAC5B06C,EAAE7hB,aAAa,KAAKvjC,KAAK,GAAG;EAC5BolD,EAAE7hB,aAAa,KAAK/hC,KAAK,GAAG;EAC5B4jD,EAAE7hB,aAAa,KAAKogB,KAAK,GAAG;SAErByB;;AAGT/8D,OAAOiR,UAAUusD;;;;;;;;;;IC1FbvT,WAAWtgD,QAAQ;IACnB+zD,SAAS/zD,QAAQ;IACjB6yD,OAAO7yD,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCzkB,QAAQjK,MAAM;AAElB;EACE,KAAKy4B;EAEL,KAAKhlB,KAAKxJ;;EAEV4sD,KAAKj8D,KAAK,MAAM,IAAI;;AAGtB0pD,SAAS0T,QAAQD;AAEjBC,OAAOnzD,UAAU4zB,OAAO;EACtB,KAAKplB,KAAK;EACV,KAAKqJ,KAAK;EACV,KAAK1K,KAAK;EACV,KAAKwB,KAAK;EACV,KAAKmiD,KAAK;EACV,KAAKp8C,KAAK;EACV,KAAK0+C,KAAK;EACV,KAAKtlD,KAAK;SAEH;;AAGTqlD,OAAOnzD,UAAUsyD,QAAQ;MACnBC,IAAI1oC,OAAO6C,YAAY;EAE3B6lC,EAAE7hB,aAAa,KAAKliC,IAAI;EACxB+jD,EAAE7hB,aAAa,KAAK74B,IAAI;EACxB06C,EAAE7hB,aAAa,KAAKvjC,IAAI;EACxBolD,EAAE7hB,aAAa,KAAK/hC,IAAI;EACxB4jD,EAAE7hB,aAAa,KAAKogB,IAAI;EACxByB,EAAE7hB,aAAa,KAAKh8B,IAAI;EACxB69C,EAAE7hB,aAAa,KAAK0iB,IAAI;SAEjBb;;AAGT/8D,OAAOiR,UAAU0sD;;;;;;;;;;IC5Cb1T,WAAWtgD,QAAQ;IACnB6yD,OAAO7yD,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCooC,KACF,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY;IAGlC7sD,QAAQjK,MAAM;AAElB;EACE,KAAKy4B;EAEL,KAAKhlB,KAAKxJ;;EAEV4sD,KAAKj8D,KAAK,MAAM,IAAI;;AAGtB0pD,SAASyT,QAAQlB;AAEjBkB,OAAOlzD,UAAU4zB,OAAO;EACtB,KAAKplB,KAAK;EACV,KAAKqJ,KAAK;EACV,KAAK1K,KAAK;EACV,KAAKwB,KAAK;EACV,KAAKmiD,KAAK;EACV,KAAKp8C,KAAK;EACV,KAAK0+C,KAAK;EACV,KAAKtlD,KAAK;SAEH;;AAGT,YAAayB,GAAG8zB,GAAGgwB;SACVA,IAAK9jD,KAAK8zB,IAAIgwB;;AAGvB,aAAc9jD,GAAG8zB,GAAGgwB;SACV9jD,IAAI8zB,IAAMgwB,KAAK9jD,IAAI8zB;;AAG7B,gBAAiB9zB;UACPA,MAAM,IAAIA,KAAK,OAAOA,MAAM,KAAKA,KAAK,OAAOA,MAAM,KAAKA,KAAK;;AAGvE,gBAAiBA;UACPA,MAAM,IAAIA,KAAK,OAAOA,MAAM,KAAKA,KAAK,OAAOA,MAAM,KAAKA,KAAK;;AAGvE,gBAAiBA;UACPA,MAAM,IAAIA,KAAK,OAAOA,MAAM,KAAKA,KAAK,MAAOA,MAAM;;AAG7D,gBAAiBA;UACPA,MAAM,KAAKA,KAAK,OAAOA,MAAM,KAAKA,KAAK,MAAOA,MAAM;;AAG9D2jD,OAAOlzD,UAAU6/C,UAAU,UAAU7d;MAC/B58B,IAAI,KAAKwJ;MAETtL,IAAI,KAAKkL,KAAK;MACdsE,IAAI,KAAK+E,KAAK;MACdT,IAAI,KAAKjK,KAAK;MACdlS,IAAI,KAAK0T,KAAK;MACdzU,IAAI,KAAK42D,KAAK;MACd/uD,IAAI,KAAK2S,KAAK;MACdotB,IAAI,KAAKsxB,KAAK;MACd7xB,IAAI,KAAKzzB,KAAK;WAETjV,IAAI,GAAGA,IAAI,MAAMA,GAAGuM,EAAEvM,KAAKmpC,EAAE6M,YAAYh2C,IAAI;SAC/CA,IAAI,MAAMA,GAAGuM,EAAEvM,KAAMy6D,OAAOluD,EAAEvM,IAAI,MAAMuM,EAAEvM,IAAI,KAAK06D,OAAOnuD,EAAEvM,IAAI,OAAOuM,EAAEvM,IAAI,MAAO;WAElF0M,IAAI,GAAGA,IAAI,MAAMA;QACpBiuD,KAAMjyB,IAAIkyB,OAAOv5D,KAAKw5D,GAAGx5D,GAAG6H,GAAG+/B,KAAKmwB,EAAE1sD,KAAKH,EAAEG,KAAM;QACnDouD,KAAMC,OAAOtwD,KAAKuwD,IAAIvwD,GAAGwP,GAAGsE,KAAM;IAEtCmqB,IAAIO;IACJA,IAAI//B;IACJA,IAAI7H;IACJA,IAAKe,IAAIu4D,KAAM;IACfv4D,IAAImc;IACJA,IAAItE;IACJA,IAAIxP;IACJA,IAAKkwD,KAAKG,KAAM;;EAGlB,KAAKnlD,KAAMlL,IAAI,KAAKkL,KAAM;EAC1B,KAAKqJ,KAAM/E,IAAI,KAAK+E,KAAM;EAC1B,KAAK1K,KAAMiK,IAAI,KAAKjK,KAAM;EAC1B,KAAKwB,KAAM1T,IAAI,KAAK0T,KAAM;EAC1B,KAAKmiD,KAAM52D,IAAI,KAAK42D,KAAM;EAC1B,KAAKp8C,KAAM3S,IAAI,KAAK2S,KAAM;EAC1B,KAAK0+C,KAAMtxB,IAAI,KAAKsxB,KAAM;EAC1B,KAAKtlD,KAAMyzB,IAAI,KAAKzzB,KAAM;;AAG5BolD,OAAOlzD,UAAUsyD,QAAQ;MACnBC,IAAI1oC,OAAO6C,YAAY;EAE3B6lC,EAAE7hB,aAAa,KAAKliC,IAAI;EACxB+jD,EAAE7hB,aAAa,KAAK74B,IAAI;EACxB06C,EAAE7hB,aAAa,KAAKvjC,IAAI;EACxBolD,EAAE7hB,aAAa,KAAK/hC,IAAI;EACxB4jD,EAAE7hB,aAAa,KAAKogB,IAAI;EACxByB,EAAE7hB,aAAa,KAAKh8B,IAAI;EACxB69C,EAAE7hB,aAAa,KAAK0iB,IAAI;EACxBb,EAAE7hB,aAAa,KAAK5iC,IAAI;SAEjBykD;;AAGT/8D,OAAOiR,UAAUysD;;;ICtIbzT,WAAWtgD,QAAQ;IACnB20D,SAAS30D,QAAQ;IACjB6yD,OAAO7yD,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCzkB,QAAQjK,MAAM;AAElB;EACE,KAAKy4B;EACL,KAAKhlB,KAAKxJ;EAEV4sD,KAAKj8D,KAAK,MAAM,KAAK;;AAGvB0pD,SAASsU,QAAQD;AAEjBC,OAAO/zD,UAAU4zB,OAAO;EACtB,KAAKogC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EAEX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;SAEJ;;AAGThB,OAAO/zD,UAAUsyD,QAAQ;MACnBC,IAAI1oC,OAAO6C,YAAY;EAE3B,sBAAuB6U,GAAGn9B,GAAGgU;IAC3Bm6C,EAAE7hB,aAAanP,GAAGnpB;IAClBm6C,EAAE7hB,aAAatsC,GAAGgU,SAAS;;EAG7B48C,aAAa,KAAKhB,KAAK,KAAKQ,KAAK;EACjCQ,aAAa,KAAKf,KAAK,KAAKQ,KAAK;EACjCO,aAAa,KAAKd,KAAK,KAAKQ,KAAK;EACjCM,aAAa,KAAKb,KAAK,KAAKQ,KAAK;EACjCK,aAAa,KAAKZ,KAAK,KAAKQ,KAAK;EACjCI,aAAa,KAAKX,KAAK,KAAKQ,KAAK;SAE1BtC;;AAGT/8D,OAAOiR,UAAUstD;;;ICxDbtU,WAAWtgD,QAAQ;IACnB6yD,OAAO7yD,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCooC,KACF,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY;IAGlC7sD,QAAQjK,MAAM;AAElB;EACE,KAAKy4B;EACL,KAAKhlB,KAAKxJ;EAEV4sD,KAAKj8D,KAAK,MAAM,KAAK;;AAGvB0pD,SAASwV,QAAQjD;AAEjBiD,OAAOj1D,UAAU4zB,OAAO;EACtB,KAAKogC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EAEX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;EACX,KAAKC,MAAM;SAEJ;;AAGT,YAAaxlD,GAAG8zB,GAAGgwB;SACVA,IAAK9jD,KAAK8zB,IAAIgwB;;AAGvB,aAAc9jD,GAAG8zB,GAAGgwB;SACV9jD,IAAI8zB,IAAMgwB,KAAK9jD,IAAI8zB;;AAG7B,gBAAiB9zB,GAAG2lD;UACV3lD,MAAM,KAAK2lD,MAAM,MAAMA,OAAO,IAAI3lD,KAAK,OAAO2lD,OAAO,IAAI3lD,KAAK;;AAGxE,gBAAiBA,GAAG2lD;UACV3lD,MAAM,KAAK2lD,MAAM,OAAO3lD,MAAM,KAAK2lD,MAAM,OAAOA,OAAO,IAAI3lD,KAAK;;AAG1E,gBAAiBA,GAAG2lD;UACV3lD,MAAM,IAAI2lD,MAAM,OAAO3lD,MAAM,IAAI2lD,MAAM,MAAO3lD,MAAM;;AAG9D,iBAAkBA,GAAG2lD;UACX3lD,MAAM,IAAI2lD,MAAM,OAAO3lD,MAAM,IAAI2lD,MAAM,OAAO3lD,MAAM,IAAI2lD,MAAM;;AAGxE,gBAAiB3lD,GAAG2lD;UACV3lD,MAAM,KAAK2lD,MAAM,OAAOA,OAAO,KAAK3lD,KAAK,KAAMA,MAAM;;AAG/D,iBAAkBA,GAAG2lD;UACX3lD,MAAM,KAAK2lD,MAAM,OAAOA,OAAO,KAAK3lD,KAAK,MAAMA,MAAM,IAAI2lD,MAAM;;AAGzE,kBAAmB5xD,GAAGwP;SACZxP,MAAM,IAAMwP,MAAM,IAAK,IAAI;;AAGrCmiD,OAAOj1D,UAAU6/C,UAAU,UAAU7d;MAC/B58B,IAAI,KAAKwJ;MAETumD,KAAK,KAAKnB,MAAM;MAChBoB,KAAK,KAAKnB,MAAM;MAChBP,KAAK,KAAKQ,MAAM;MAChBmB,KAAK,KAAKlB,MAAM;MAChBmB,KAAK,KAAKlB,MAAM;MAChBmB,KAAK,KAAKlB,MAAM;MAChBmB,KAAK,KAAKlB,MAAM;MAChBmB,KAAK,KAAKlB,MAAM;MAEhBtD,KAAK,KAAKuD,MAAM;MAChBrf,KAAK,KAAKsf,MAAM;MAChBvD,KAAK,KAAKwD,MAAM;MAChBvD,KAAK,KAAKwD,MAAM;MAChBvD,KAAK,KAAKwD,MAAM;MAChBc,KAAK,KAAKb,MAAM;MAChBc,KAAK,KAAKb,MAAM;MAChBlE,KAAK,KAAKmE,MAAM;WAEXl8D,IAAI,GAAGA,IAAI,IAAIA,KAAK;IAC3BuM,EAAEvM,KAAKmpC,EAAE6M,YAAYh2C,IAAI;IACzBuM,EAAEvM,IAAI,KAAKmpC,EAAE6M,YAAYh2C,IAAI,IAAI;;SAE5BA,IAAI,KAAKA,KAAK;QACf+8D,KAAKxwD,EAAEvM,IAAI,KAAK;QAChBq8D,KAAK9vD,EAAEvM,IAAI,KAAK,IAAI;QACpB06D,SAASsC,OAAOD,IAAIV;QACpBY,UAAUC,QAAQb,IAAIU;IAE1BA,KAAKxwD,EAAEvM,IAAI,IAAI;IACfq8D,KAAK9vD,EAAEvM,IAAI,IAAI,IAAI;QACfy6D,SAAS0C,OAAOJ,IAAIV;QACpBe,UAAUC,QAAQhB,IAAIU;;QAGtBO,OAAO/wD,EAAEvM,IAAI,IAAI;QACjBu9D,OAAOhxD,EAAEvM,IAAI,IAAI,IAAI;QAErBw9D,QAAQjxD,EAAEvM,IAAI,KAAK;QACnBy9D,QAAQlxD,EAAEvM,IAAI,KAAK,IAAI;QAEvB09D,MAAOT,UAAUM,OAAQ;QACzBI,MAAOjD,SAAS4C,OAAOM,SAASF,KAAKT,WAAY;IACrDS,MAAOA,MAAMN,UAAW;IACxBO,MAAOA,MAAMlD,SAASmD,SAASF,KAAKN,WAAY;IAChDM,MAAOA,MAAMD,QAAS;IACtBE,MAAOA,MAAMH,QAAQI,SAASF,KAAKD,SAAU;IAE7ClxD,EAAEvM,KAAK29D;IACPpxD,EAAEvM,IAAI,KAAK09D;;WAGJhxD,IAAI,GAAGA,IAAI,KAAKA,KAAK;IAC5BixD,MAAMpxD,EAAEG;IACRgxD,MAAMnxD,EAAEG,IAAI;QAERmxD,OAAO7C,IAAIsB,IAAIC,IAAI1B;QACnBiD,OAAO9C,IAAI5C,IAAI9b,IAAI+b;QAEnB0F,UAAUhD,OAAOuB,IAAIlE;QACrB4F,UAAUjD,OAAO3C,IAAIkE;QACrB2B,UAAUrD,OAAO6B,IAAIlE;QACrB2F,UAAUtD,OAAOrC,IAAIkE;;QAGrB0B,MAAM/E,EAAE1sD;QACR0xD,MAAMhF,EAAE1sD,IAAI;QAEZ2xD,MAAMC,GAAG7B,IAAIC,IAAIC;QACjB4B,MAAMD,GAAG/F,IAAIsE,IAAIC;QAEjB0B,MAAOzG,KAAKmG,UAAW;QACvBO,MAAO7B,KAAKqB,UAAUL,SAASY,KAAKzG,MAAO;IAC/CyG,MAAOA,MAAMD,MAAO;IACpBE,MAAOA,MAAMJ,MAAMT,SAASY,KAAKD,OAAQ;IACzCC,MAAOA,MAAMJ,MAAO;IACpBK,MAAOA,MAAMN,MAAMP,SAASY,KAAKJ,OAAQ;IACzCI,MAAOA,MAAMd,MAAO;IACpBe,MAAOA,MAAMd,MAAMC,SAASY,KAAKd,OAAQ;;QAGrCgB,MAAOV,UAAUF,OAAQ;QACzBa,MAAOZ,UAAUF,OAAOD,SAASc,KAAKV,WAAY;IAEtDpB,KAAKD;IACL5E,KAAK+E;IACLH,KAAKD;IACLI,KAAKD;IACLH,KAAKD;IACLI,KAAKtE;IACLA,KAAMD,KAAKkG,MAAO;IAClB/B,KAAMD,KAAKiC,MAAMb,SAASrF,IAAID,MAAO;IACrCkE,KAAK3B;IACLvC,KAAKD;IACLwC,KAAK0B;IACLlE,KAAK/b;IACLigB,KAAKD;IACLhgB,KAAK8b;IACLA,KAAMoG,MAAME,MAAO;IACnBpC,KAAMmC,MAAME,MAAMf,SAASxF,IAAIoG,OAAQ;;EAGzC,KAAK7C,MAAO,KAAKA,MAAMvD,KAAM;EAC7B,KAAKwD,MAAO,KAAKA,MAAMtf,KAAM;EAC7B,KAAKuf,MAAO,KAAKA,MAAMxD,KAAM;EAC7B,KAAKyD,MAAO,KAAKA,MAAMxD,KAAM;EAC7B,KAAKyD,MAAO,KAAKA,MAAMxD,KAAM;EAC7B,KAAKyD,MAAO,KAAKA,MAAMa,KAAM;EAC7B,KAAKZ,MAAO,KAAKA,MAAMa,KAAM;EAC7B,KAAKZ,MAAO,KAAKA,MAAMnE,KAAM;EAE7B,KAAKoD,MAAO,KAAKA,MAAMmB,KAAKsB,SAAS,KAAKjC,KAAKvD,MAAO;EACtD,KAAKgD,MAAO,KAAKA,MAAMmB,KAAKqB,SAAS,KAAKhC,KAAKtf,MAAO;EACtD,KAAK+e,MAAO,KAAKA,MAAMR,KAAK+C,SAAS,KAAK/B,KAAKxD,MAAO;EACtD,KAAKiD,MAAO,KAAKA,MAAMkB,KAAKoB,SAAS,KAAK9B,KAAKxD,MAAO;EACtD,KAAKiD,MAAO,KAAKA,MAAMkB,KAAKmB,SAAS,KAAK7B,KAAKxD,MAAO;EACtD,KAAKiD,MAAO,KAAKA,MAAMkB,KAAKkB,SAAS,KAAK5B,KAAKa,MAAO;EACtD,KAAKpB,MAAO,KAAKA,MAAMkB,KAAKiB,SAAS,KAAK3B,KAAKa,MAAO;EACtD,KAAKpB,MAAO,KAAKA,MAAMkB,KAAKgB,SAAS,KAAK1B,KAAKnE,MAAO;;AAGxDqE,OAAOj1D,UAAUsyD,QAAQ;MACnBC,IAAI1oC,OAAO6C,YAAY;EAE3B,sBAAuB6U,GAAGn9B,GAAGgU;IAC3Bm6C,EAAE7hB,aAAanP,GAAGnpB;IAClBm6C,EAAE7hB,aAAatsC,GAAGgU,SAAS;;EAG7B48C,aAAa,KAAKhB,KAAK,KAAKQ,KAAK;EACjCQ,aAAa,KAAKf,KAAK,KAAKQ,KAAK;EACjCO,aAAa,KAAKd,KAAK,KAAKQ,KAAK;EACjCM,aAAa,KAAKb,KAAK,KAAKQ,KAAK;EACjCK,aAAa,KAAKZ,KAAK,KAAKQ,KAAK;EACjCI,aAAa,KAAKX,KAAK,KAAKQ,KAAK;EACjCG,aAAa,KAAKV,KAAK,KAAKQ,KAAK;EACjCE,aAAa,KAAKT,KAAK,KAAKQ,KAAK;SAE1BxC;;AAGT/8D,OAAOiR,UAAUwuD;;;ICnQbprC,SAAS1qB,QAAQ,eAAe0qB;IAChC02B,YAAYphD,QAAQ,UAAUohD;IAC9B2B,gBAAgB/iD,QAAQ,kBAAkB+iD;IAC1CzC,WAAWtgD,QAAQ;AAEvB,oBAAqBs4D;EACnBlX,UAAUxqD,KAAK;EACf,KAAK0hE,kBAAkBA,aAAa;MAChC,KAAKA;IACP,KAAKA,YAAY,KAAKC;;IAEtB,KAAKtL,QAAQ,KAAKsL;;MAEhB,KAAKrL;IACP,KAAKsL,UAAU,KAAKtL;IACpB,KAAKA,SAAS;;EAEhB,KAAKuL,WAAW;EAChB,KAAKC,YAAY;;AAEnBpY,SAASqY,YAAYvX;AAErBuX,WAAW93D,UAAUs4B,SAAS,UAAUriC,MAAM8hE,UAAUC;aAC3C/hE,SAAS;IAClBA,OAAO4zB,OAAO3O,KAAKjlB,MAAM8hE;;MAGvBE,UAAU,KAAKpY,QAAQ5pD;MACvB,KAAKwhE,iBAAiB;MAEtBO;IACFC,UAAU,KAAKC,UAAUD,SAASD;;SAG7BC;;AAGTH,WAAW93D,UAAUm4D,iBAAiB;AACtCL,WAAW93D,UAAUo4D,aAAa;YACtB94D,MAAM;;AAGlBw4D,WAAW93D,UAAUq4D,aAAa;YACtB/4D,MAAM;;AAGlBw4D,WAAW93D,UAAUs4D,SAAS;YAClBh5D,MAAM;;AAGlBw4D,WAAW93D,UAAU4gD,aAAa,UAAU3qD,MAAMo/C,GAAGzjC;MAC/C5C;;QAEE,KAAKyoD;MACP,KAAK5X,QAAQ5pD;;MAEb,KAAKM,KAAK,KAAKspD,QAAQ5pD;;WAElBiE;IACP8U,MAAM9U;;IAEN0X,KAAK5C;;;AAGT8oD,WAAW93D,UAAU6gD,SAAS,UAAUzlC;MAClCpM;;IAEF,KAAKzY,KAAK,KAAKohE;WACRz9D;IACP8U,MAAM9U;;EAGRkhB,KAAKpM;;AAEP8oD,WAAW93D,UAAU03D,iBAAiB,UAAUM;MAC1CC,UAAU,KAAKN,aAAa9tC,OAAO0d,MAAM;MACzCywB;IACFC,UAAU,KAAKC,UAAUD,SAASD,WAAW;;SAExCC;;AAGTH,WAAW93D,UAAUk4D,YAAY,UAAUx4D,OAAOulD,KAAKsT;OAChD,KAAKX;IACR,KAAKA,eAAe1V,cAAc+C;IAClC,KAAK4S,YAAY5S;;MAGf,KAAK4S,cAAc5S,eAAe3lD,MAAM;MAExCmI,MAAM,KAAKmwD,SAASlnC,MAAMhxB;MAC1B64D;IACF9wD,OAAO,KAAKmwD,SAAS1/B;;SAGhBzwB;;AAGTjS,OAAOiR,UAAUqxD;;;AClGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACYA;;;AAEAtiE,OAAOiR,UAAUs6C;;IAGbC;;AAGJD,SAASE,gBAAgBA;;IAGrBC,KAAK/hD,QAAQ,UAAUypB;IAEvBu4B,kBAAkB,yBAAyBC,SAASvpD;SAC/CupD,QAAQj5B,UAAUtwB,MAAMiB;;;;IAO7BuoD,SAASliD,QAAQ;;IAIjB0qB,SAAS1qB,QAAQ,UAAU0qB;IAE3By3B,gBAAgBliD,OAAO+qB,eAAc;AAEzC,6BAA6Bsd;SACpB5d,OAAO3O,KAAKusB;;AAGrB,uBAAuBhoB;SACdoK,OAAOye,SAAS7oB,QAAQA,eAAe6hC;;;IAK5CC,YAAYpiD,QAAQ;IAEpB2mB;IAEAy7B,aAAaA,UAAUC;EACzB17B,QAAQy7B,UAAUC,SAAS;;EAE3B17B,QAAQ;;;IAKNghB,aAAa3nC,QAAQ;IAErBsiD,cAActiD,QAAQ;IAEtBuiD,WAAWviD,QAAQ,6BACnBwiD,mBAAmBD,SAASC;IAE5BC,iBAAiBziD,QAAQ,aAAa0iD,OACtCC,uBAAuBF,eAAeE,sBACtCC,4BAA4BH,eAAeG,2BAC3CC,6BAA6BJ,eAAeI,4BAC5CC,qCAAqCL,eAAeK;;IAGpDC;IACAC;IACAjnC;AAEJ/b,QAAQ,YAAY4hD,UAAUM;IAE1Be,iBAAiBX,YAAYW;IAC7BC,gBAAgB,SAAS,SAAS,WAAW,SAAS;AAE1D,yBAAyBjB,SAAS1pD,OAAOpB;;;aAG5B8qD,QAAQn5B,oBAAoB,mBAAmBm5B,QAAQn5B,gBAAgBvwB,OAAOpB;;;;;OAKpF8qD,QAAQkB,YAAYlB,QAAQkB,QAAQ5qD,QAAQ0pD,QAAQziD,GAAGjH,OAAOpB,cAAa6E,MAAMC,QAAQgmD,QAAQkB,QAAQ5qD,SAAS0pD,QAAQkB,QAAQ5qD,OAAO0gC,QAAQ9hC,UAAS8qD,QAAQkB,QAAQ5qD,UAAUpB,IAAI8qD,QAAQkB,QAAQ5qD;;AAG/M,uBAAuB64B,SAASgyB,QAAQC;EACtCxB,SAASA,UAAU7hD,QAAQ;EAC3BoxB,UAAUA;;;;;;aAMCiyB,aAAa,WAAWA,WAAWD,kBAAkBvB;;;EAGhE,KAAKyB,eAAelyB,QAAQkyB;MACxBD,UAAU,KAAKC,aAAa,KAAKA,gBAAgBlyB,QAAQmyB;;;EAG7D,KAAKC,gBAAgBhB,iBAAiB,MAAMpxB,SAAS,yBAAyBiyB;;;;EAI9E,KAAK3rC,aAAaiwB;EAClB,KAAKhuC,SAAS;EACd,KAAK8pD,QAAQ;EACb,KAAKC,aAAa;EAClB,KAAKC,UAAU;EACf,KAAKC,QAAQ;EACb,KAAKC,aAAa;EAClB,KAAKC,UAAU;;;;;EAKf,KAAKC,OAAO;;;EAGZ,KAAKC,eAAe;EACpB,KAAKC,kBAAkB;EACvB,KAAKC,oBAAoB;EACzB,KAAKC,kBAAkB;EACvB,KAAKC,SAAS;;EAEd,KAAKC,YAAYjzB,QAAQizB,cAAc;;EAEvC,KAAKC,gBAAgBlzB,QAAQkzB;;EAE7B,KAAKC,YAAY;;;;EAIjB,KAAKC,kBAAkBpzB,QAAQozB,mBAAmB;;EAElD,KAAKC,aAAa;;EAElB,KAAKC,cAAc;EACnB,KAAK/O,UAAU;EACf,KAAKroB,WAAW;MAEZ8D,QAAQ9D;SACLy1B,eAAeA,gBAAgB/iD,QAAQ,mBAAmB+iD;IAC/D,KAAKpN,cAAcoN,cAAc3xB,QAAQ9D;IACzC,KAAKA,WAAW8D,QAAQ9D;;;AAI5B,kBAAkB8D;EAChBywB,SAASA,UAAU7hD,QAAQ;QACrB,gBAAgB4hD,sBAAsBA,SAASxwB;;;MAGjDiyB,WAAW,gBAAgBxB;EAC/B,KAAK8C,qBAAqB7C,cAAc1wB,SAAS,MAAMiyB;;EAEvD,KAAKuB,WAAW;MAEZxzB;eACSA,QAAQzC,SAAS,YAAY,KAAKk2B,QAAQzzB,QAAQzC;eAClDyC,QAAQ5L,YAAY,YAAY,KAAKs/B,WAAW1zB,QAAQ5L;;EAGrE08B,OAAOtrD,KAAK;;AAGd4J,OAAOmG,eAAei7C,SAAS/gD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;QACC,KAAKygD,mBAAmBrtD;aACnB;;WAGF,KAAKqtD,eAAeJ;;EAE7Bz+C,KAAK,aAAavF;;;SAGX,KAAKokD;;;;;IAMV,KAAKA,eAAeJ,YAAYhkD;;;AAGpCqhD,SAAS/gD,UAAU2kB,UAAU88B,YAAY98B;AACzCo8B,SAAS/gD,UAAUkkD,aAAazC,YAAY0C;AAE5CpD,SAAS/gD,UAAUikD,WAAW,UAAUj1C,KAAK1R;EAC3CA,GAAG0R;;;;;;AAOL+xC,SAAS/gD,UAAUzJ,OAAO,UAAUkxC,OAAOhb;MACrChL,QAAQ,KAAKqiC;MACbM;OAEC3iC,MAAMghC;eACEhb,UAAU;MACnBhb,WAAWA,YAAYhL,MAAMkiC;UAEzBl3B,aAAahL,MAAMgL;QACrBgb,QAAQ5d,OAAO3O,KAAKusB,OAAOhb;QAC3BA,WAAW;;MAGb23B,iBAAiB;;;IAGnBA,iBAAiB;;SAGZC,iBAAiB,MAAM5c,OAAOhb,UAAU,OAAO23B;;;AAIxDrD,SAAS/gD,UAAUo4B,UAAU,UAAUqP;SAC9B4c,iBAAiB,MAAM5c,OAAO,MAAM,MAAM;;AAGnD,0BAA0B8a,QAAQ9a,OAAOhb,UAAU63B,YAAYF;EAC7Dt+B,MAAM,oBAAoB2hB;MACtBhmB,QAAQ8gC,OAAOuB;MAEfrc,UAAU;IACZhmB,MAAMwhC,UAAU;IAChBsB,WAAWhC,QAAQ9gC;;QAEf+iC;SACCJ,gBAAgBI,KAAKC,aAAahjC,OAAOgmB;QAE1C+c;MACFpC,eAAeG,QAAQiC;eACd/iC,MAAMghC,cAAchb,SAASA,MAAM3uC,SAAS;iBAC1C2uC,UAAU,aAAahmB,MAAMghC,cAAc9iD,OAAOugB,eAAeunB,WAAW5d,OAAO7pB;QAC5FynC,QAAQid,oBAAoBjd;;UAG1B6c;YACE7iC,MAAMuhC,YAAYZ,eAAeG,YAAYN,4CAA2C0C,SAASpC,QAAQ9gC,OAAOgmB,OAAO;iBAClHhmB,MAAMshC;QACfX,eAAeG,YAAYR;iBAClBtgC,MAAMiiC;eACR;;QAEPjiC,MAAMwhC,UAAU;YAEZxhC,MAAMqzB,YAAYroB;UACpBgb,QAAQhmB,MAAMqzB,QAAQpkB,MAAM+W;cACxBhmB,MAAMghC,cAAchb,MAAM3uC,WAAW,GAAG6rD,SAASpC,QAAQ9gC,OAAOgmB,OAAO,aAAYmd,cAAcrC,QAAQ9gC;;UAE7GkjC,SAASpC,QAAQ9gC,OAAOgmB,OAAO;;;gBAGzB6c;MACV7iC,MAAMwhC,UAAU;MAChB2B,cAAcrC,QAAQ9gC;;;;;;UAOlBA,MAAMshC,UAAUthC,MAAM3oB,SAAS2oB,MAAMkhC,iBAAiBlhC,MAAM3oB,WAAW;;AAGjF,kBAAkBypD,QAAQ9gC,OAAOgmB,OAAO6c;MAClC7iC,MAAMqhC,WAAWrhC,MAAM3oB,WAAW,MAAM2oB,MAAMyhC;IAChDzhC,MAAMmiC,aAAa;IACnBrB,OAAOl0C,KAAK,QAAQo5B;;;IAGpBhmB,MAAM3oB,UAAU2oB,MAAMghC,aAAa,IAAIhb,MAAM3uC;QACzCwrD,YAAY7iC,MAAM5K,OAAOuhB,QAAQqP,aAAYhmB,MAAM5K,OAAOtgB,KAAKkxC;QAC/DhmB,MAAM0hC,cAAc0B,aAAatC;;EAGvCqC,cAAcrC,QAAQ9gC;;AAGxB,sBAAsBA,OAAOgmB;MACvB+c;OAECM,cAAcrd,iBAAiBA,UAAU,YAAYA,UAAUhxC,cAAcgrB,MAAMghC;IACtF+B,SAAS1C,qBAAqB,UAAU,UAAU,UAAU,eAAera;;SAGtE+c;;AAGTzD,SAAS/gD,UAAU+kD,WAAW;SACrB,KAAKjB,eAAehB,YAAY;;;AAIzC/B,SAAS/gD,UAAUglD,cAAc,UAAUC;OACpC/C,eAAeA,gBAAgB/iD,QAAQ,mBAAmB+iD;MAC3DpN,cAAcoN,cAAc+C;EAChC,KAAKnB,eAAehP,UAAUA;;EAE9B,KAAKgP,eAAer3B,WAAW,KAAKq3B,eAAehP,QAAQroB;;MAEvD9hB,IAAI,KAAKm5C,eAAejtC,OAAOpF;MAC/ByzC,UAAU;SAEPv6C,MAAM;IACXu6C,WAAWpQ,QAAQpkB,MAAM/lB,EAAE1U;IAC3B0U,IAAIA,EAAEiH;;EAGR,KAAKkyC,eAAejtC,OAAOle;MAEvBusD,YAAY,IAAI,KAAKpB,eAAejtC,OAAOtgB,KAAK2uD;EACpD,KAAKpB,eAAehrD,SAASosD,QAAQpsD;SAC9B;;;IAILqsD,UAAU;AAEd,iCAAiCx3B;MAC3BA,KAAKw3B;;IAEPx3B,IAAIw3B;;;;IAIJx3B;IACAA,KAAKA,MAAM;IACXA,KAAKA,MAAM;IACXA,KAAKA,MAAM;IACXA,KAAKA,MAAM;IACXA,KAAKA,MAAM;IACXA;;SAGKA;;;;AAKT,uBAAuBA,GAAGlM;MACpBkM,KAAK,KAAKlM,MAAM3oB,WAAW,KAAK2oB,MAAMshC,cAAc;MACpDthC,MAAMghC,mBAAmB;MAEzB90B,MAAMA;;QAEJlM,MAAMqhC,WAAWrhC,MAAM3oB,eAAe2oB,MAAM5K,OAAOpF,KAAKxb,KAAK6C,oBAAmB2oB,MAAM3oB;;;MAIxF60B,IAAIlM,MAAMkhC,eAAelhC,MAAMkhC,gBAAgByC,wBAAwBz3B;MACvEA,KAAKlM,MAAM3oB,eAAe60B;;OAEzBlM,MAAMshC;IACTthC,MAAM0hC,eAAe;WACd;;SAGF1hC,MAAM3oB;;;AAIfioD,SAAS/gD,UAAU8tB,OAAO,UAAUH;EAClC7H,MAAM,QAAQ6H;EACdA,IAAI3jB,SAAS2jB,GAAG;MACZlM,QAAQ,KAAKqiC;MACbuB,QAAQ13B;MACRA,MAAM,GAAGlM,MAAM2hC,kBAAkB;;;;MAIjCz1B,MAAM,KAAKlM,MAAM0hC,kBAAkB1hC,MAAMkhC,kBAAkB,IAAIlhC,MAAM3oB,UAAU2oB,MAAMkhC,gBAAgBlhC,MAAM3oB,SAAS,MAAM2oB,MAAMshC;IAClIj9B,MAAM,sBAAsBrE,MAAM3oB,QAAQ2oB,MAAMshC;QAC5CthC,MAAM3oB,WAAW,KAAK2oB,MAAMshC,OAAOuC,YAAY,YAAWT,aAAa;WACpE;;EAGTl3B,IAAI43B,cAAc53B,GAAGlM;;MAEjBkM,MAAM,KAAKlM,MAAMshC;QACfthC,MAAM3oB,WAAW,GAAGwsD,YAAY;WAC7B;;;;;;;;;;;;;;;;;;;;;;;;MAyBLE,SAAS/jC,MAAM0hC;EACnBr9B,MAAM,iBAAiB0/B;;MAEnB/jC,MAAM3oB,WAAW,KAAK2oB,MAAM3oB,SAAS60B,IAAIlM,MAAMkhC;IACjD6C,SAAS;IACT1/B,MAAM,8BAA8B0/B;;;;MAKlC/jC,MAAMshC,SAASthC,MAAMwhC;IACvBuC,SAAS;IACT1/B,MAAM,oBAAoB0/B;aACjBA;IACT1/B,MAAM;IACNrE,MAAMwhC,UAAU;IAChBxhC,MAAMyhC,OAAO;;QAETzhC,MAAM3oB,WAAW,GAAG2oB,MAAM0hC,eAAe;;IAE7C,KAAKa,MAAMviC,MAAMkhC;IAEjBlhC,MAAMyhC,OAAO;;;SAGRzhC,MAAMwhC,SAASt1B,IAAI43B,cAAcF,OAAO5jC;;MAG3C0rB;MACAxf,IAAI,GAAGwf,MAAMsY,SAAS93B,GAAGlM,aAAY0rB,MAAM;MAE3CA,QAAQ;IACV1rB,MAAM0hC,eAAe1hC,MAAM3oB,UAAU2oB,MAAMkhC;IAC3Ch1B,IAAI;;IAEJlM,MAAM3oB,UAAU60B;IAChBlM,MAAMmiC,aAAa;;MAGjBniC,MAAM3oB,WAAW;;;SAGd2oB,MAAMshC,OAAOthC,MAAM0hC,eAAe;;QAEnCkC,UAAU13B,KAAKlM,MAAMshC,OAAOuC,YAAY;;MAG1CnY,QAAQ,MAAM,KAAK9+B,KAAK,QAAQ8+B;SAC7BA;;AAGT,oBAAoBoV,QAAQ9gC;EAC1BqE,MAAM;MACFrE,MAAMshC;MAENthC,MAAMqzB;QACJrN,QAAQhmB,MAAMqzB,QAAQ5c;QAEtBuP,SAASA,MAAM3uC;MACjB2oB,MAAM5K,OAAOtgB,KAAKkxC;MAClBhmB,MAAM3oB,UAAU2oB,MAAMghC,aAAa,IAAIhb,MAAM3uC;;;EAIjD2oB,MAAMshC,QAAQ;MAEVthC,MAAMyhC;;;;IAIR2B,aAAatC;;;IAGb9gC,MAAM0hC,eAAe;SAEhB1hC,MAAM2hC;MACT3hC,MAAM2hC,kBAAkB;MACxBsC,cAAcnD;;;;;;;AAQpB,sBAAsBA;MAChB9gC,QAAQ8gC,OAAOuB;EACnBh+B,MAAM,gBAAgBrE,MAAM0hC,cAAc1hC,MAAM2hC;EAChD3hC,MAAM0hC,eAAe;OAEhB1hC,MAAM2hC;IACTt9B,MAAM,gBAAgBrE,MAAMqhC;IAC5BrhC,MAAM2hC,kBAAkB;IACxBv3C,QAAQmF,SAAS00C,eAAenD;;;AAIpC,uBAAuBA;MACjB9gC,QAAQ8gC,OAAOuB;EACnBh+B,MAAM,iBAAiBrE,MAAMiiC,WAAWjiC,MAAM3oB,QAAQ2oB,MAAMshC;OAEvDthC,MAAMiiC,cAAcjiC,MAAM3oB,UAAU2oB,MAAMshC;IAC7CR,OAAOl0C,KAAK;IACZoT,MAAM2hC,kBAAkB;;;;;;;;EAS1B3hC,MAAM0hC,gBAAgB1hC,MAAMqhC,YAAYrhC,MAAMshC,SAASthC,MAAM3oB,UAAU2oB,MAAMkhC;EAC7EgD,KAAKpD;;;;;;;;AASP,uBAAuBA,QAAQ9gC;OACxBA,MAAMoiC;IACTpiC,MAAMoiC,cAAc;IACpBh4C,QAAQmF,SAAS40C,gBAAgBrD,QAAQ9gC;;;AAI7C,wBAAwB8gC,QAAQ9gC;;;;;;;;;;;;;;;;;;;;;;;;UAwBtBA,MAAMwhC,YAAYxhC,MAAMshC,UAAUthC,MAAM3oB,SAAS2oB,MAAMkhC,iBAAiBlhC,MAAMqhC,WAAWrhC,MAAM3oB,WAAW;QAC5GquB,MAAM1F,MAAM3oB;IAChBgtB,MAAM;IACNy8B,OAAOz0B,KAAK;QACR3G,QAAQ1F,MAAM3oB;;;EAIpB2oB,MAAMoiC,cAAc;;;;;;AAOtB9C,SAAS/gD,UAAUgkD,QAAQ,UAAUr2B;EACnCy0B,eAAe,UAAUJ,2BAA2B;;AAGtDjB,SAAS/gD,UAAU6lD,OAAO,UAAUC,MAAMC;MACpC16B,MAAM;MACN5J,QAAQ,KAAKqiC;UAETriC,MAAMohC;SACP;MACHphC,MAAMmhC,QAAQkD;;SAGX;MACHrkC,MAAMmhC,SAASnhC,MAAMmhC,OAAOkD;;;MAI5BrkC,MAAMmhC,MAAMrsD,KAAKuvD;;;EAIrBrkC,MAAMohC,cAAc;EACpB/8B,MAAM,yBAAyBrE,MAAMohC,YAAYkD;MAC7CC,UAAUD,YAAYA,SAAS7tB,QAAQ,UAAU4tB,SAASj6C,QAAQo6C,UAAUH,SAASj6C,QAAQq6C;MAC7FC,QAAQH,QAAQI,QAAQC;MACxB5kC,MAAMuhC,YAAYn3C,QAAQmF,SAASm1C,aAAY96B,IAAIxD,KAAK,OAAOs+B;EACnEL,KAAKnnD,GAAG,UAAU2nD;EAElB,kBAAkBvC,UAAUwC;IAC1BzgC,MAAM;QAEFi+B,aAAa14B;UACXk7B,cAAcA,WAAWC,eAAe;QAC1CD,WAAWC,aAAa;QACxBlsC;;;;EAKN;IACEwL,MAAM;IACNggC,KAAK5tB;;;;;;MAOHuuB,UAAUC,YAAYr7B;EAC1By6B,KAAKnnD,GAAG,SAAS8nD;MACbE,YAAY;EAEhB;IACE7gC,MAAM;;IAENggC,KAAK/9B,eAAe,SAAS5tB;IAC7B2rD,KAAK/9B,eAAe,UAAU6+B;IAC9Bd,KAAK/9B,eAAe,SAAS0+B;IAC7BX,KAAK/9B,eAAe,SAAS9tB;IAC7B6rD,KAAK/9B,eAAe,UAAUu+B;IAC9Bj7B,IAAItD,eAAe,OAAOq+B;IAC1B/6B,IAAItD,eAAe,OAAOs+B;IAC1Bh7B,IAAItD,eAAe,QAAQ8+B;IAC3BF,YAAY;;;;;;QAMRllC,MAAMmiC,gBAAgBkC,KAAKgB,kBAAkBhB,KAAKgB,eAAeC,YAAYN;;EAGnFp7B,IAAI1sB,GAAG,QAAQkoD;EAEf,gBAAgBpf;IACd3hB,MAAM;QACFqnB,MAAM2Y,KAAKp1B,MAAM+W;IACrB3hB,MAAM,cAAcqnB;QAEhBA,QAAQ;;;;;WAKL1rB,MAAMohC,eAAe,KAAKphC,MAAMmhC,UAAUkD,QAAQrkC,MAAMohC,aAAa,KAAK9rD,QAAQ0qB,MAAMmhC,OAAOkD,WAAW,OAAOa;QACpH7gC,MAAM,+BAA+BrE,MAAMmiC;QAC3CniC,MAAMmiC;;MAGRv4B,IAAI27B;;;;;EAMR,iBAAiBxC;IACf1+B,MAAM,WAAW0+B;IACjB6B;IACAP,KAAK/9B,eAAe,SAAS9tB;QACzBknD,gBAAgB2E,MAAM,aAAa,GAAG1D,eAAe0D,MAAMtB;;;EAIjEv8B,gBAAgB69B,MAAM,SAAS7rD;;EAE/B;IACE6rD,KAAK/9B,eAAe,UAAU6+B;IAC9BP;;EAGFP,KAAKj+B,KAAK,SAAS1tB;EAEnB;IACE2rB,MAAM;IACNggC,KAAK/9B,eAAe,SAAS5tB;IAC7BksD;;EAGFP,KAAKj+B,KAAK,UAAU++B;EAEpB;IACE9gC,MAAM;IACNuF,IAAIg7B,OAAOP;;;EAIbA,KAAKz3C,KAAK,QAAQgd;;OAEb5J,MAAMqhC;IACTh9B,MAAM;IACNuF,IAAI47B;;SAGCnB;;AAGT,qBAAqBz6B;SACZ;QACD5J,QAAQ4J,IAAIy4B;IAChBh+B,MAAM,eAAerE,MAAMmiC;QACvBniC,MAAMmiC,YAAYniC,MAAMmiC;QAExBniC,MAAMmiC,eAAe,KAAKzC,gBAAgB91B,KAAK;MACjD5J,MAAMqhC,UAAU;MAChB6C,KAAKt6B;;;;AAKX01B,SAAS/gD,UAAUqmD,SAAS,UAAUP;MAChCrkC,QAAQ,KAAKqiC;MACbyC;IACFC,YAAY;;;MAGV/kC,MAAMohC,eAAe,UAAU;;MAE/BphC,MAAMohC,eAAe;;QAEnBiD,QAAQA,SAASrkC,MAAMmhC,cAAc;SACpCkD,MAAMA,OAAOrkC,MAAMmhC;;IAExBnhC,MAAMmhC,QAAQ;IACdnhC,MAAMohC,aAAa;IACnBphC,MAAMqhC,UAAU;QACZgD,MAAMA,KAAKz3C,KAAK,UAAU,MAAMk4C;WAC7B;;;OAIJT;;QAECoB,QAAQzlC,MAAMmhC;QACdz7B,MAAM1F,MAAMohC;IAChBphC,MAAMmhC,QAAQ;IACdnhC,MAAMohC,aAAa;IACnBphC,MAAMqhC,UAAU;aAEPjqD,IAAI,GAAGA,IAAIsuB,KAAKtuB;MACvBquD,MAAMruD,GAAGwV,KAAK,UAAU;QACtBm4C,YAAY;;;WAIT;;;MAIL52C,QAAQ7Y,QAAQ0qB,MAAMmhC,OAAOkD;MAC7Bl2C,WAAW,UAAU;EACzB6R,MAAMmhC,MAAMj9B,OAAO/V,OAAO;EAC1B6R,MAAMohC,cAAc;MAChBphC,MAAMohC,eAAe,GAAGphC,MAAMmhC,QAAQnhC,MAAMmhC,MAAM;EACtDkD,KAAKz3C,KAAK,UAAU,MAAMk4C;SACnB;;;;AAKTxF,SAAS/gD,UAAUrB,KAAK,UAAUwoD,IAAI7wD;MAChCk2C,MAAM6U,OAAOrhD,UAAUrB,GAAG5I,KAAK,MAAMoxD,IAAI7wD;MACzCmrB,QAAQ,KAAKqiC;MAEbqD,OAAO;;;IAGT1lC,MAAM4hC,oBAAoB,KAAK+D,cAAc,cAAc;;QAEvD3lC,MAAMqhC,YAAY,OAAO,KAAKmE;aACzBE,OAAO;SACX1lC,MAAMuhC,eAAevhC,MAAM4hC;MAC9B5hC,MAAM4hC,oBAAoB5hC,MAAM0hC,eAAe;MAC/C1hC,MAAMqhC,UAAU;MAChBrhC,MAAM2hC,kBAAkB;MACxBt9B,MAAM,eAAerE,MAAM3oB,QAAQ2oB,MAAMwhC;UAErCxhC,MAAM3oB;QACR+rD,aAAa;kBACHpjC,MAAMwhC;QAChBp3C,QAAQmF,SAASq2C,kBAAkB;;;;SAKlC7a;;AAGTuU,SAAS/gD,UAAU4nB,cAAcm5B,SAAS/gD,UAAUrB;AAEpDoiD,SAAS/gD,UAAU+nB,iBAAiB,UAAUo/B,IAAI7wD;MAC5Ck2C,MAAM6U,OAAOrhD,UAAU+nB,eAAehyB,KAAK,MAAMoxD,IAAI7wD;MAErD6wD,OAAO;;;;;;;IAOTt7C,QAAQmF,SAASs2C,yBAAyB;;SAGrC9a;;AAGTuU,SAAS/gD,UAAUgoB,qBAAqB,UAAUm/B;MAC5C3a,MAAM6U,OAAOrhD,UAAUgoB,mBAAmBxqB,MAAM,MAAMuH;MAEtDoiD,OAAO,cAAcA,OAAO1wD;;;;;;;IAO9BoV,QAAQmF,SAASs2C,yBAAyB;;SAGrC9a;;AAGT,iCAAiC9lC;MAC3B+a,QAAQ/a,KAAKo9C;EACjBriC,MAAM4hC,oBAAoB38C,KAAK0gD,cAAc,cAAc;MAEvD3lC,MAAM6hC,oBAAoB7hC,MAAM8hC;;;IAGlC9hC,MAAMqhC,UAAU;aACPp8C,KAAK0gD,cAAc,UAAU;IACtC1gD,KAAKugD;;;AAIT,0BAA0BvgD;EACxBof,MAAM;EACNpf,KAAKonB,KAAK;;;;AAKZizB,SAAS/gD,UAAUinD,SAAS;MACtBxlC,QAAQ,KAAKqiC;OAEZriC,MAAMqhC;IACTh9B,MAAM;;;;IAINrE,MAAMqhC,WAAWrhC,MAAM4hC;IACvB4D,OAAO,MAAMxlC;;EAGfA,MAAM8hC,SAAS;SACR;;AAGT,gBAAgBhB,QAAQ9gC;OACjBA,MAAM6hC;IACT7hC,MAAM6hC,kBAAkB;IACxBz3C,QAAQmF,SAASu2C,SAAShF,QAAQ9gC;;;AAItC,iBAAiB8gC,QAAQ9gC;EACvBqE,MAAM,UAAUrE,MAAMwhC;OAEjBxhC,MAAMwhC;IACTV,OAAOz0B,KAAK;;EAGdrM,MAAM6hC,kBAAkB;EACxBf,OAAOl0C,KAAK;EACZs3C,KAAKpD;MACD9gC,MAAMqhC,YAAYrhC,MAAMwhC,SAASV,OAAOz0B,KAAK;;AAGnDizB,SAAS/gD,UAAUgnD,QAAQ;EACzBlhC,MAAM,yBAAyB,KAAKg+B,eAAehB;MAE/C,KAAKgB,eAAehB,YAAY;IAClCh9B,MAAM;IACN,KAAKg+B,eAAehB,UAAU;IAC9B,KAAKz0C,KAAK;;EAGZ,KAAKy1C,eAAeP,SAAS;SACtB;;AAGT,cAAchB;MACR9gC,QAAQ8gC,OAAOuB;EACnBh+B,MAAM,QAAQrE,MAAMqhC;SAEbrhC,MAAMqhC,WAAWP,OAAOz0B,WAAW;;;;;;;AAQ5CizB,SAAS/gD,UAAU0D,OAAO,UAAU6+C;MAC9BiF,QAAQ;MAER/lC,QAAQ,KAAKqiC;MACbP,SAAS;EACbhB,OAAO5jD,GAAG,OAAO;IACfmnB,MAAM;QAEFrE,MAAMqzB,YAAYrzB,MAAMshC;UACtBtb,QAAQhmB,MAAMqzB,QAAQ5c;UACtBuP,SAASA,MAAM3uC,QAAQ0uD,MAAMjxD,KAAKkxC;;IAGxC+f,MAAMjxD,KAAK;;EAEbgsD,OAAO5jD,GAAG,QAAQ,UAAU8oC;IAC1B3hB,MAAM;QACFrE,MAAMqzB,SAASrN,QAAQhmB,MAAMqzB,QAAQpkB,MAAM+W;;QAE3ChmB,MAAMghC,eAAehb,UAAU,QAAQA,UAAUhxC,8BAA6BgrB,MAAMghC,gBAAgBhb,UAAUA,MAAM3uC;QAEpHq0C,MAAMqa,MAAMjxD,KAAKkxC;SAEhB0F;MACHoW,SAAS;MACThB,OAAOyE;;;;;WAKFnuD,KAAK0pD;QACR,KAAK1pD,OAAOpC,oBAAoB8rD,OAAO1pD,OAAO;MAChD,KAAKA,MAAK,oBAAoB4b;eACrB;iBACE8tC,OAAO9tC,QAAQjX,MAAM+kD,QAAQx9C;;SAEtClM;;;;WAKG80B,IAAI,GAAGA,IAAI00B,aAAavpD,QAAQ60B;IACvC40B,OAAO5jD,GAAG0jD,aAAa10B,IAAI,KAAKtf,KAAKlO,KAAK,MAAMkiD,aAAa10B;;;;EAK/D,KAAKq2B,QAAQ,UAAUr2B;IACrB7H,MAAM,iBAAiB6H;QAEnB41B;MACFA,SAAS;MACThB,OAAO0E;;;SAIJ;;WAGE9kD,WAAW;EACpB4+C,SAAS/gD,UAAUmC,OAAOsc,iBAAiB;QACrC0jC,sCAAsC1rD;MACxC0rD,oCAAoChjD,QAAQ;;WAGvCgjD,kCAAkC;;;AAI7CxiD,OAAOmG,eAAei7C,SAAS/gD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKygD,eAAenB;;;AAG/BhjD,OAAOmG,eAAei7C,SAAS/gD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKygD,kBAAkB,KAAKA,eAAejtC;;;AAGtDlX,OAAOmG,eAAei7C,SAAS/gD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKygD,eAAehB;;EAE7B79C,KAAK,aAAawc;QACZ,KAAKqiC;MACP,KAAKA,eAAehB,UAAUrhC;;;;;AAKpCs/B,SAAS0G,YAAYhC;AACrB9lD,OAAOmG,eAAei7C,SAAS/gD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKygD,eAAehrD;;;;;;;AAO/B,kBAAkB60B,GAAGlM;;MAEfA,MAAM3oB,WAAW,UAAU;MAC3Bq0C;MACA1rB,MAAMghC,YAAYtV,MAAM1rB,MAAM5K,OAAO6e,mBAAkB/H,KAAKA,KAAKlM,MAAM3oB;;QAErE2oB,MAAMqzB,SAAS3H,MAAM1rB,MAAM5K,OAAOnd,KAAK,cAAa+nB,MAAM5K,OAAO/d,WAAW,GAAGq0C,MAAM1rB,MAAM5K,OAAOtN,cAAa4jC,MAAM1rB,MAAM5K,OAAOxb,OAAOomB,MAAM3oB;IACnJ2oB,MAAM5K,OAAOle;;;IAGbw0C,MAAM1rB,MAAM5K,OAAOk8B,QAAQplB,GAAGlM,MAAMqzB;;SAE/B3H;;AAGT,qBAAqBoV;MACf9gC,QAAQ8gC,OAAOuB;EACnBh+B,MAAM,eAAerE,MAAMuhC;OAEtBvhC,MAAMuhC;IACTvhC,MAAMshC,QAAQ;IACdl3C,QAAQmF,SAAS02C,eAAejmC,OAAO8gC;;;AAI3C,uBAAuB9gC,OAAO8gC;EAC5Bz8B,MAAM,iBAAiBrE,MAAMuhC,YAAYvhC,MAAM3oB;;OAE1C2oB,MAAMuhC,cAAcvhC,MAAM3oB,WAAW;IACxC2oB,MAAMuhC,aAAa;IACnBT,OAAOwB,WAAW;IAClBxB,OAAOl0C,KAAK;QAERoT,MAAMgiC;;;UAGJkE,SAASpF,OAAOuE;WAEfa,UAAUA,OAAOlE,eAAekE,OAAOC;QAC1CrF,OAAO59B;;;;;WAMJxiB,WAAW;EACpB4+C,SAAS7lC,OAAO,UAAUxL,UAAUmlC;QAC9B35B,SAASzkB;MACXykB,OAAO/b,QAAQ;;WAGV+b,KAAK6lC,UAAUrxC,UAAUmlC;;;AAIpC,iBAAiBgT,IAAIt4C;WACV1W,IAAI,GAAGuL,IAAIyjD,GAAG/uD,QAAQD,IAAIuL,GAAGvL;QAChCgvD,GAAGhvD,OAAO0W,UAAU1W;;UAGlB;;;;AClmCV;;;ACAA;AAEA,iBAAiBmqB,QAAQ8kC;MAAsB3jD,OAAOxE,OAAOwE,KAAK6e;MAAarjB,OAAOuG;QAA6B6hD,UAAUpoD,OAAOuG,sBAAsB8c;QAAa8kC,gBAAgBC,UAAUA,QAAQ/vD,OAAO,UAAU2L;aAAchE,OAAOqG,yBAAyBgd,QAAQrf,KAAKK;;IAAgBG,KAAK5N,KAAKiH,MAAM2G,MAAM4jD;;SAAmB5jD;;AAE9U,uBAAuBmD;WAAmBzO,IAAI,GAAGA,IAAIkM,UAAUjM,QAAQD;QAAWkO,SAAShC,UAAUlM,MAAM,OAAOkM,UAAUlM;QAAaA,IAAI;MAAKmvD,QAAQroD,OAAOoH,SAAS,MAAM3O,QAAQ,UAAUqH;QAAOwoD,gBAAgB3gD,QAAQ7H,KAAKsH,OAAOtH;;eAAsBE,OAAOuoD;MAA6BvoD,OAAOoG,iBAAiBuB,QAAQ3H,OAAOuoD,0BAA0BnhD;;MAAmBihD,QAAQroD,OAAOoH,SAAS3O,QAAQ,UAAUqH;QAAOE,OAAOmG,eAAewB,QAAQ7H,KAAKE,OAAOqG,yBAAyBe,QAAQtH;;;;SAAsB6H;;AAE7gB,yBAAyBmY,KAAKhgB,KAAKC;OAAaD,OAAOggB;IAAO9f,OAAOmG,eAAe2Z,KAAKhgB;MAAOC,OAAOA;MAAOsE,YAAY;MAAMnE,cAAc;MAAMD,UAAU;;;IAAkB6f,IAAIhgB,OAAOC;;SAAgB+f;;AAE3M,yBAAyBvM,UAAUi1C;QAAqBj1C,oBAAoBi1C;cAA0BrjD,UAAU;;;AAEhH,2BAA2BwC,QAAQ8gD;WAAkBvvD,IAAI,GAAGA,IAAIuvD,MAAMtvD,QAAQD;QAAWwvD,aAAaD,MAAMvvD;IAAIwvD,WAAWrkD,aAAaqkD,WAAWrkD,cAAc;IAAOqkD,WAAWxoD,eAAe;SAAU,WAAWwoD,aAAYA,WAAWzoD,WAAW;IAAMD,OAAOmG,eAAewB,QAAQ+gD,WAAW5oD,KAAK4oD;;;AAE7S,sBAAsBF,aAAaG,YAAYC;MAAmBD,YAAYE,kBAAkBL,YAAYnoD,WAAWsoD;MAAiBC,aAAaC,kBAAkBL,aAAaI;SAAqBJ;;IAErMzG,WAAWviD,QAAQ,WACnB0qB,SAAS63B,SAAS73B;IAElB4+B,YAAYtpD,QAAQ,SACpB0rC,UAAU4d,UAAU5d;IAEpB6d,SAAS7d,WAAWA,QAAQ6d,UAAU;AAE1C,oBAAoBr9B,KAAK/jB,QAAQ8Q;EAC/ByR,OAAO7pB,UAAUktB,KAAKn3B,KAAKs1B,KAAK/jB,QAAQ8Q;;AAG1C5iB,OAAOiR,wBAEP;EACE;IACEkiD,gBAAgB,MAAM7hB;IAEtB,KAAKr1B,OAAO;IACZ,KAAKm3C,OAAO;IACZ,KAAK9vD,SAAS;;EAGhB+vD,aAAa/hB;IACXrnC,KAAK;IACLC,OAAO,cAAcrC;UACfklB;QACFtsB,MAAMoH;QACNuU,MAAM;;UAEJ,KAAK9Y,SAAS,GAAG,KAAK8vD,KAAKh3C,OAAO2Q,YAAW,KAAK9Q,OAAO8Q;MAC7D,KAAKqmC,OAAOrmC;QACV,KAAKzpB;;;IAGT2G,KAAK;IACLC,OAAO,iBAAiBrC;UAClBklB;QACFtsB,MAAMoH;QACNuU,MAAM,KAAKH;;UAET,KAAK3Y,WAAW,GAAG,KAAK8vD,OAAOrmC;MACnC,KAAK9Q,OAAO8Q;QACV,KAAKzpB;;;IAGT2G,KAAK;IACLC,OAAO;UACD,KAAK5G,WAAW;UAChBq0C,MAAM,KAAK17B,KAAKxb;UAChB,KAAK6C,WAAW,GAAG,KAAK2Y,OAAO,KAAKm3C,OAAO,WAAU,KAAKn3C,OAAO,KAAKA,KAAKG;QAC7E,KAAK9Y;aACAq0C;;;IAGT1tC,KAAK;IACLC,OAAO;MACL,KAAK+R,OAAO,KAAKm3C,OAAO;MACxB,KAAK9vD,SAAS;;;IAGhB2G,KAAK;IACLC,OAAO,cAAcwX;UACf,KAAKpe,WAAW,UAAU;UAC1B6R,IAAI,KAAK8G;UACT07B,MAAM,KAAKxiC,EAAE1U;aAEV0U,IAAIA,EAAEiH;QACXu7B,OAAOj2B,IAAIvM,EAAE1U;;aAGRk3C;;;IAGT1tC,KAAK;IACLC,OAAO,gBAAgBiuB;UACjB,KAAK70B,WAAW,UAAU+wB,OAAO0d,MAAM;UACvC4F,MAAMtjB,OAAO6C,YAAYiB,MAAM;UAC/BhjB,IAAI,KAAK8G;UACT5Y,IAAI;aAED8R;QACLm+C,WAAWn+C,EAAE1U,MAAMk3C,KAAKt0C;QACxBA,KAAK8R,EAAE1U,KAAK6C;QACZ6R,IAAIA,EAAEiH;;aAGDu7B;;;IAIT1tC,KAAK;IACLC,OAAO,iBAAiBiuB,GAAGo7B;UACrB5b;UAEAxf,IAAI,KAAKlc,KAAKxb,KAAK6C;;QAErBq0C,MAAM,KAAK17B,KAAKxb,KAAK6T,MAAM,GAAG6jB;QAC9B,KAAKlc,KAAKxb,OAAO,KAAKwb,KAAKxb,KAAK6T,MAAM6jB;iBAC7BA,MAAM,KAAKlc,KAAKxb,KAAK6C;;QAE9Bq0C,MAAM,KAAKzX;;;QAGXyX,MAAM4b,aAAa,KAAKC,WAAWr7B,KAAK,KAAKs7B,WAAWt7B;;aAGnDwf;;;IAGT1tC,KAAK;IACLC,OAAO;aACE,KAAK+R,KAAKxb;;;IAInBwJ,KAAK;IACLC,OAAO,oBAAoBiuB;UACrBhjB,IAAI,KAAK8G;UACT2F,IAAI;UACJ+1B,MAAMxiC,EAAE1U;MACZ03B,KAAKwf,IAAIr0C;aAEF6R,IAAIA,EAAEiH;YACP6Z,MAAM9gB,EAAE1U;YACRizD,KAAKv7B,IAAIlC,IAAI3yB,SAAS2yB,IAAI3yB,SAAS60B;YACnCu7B,OAAOz9B,IAAI3yB,QAAQq0C,OAAO1hB,UAAS0hB,OAAO1hB,IAAI3hB,MAAM,GAAG6jB;QAC3DA,KAAKu7B;YAEDv7B,MAAM;cACJu7B,OAAOz9B,IAAI3yB;cACXse;gBACEzM,EAAEiH,MAAM,KAAKH,OAAO9G,EAAEiH,WAAU,KAAKH,OAAO,KAAKm3C,OAAO;;YAE5D,KAAKn3C,OAAO9G;YACZA,EAAE1U,OAAOw1B,IAAI3hB,MAAMo/C;;;;UAMrB9xC;;MAGJ,KAAKte,UAAUse;aACR+1B;;;IAIT1tC,KAAK;IACLC,OAAO,oBAAoBiuB;UACrBwf,MAAMtjB,OAAO6C,YAAYiB;UACzBhjB,IAAI,KAAK8G;UACT2F,IAAI;MACRzM,EAAE1U,KAAKi3B,KAAKigB;MACZxf,KAAKhjB,EAAE1U,KAAK6C;aAEL6R,IAAIA,EAAEiH;YACP22B,MAAM59B,EAAE1U;YACRizD,KAAKv7B,IAAI4a,IAAIzvC,SAASyvC,IAAIzvC,SAAS60B;QACvC4a,IAAIrb,KAAKigB,KAAKA,IAAIr0C,SAAS60B,GAAG,GAAGu7B;QACjCv7B,KAAKu7B;YAEDv7B,MAAM;cACJu7B,OAAO3gB,IAAIzvC;cACXse;gBACEzM,EAAEiH,MAAM,KAAKH,OAAO9G,EAAEiH,WAAU,KAAKH,OAAO,KAAKm3C,OAAO;;YAE5D,KAAKn3C,OAAO9G;YACZA,EAAE1U,OAAOsyC,IAAIz+B,MAAMo/C;;;;UAMrB9xC;;MAGJ,KAAKte,UAAUse;aACR+1B;;;IAIT1tC,KAAKipD;IACLhpD,OAAO,eAAe21C,GAAG9kB;aAChBsa,QAAQ,MAAMse,kBAAkB54B;;QAErC64B,OAAO;;QAEPC,eAAe;;;;SAKdviB;;;;AChNT;;;AAEA,iBAAiB93B,KAAK1R;MAChBkqD,QAAQ;MAER8B,oBAAoB,KAAKxF,kBAAkB,KAAKA,eAAeJ;MAC/D6F,oBAAoB,KAAKzC,kBAAkB,KAAKA,eAAepD;MAE/D4F,qBAAqBC;QACnBjsD;MACFA,GAAG0R;eACMA;WACJ,KAAK83C;QACRj7C,QAAQmF,SAASw4C,aAAa,MAAMx6C;kBAC1B,KAAK83C,eAAe2C;QAC9B,KAAK3C,eAAe2C,eAAe;QACnC59C,QAAQmF,SAASw4C,aAAa,MAAMx6C;;;WAIjC;;;;MAKL,KAAK80C;IACP,KAAKA,eAAeJ,YAAY;;;MAI9B,KAAKoD;IACP,KAAKA,eAAepD,YAAY;;EAGlC,KAAKO,SAASj1C,OAAO,MAAM,UAAUA;SAC9B1R,MAAM0R;WACJw4C,MAAMV;QACTj7C,QAAQmF,SAAS04C,qBAAqBlC,OAAOx4C;kBACnCw4C,MAAMV,eAAe2C;QAC/BjC,MAAMV,eAAe2C,eAAe;QACpC59C,QAAQmF,SAAS04C,qBAAqBlC,OAAOx4C;;QAE7CnD,QAAQmF,SAAS24C,aAAanC;;eAEvBlqD;MACTuO,QAAQmF,SAAS24C,aAAanC;MAC9BlqD,GAAG0R;;MAEHnD,QAAQmF,SAAS24C,aAAanC;;;SAI3B;;AAGT,6BAA6B9gD,MAAMsI;EACjCw6C,YAAY9iD,MAAMsI;EAClB26C,YAAYjjD;;AAGd,qBAAqBA;MACfA,KAAKogD,mBAAmBpgD,KAAKogD,eAAetD;MAC5C98C,KAAKo9C,mBAAmBp9C,KAAKo9C,eAAeN;EAChD98C,KAAK2H,KAAK;;AAGZ;MACM,KAAKy1C;IACP,KAAKA,eAAeJ,YAAY;IAChC,KAAKI,eAAeb,UAAU;IAC9B,KAAKa,eAAef,QAAQ;IAC5B,KAAKe,eAAed,aAAa;;MAG/B,KAAK8D;IACP,KAAKA,eAAepD,YAAY;IAChC,KAAKoD,eAAe/D,QAAQ;IAC5B,KAAK+D,eAAe8C,SAAS;IAC7B,KAAK9C,eAAe+C,cAAc;IAClC,KAAK/C,eAAegD,cAAc;IAClC,KAAKhD,eAAec,WAAW;IAC/B,KAAKd,eAAe2C,eAAe;;;AAIvC,qBAAqB/iD,MAAMsI;EACzBtI,KAAK2H,KAAK,SAASW;;AAGrB,wBAAwBuzC,QAAQvzC;;;;;;MAM1B+6C,SAASxH,OAAOuB;MAChB6D,SAASpF,OAAOuE;MAChBiD,UAAUA,OAAOtG,eAAekE,UAAUA,OAAOlE,aAAalB,OAAO59B,QAAQ3V,WAAUuzC,OAAOl0C,KAAK,SAASW;;AAGlHxZ,OAAOiR;EACLke,SAASA;EACTw/B,WAAWA;EACX/B,gBAAgBA;;;;ACvGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACztGA;;;IAGI4H,aAAarqD,OAAOwE,SAAQ,UAAUsb;MACpCtb;WAEK1E,OAAOggB;IACdtb,KAAK5N,KAAKkJ;;SAGL0E;;;AAKT3O,OAAOiR,UAAUu6C;IAEbD,WAAW5hD,QAAQ;IAEnB8qD,WAAW9qD,QAAQ;AAEvBA,QAAQ,YAAY6hD,QAAQD;;;MAItB58C,OAAO6lD,WAAWC,SAASjqD;WAEtB3C,IAAI,GAAGA,IAAI8G,KAAKrL,QAAQuE;QAC3BoX,SAAStQ,KAAK9G;SACb2jD,OAAOhhD,UAAUyU,SAASusC,OAAOhhD,UAAUyU,UAAUw1C,SAASjqD,UAAUyU;;;AAIjF,gBAAgB8b;QACR,gBAAgBywB,oBAAoBA,OAAOzwB;EACjDwwB,SAAShrD,KAAK,MAAMw6B;EACpB05B,SAASl0D,KAAK,MAAMw6B;EACpB,KAAK25B,gBAAgB;MAEjB35B;QACEA,QAAQwzB,aAAa,OAAO,KAAKA,WAAW;QAC5CxzB,QAAQ3wB,aAAa,OAAO,KAAKA,WAAW;QAE5C2wB,QAAQ25B,kBAAkB;MAC5B,KAAKA,gBAAgB;MACrB,KAAKriC,KAAK,OAAOu+B;;;;AAKvBzmD,OAAOmG,eAAek7C,OAAOhhD,WAAW;;;;EAItCgE,YAAY;EACZX,KAAK;WACI,KAAKyjD,eAAenE;;;AAG/BhjD,OAAOmG,eAAek7C,OAAOhhD,WAAW;;;;EAItCgE,YAAY;EACZX,KAAK;WACI,KAAKyjD,kBAAkB,KAAKA,eAAeqD;;;AAGtDxqD,OAAOmG,eAAek7C,OAAOhhD,WAAW;;;;EAItCgE,YAAY;EACZX,KAAK;WACI,KAAKyjD,eAAehuD;;;;AAI/B;;MAEM,KAAKguD,eAAe/D;;;EAGxBl3C,QAAQmF,SAASo5C,SAAS;;AAG5B,iBAAiB1jD;EACfA,KAAKwxB;;AAGPv4B,OAAOmG,eAAek7C,OAAOhhD,WAAW;;;;EAItCgE,YAAY;EACZX,KAAK;QACC,KAAKygD,mBAAmBrtD,aAAa,KAAKqwD,mBAAmBrwD;aACxD;;WAGF,KAAKqtD,eAAeJ,aAAa,KAAKoD,eAAepD;;EAE9Dz+C,KAAK,aAAavF;;;QAGZ,KAAKokD,mBAAmBrtD,aAAa,KAAKqwD,mBAAmBrwD;;;;;IAMjE,KAAKqtD,eAAeJ,YAAYhkD;IAChC,KAAKonD,eAAepD,YAAYhkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHpC;;;AAEAlK,OAAOiR,UAAUwjD;;AAGjB,kBAAkBxiB,OAAOhb,UAAUnvB;EACjC,KAAKmqC,QAAQA;EACb,KAAKhb,WAAWA;EAChB,KAAKK,WAAWxvB;EAChB,KAAKsU,OAAO;;;;AAKd,uBAAuB6P;MACjB+lC,QAAQ;EAEZ,KAAK51C,OAAO;EACZ,KAAK2Q,QAAQ;EAEb,KAAK2B,SAAS;IACZmmC,eAAe7C,OAAO/lC;;;;;IAQtBu/B;;AAGJiJ,SAASK,gBAAgBA;;IAGrBC;EACFC,WAAWrrD,QAAQ;;;;IAMjBkiD,SAASliD,QAAQ;;IAIjB0qB,SAAS1qB,QAAQ,UAAU0qB;IAE3By3B,gBAAgBliD,OAAO+qB,eAAc;AAEzC,6BAA6Bsd;SACpB5d,OAAO3O,KAAKusB;;AAGrB,uBAAuBhoB;SACdoK,OAAOye,SAAS7oB,QAAQA,eAAe6hC;;IAG5CG,cAActiD,QAAQ;IAEtBuiD,WAAWviD,QAAQ,6BACnBwiD,mBAAmBD,SAASC;IAE5BC,iBAAiBziD,QAAQ,aAAa0iD,OACtCC,uBAAuBF,eAAeE,sBACtCE,6BAA6BJ,eAAeI,4BAC5CyI,wBAAwB7I,eAAe6I,uBACvCC,yBAAyB9I,eAAe8I,wBACxCC,uBAAuB/I,eAAe+I,sBACtCC,yBAAyBhJ,eAAegJ,wBACxCC,6BAA6BjJ,eAAeiJ,4BAC5CC,uBAAuBlJ,eAAekJ;IAEtC1I,iBAAiBX,YAAYW;AAEjCjjD,QAAQ,YAAY8qD,UAAU5I;AAE9B;AAEA,uBAAuB9wB,SAASgyB,QAAQC;EACtCxB,SAASA,UAAU7hD,QAAQ;EAC3BoxB,UAAUA;;;;;;aAMCiyB,aAAa,WAAWA,WAAWD,kBAAkBvB;;;EAGhE,KAAKyB,eAAelyB,QAAQkyB;MACxBD,UAAU,KAAKC,aAAa,KAAKA,gBAAgBlyB,QAAQw6B;;;;EAI7D,KAAKpI,gBAAgBhB,iBAAiB,MAAMpxB,SAAS,yBAAyBiyB;;EAE9E,KAAKqH,cAAc;;EAEnB,KAAK9C,YAAY;;EAEjB,KAAK6C,SAAS;;EAEd,KAAK7G,QAAQ;;EAEb,KAAK6E,WAAW;;EAEhB,KAAKlE,YAAY;;;;MAIbsH,WAAWz6B,QAAQ06B,kBAAkB;EACzC,KAAKA,iBAAiBD;;;;EAItB,KAAKrH,kBAAkBpzB,QAAQozB,mBAAmB;;;;EAIlD,KAAK7qD,SAAS;;EAEd,KAAKoyD,UAAU;;EAEf,KAAKC,SAAS;;;;;EAKd,KAAKjI,OAAO;;;;EAIZ,KAAKkI,mBAAmB;;EAExB,KAAKC,UAAU,UAAU7G;IACvB6G,QAAQ9I,QAAQiC;;;EAIlB,KAAK8G,UAAU;;EAEf,KAAKC,WAAW;EAChB,KAAKC,kBAAkB;EACvB,KAAKC,sBAAsB;;;EAG3B,KAAKC,YAAY;;;EAGjB,KAAK5B,cAAc;;EAEnB,KAAKL,eAAe;;EAEpB,KAAKjG,YAAYjzB,QAAQizB,cAAc;;EAEvC,KAAKC,gBAAgBlzB,QAAQkzB;;EAE7B,KAAKkI,uBAAuB;;;EAG5B,KAAKC,yBAAyBC,cAAc;;AAG9CvB,cAActqD,UAAUmqD,YAAY;MAC9B2B,UAAU,KAAKN;MACf/jD;SAEGqkD;IACLrkD,IAAIlR,KAAKu1D;IACTA,UAAUA,QAAQl6C;;SAGbnK;;CAGR;;IAEG9H,OAAOmG,eAAewkD,cAActqD,WAAW;MAC7CqD,KAAKknD,aAAaC,UAAU;eACnB,KAAKL;SACX,uEAAuE,YAAY;;WAEjF9U;;;;IAKP0W;WAEO5pD,WAAW,cAAcA,OAAO6pD,sBAAsBhvD,SAASgD,UAAUmC,OAAO6pD,iBAAiB;EAC1GD,kBAAkB/uD,SAASgD,UAAUmC,OAAO6pD;EAC5CrsD,OAAOmG,eAAemkD,UAAU9nD,OAAO6pD;IACrCtsD,OAAO,eAAesjB;UAChB+oC,gBAAgBh2D,KAAK,MAAMitB,gBAAgB;UAC3C,SAASinC,iBAAiB;aACvBjnC,UAAUA,OAAO8jC,0BAA0BwD;;;;EAItDyB,kBAAkB,yBAAyB/oC;WAClCA,kBAAkB;;;AAI7B,kBAAkBuN;EAChBywB,SAASA,UAAU7hD,QAAQ;;;;;;;;;MASvBqjD,WAAW,gBAAgBxB;OAC1BwB,aAAauJ,gBAAgBh2D,KAAKk0D,UAAU,kBAAkBA,SAAS15B;EAC5E,KAAKu2B,qBAAqBwD,cAAc/5B,SAAS,MAAMiyB;;EAEvD,KAAK5iD,WAAW;MAEZ2wB;eACSA,QAAQG,UAAU,YAAY,KAAKu7B,SAAS17B,QAAQG;eACpDH,QAAQ27B,WAAW,YAAY,KAAKC,UAAU57B,QAAQ27B;eACtD37B,QAAQ5L,YAAY,YAAY,KAAKs/B,WAAW1zB,QAAQ5L;eACxD4L,QAAQ67B,UAAU,YAAY,KAAKC,SAAS97B,QAAQ67B;;EAGjE/K,OAAOtrD,KAAK;;;AAIdk0D,SAASjqD,UAAU6lD,OAAO;EACxBzD,eAAe,UAAUsI;;AAG3B,uBAAuBnI,QAAQjlD;MACzBknD,SAASqG;;EAEbzI,eAAeG,QAAQiC;EACvB34C,QAAQmF,SAAS1T,IAAIknD;;;;;AAMvB,oBAAoBjC,QAAQ9gC,OAAOgmB,OAAOnqC;MACpCknD;MAEA/c,UAAU;IACZ+c,SAASoG;oBACOnjB,UAAU,aAAahmB,MAAMghC;IAC7C+B,SAAS1C,qBAAqB,UAAU,UAAU,WAAWra;;MAG3D+c;IACFpC,eAAeG,QAAQiC;IACvB34C,QAAQmF,SAAS1T,IAAIknD;WACd;;SAGF;;AAGTyF,SAASjqD,UAAU0wB,QAAQ,UAAU+W,OAAOhb,UAAUnvB;MAChDmkB,QAAQ,KAAKqlC;MACb3Z,MAAM;MAENmf,SAAS7qC,MAAMghC,cAAcqC,cAAcrd;MAE3C6kB,UAAUziC,OAAOye,SAASb;IAC5BA,QAAQid,oBAAoBjd;;aAGnBhb,aAAa;IACtBnvB,KAAKmvB;IACLA,WAAW;;MAGT6/B,OAAO7/B,WAAW,oBAAmBA,UAAUA,WAAWhL,MAAMkiC;aACzDrmD,OAAO,YAAYA,KAAKivD;MAC/B9qC,MAAMmoC,QAAQ4C,cAAc,MAAMlvD,cAAagvD,SAASG,WAAW,MAAMhrC,OAAOgmB,OAAOnqC;IACzFmkB,MAAMiqC;IACNve,MAAMuf,cAAc,MAAMjrC,OAAO6qC,OAAO7kB,OAAOhb,UAAUnvB;;SAEpD6vC;;AAGT8c,SAASjqD,UAAU2sD,OAAO;EACxB,KAAK7F,eAAeqE;;AAGtBlB,SAASjqD,UAAU4sD,SAAS;MACtBnrC,QAAQ,KAAKqlC;MAEbrlC,MAAM0pC;IACR1pC,MAAM0pC;SACD1pC,MAAMypC,YAAYzpC,MAAM0pC,WAAW1pC,MAAM2pC,oBAAoB3pC,MAAM+pC,iBAAiBqB,YAAY,MAAMprC;;;AAI/GwoC,SAASjqD,UAAU8sD,qBAAqB,4BAA4BrgC;;aAEvDA,aAAa,UAAUA,WAAWA,SAAS1H;SAC/C,OAAO,QAAQ,SAAS,SAAS,UAAU,UAAU,QAAQ,SAAS,WAAW,YAAY,OAAOhuB,SAAS01B,WAAW,IAAI1H,kBAAkB,cAAc+lC,qBAAqBr+B;EACxL,KAAKq6B,eAAenD,kBAAkBl3B;SAC/B;;AAGT9sB,OAAOmG,eAAemkD,SAASjqD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKyjD,kBAAkB,KAAKA,eAAeqD;;;AAItD,qBAAqB1oC,OAAOgmB,OAAOhb;OAC5BhL,MAAMghC,cAAchhC,MAAMwpC,kBAAkB,gBAAgBxjB,UAAU;IACzEA,QAAQ5d,OAAO3O,KAAKusB,OAAOhb;;SAGtBgb;;AAGT9nC,OAAOmG,eAAemkD,SAASjqD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKyjD,eAAenE;;;;;;AAM/B,uBAAuBJ,QAAQ9gC,OAAO6qC,OAAO7kB,OAAOhb,UAAUnvB;OACvDgvD;QACCS,WAAWC,YAAYvrC,OAAOgmB,OAAOhb;QAErCgb,UAAUslB;MACZT,QAAQ;MACR7/B,WAAW;MACXgb,QAAQslB;;;MAIR5lC,MAAM1F,MAAMghC,aAAa,IAAIhb,MAAM3uC;EACvC2oB,MAAM3oB,UAAUquB;MACZgmB,MAAM1rB,MAAM3oB,SAAS2oB,MAAMkhC;;OAE1BxV,KAAK1rB,MAAMslC,YAAY;MAExBtlC,MAAMypC,WAAWzpC,MAAM0pC;QACrBz5C,OAAO+P,MAAMgqC;IACjBhqC,MAAMgqC;MACJhkB,OAAOA;MACPhb,UAAUA;MACV6/B,OAAOA;MACPx/B,UAAUxvB;MACVsU,MAAM;;QAGJF;MACFA,KAAKE,OAAO6P,MAAMgqC;;MAElBhqC,MAAM+pC,kBAAkB/pC,MAAMgqC;;IAGhChqC,MAAMkqC,wBAAwB;;IAE9BsB,QAAQ1K,QAAQ9gC,OAAO,OAAO0F,KAAKsgB,OAAOhb,UAAUnvB;;SAG/C6vC;;AAGT,iBAAiBoV,QAAQ9gC,OAAOyqC,QAAQ/kC,KAAKsgB,OAAOhb,UAAUnvB;EAC5DmkB,MAAM8pC,WAAWpkC;EACjB1F,MAAM6pC,UAAUhuD;EAChBmkB,MAAMypC,UAAU;EAChBzpC,MAAMyhC,OAAO;MACTzhC,MAAMiiC,WAAWjiC,MAAM4pC,YAAYV,qBAAqB,oBAAmBuB,QAAQ3J,OAAO4J,QAAQ1kB,OAAOhmB,MAAM4pC,eAAc9I,OAAO0J,OAAOxkB,OAAOhb,UAAUhL,MAAM4pC;EACtK5pC,MAAMyhC,OAAO;;AAGf,sBAAsBX,QAAQ9gC,OAAOyhC,MAAMsB,IAAIlnD;IAC3CmkB,MAAMiqC;MAEJxI;;;IAGFr3C,QAAQmF,SAAS1T,IAAIknD;;;IAGrB34C,QAAQmF,SAASk8C,aAAa3K,QAAQ9gC;IACtC8gC,OAAOuE,eAAe2C,eAAe;IACrCrH,eAAeG,QAAQiC;;;;IAIvBlnD,GAAGknD;IACHjC,OAAOuE,eAAe2C,eAAe;IACrCrH,eAAeG,QAAQiC;;;IAGvB0I,YAAY3K,QAAQ9gC;;;AAIxB,4BAA4BA;EAC1BA,MAAMypC,UAAU;EAChBzpC,MAAM6pC,UAAU;EAChB7pC,MAAM3oB,UAAU2oB,MAAM8pC;EACtB9pC,MAAM8pC,WAAW;;AAGnB,iBAAiBhJ,QAAQiC;MACnB/iC,QAAQ8gC,OAAOuE;MACf5D,OAAOzhC,MAAMyhC;MACb5lD,KAAKmkB,MAAM6pC;aACJhuD,OAAO,sBAAsBmtD;EACxC0C,mBAAmB1rC;MACf+iC,IAAI4I,aAAa7K,QAAQ9gC,OAAOyhC,MAAMsB,IAAIlnD;;QAExCsqD,WAAWyF,WAAW5rC,UAAU8gC,OAAOmB;SAEtCkE,aAAanmC,MAAM0pC,WAAW1pC,MAAM2pC,oBAAoB3pC,MAAM+pC;MACjEqB,YAAYtK,QAAQ9gC;;QAGlByhC;MACFr3C,QAAQmF,SAASs8C,YAAY/K,QAAQ9gC,OAAOmmC,UAAUtqD;;MAEtDgwD,WAAW/K,QAAQ9gC,OAAOmmC,UAAUtqD;;;;AAK1C,oBAAoBilD,QAAQ9gC,OAAOmmC,UAAUtqD;OACtCsqD,UAAU2F,aAAahL,QAAQ9gC;EACpCA,MAAMiqC;EACNpuD;EACA4vD,YAAY3K,QAAQ9gC;;;;;AAMtB,sBAAsB8gC,QAAQ9gC;MACxBA,MAAM3oB,WAAW,KAAK2oB,MAAMslC;IAC9BtlC,MAAMslC,YAAY;IAClBxE,OAAOl0C,KAAK;;;;AAKhB,qBAAqBk0C,QAAQ9gC;EAC3BA,MAAM2pC,mBAAmB;MACrB7oC,QAAQd,MAAM+pC;MAEdjJ,OAAO4J,WAAW5pC,SAASA,MAAM3Q;;QAE/BxN,IAAIqd,MAAMkqC;QACV90C,aAAa1b,MAAMiJ;QACnBopD,SAAS/rC,MAAMmqC;IACnB4B,OAAOjrC,QAAQA;QACXuN,QAAQ;QACR29B,aAAa;WAEVlrC;MACL1L,OAAOiZ,SAASvN;WACXA,MAAM+pC,OAAOmB,aAAa;MAC/BlrC,QAAQA,MAAM3Q;MACdke,SAAS;;IAGXjZ,OAAO42C,aAAaA;IACpBR,QAAQ1K,QAAQ9gC,OAAO,MAAMA,MAAM3oB,QAAQ+d,QAAQ,IAAI22C,OAAOtpC;;;IAG9DzC,MAAMiqC;IACNjqC,MAAMgqC,sBAAsB;QAExB+B,OAAO57C;MACT6P,MAAMmqC,qBAAqB4B,OAAO57C;MAClC47C,OAAO57C,OAAO;;MAEd6P,MAAMmqC,yBAAyBC,cAAcpqC;;IAG/CA,MAAMkqC,uBAAuB;;;WAGtBppC;UACDklB,QAAQllB,MAAMklB;UACdhb,WAAWlK,MAAMkK;UACjBnvB,KAAKilB,MAAMuK;UACX3F,MAAM1F,MAAMghC,aAAa,IAAIhb,MAAM3uC;MACvCm0D,QAAQ1K,QAAQ9gC,OAAO,OAAO0F,KAAKsgB,OAAOhb,UAAUnvB;MACpDilB,QAAQA,MAAM3Q;MACd6P,MAAMkqC;;;;;UAKFlqC,MAAMypC;;;;QAKR3oC,UAAU,MAAMd,MAAMgqC,sBAAsB;;EAGlDhqC,MAAM+pC,kBAAkBjpC;EACxBd,MAAM2pC,mBAAmB;;AAG3BnB,SAASjqD,UAAUisD,SAAS,UAAUxkB,OAAOhb,UAAUnvB;EACrDA,OAAO0kD,2BAA2B;;AAGpCiI,SAASjqD,UAAUmsD,UAAU;AAE7BlC,SAASjqD,UAAUk4B,MAAM,UAAUuP,OAAOhb,UAAUnvB;MAC9CmkB,QAAQ,KAAKqlC;aAENrf,UAAU;IACnBnqC,KAAKmqC;IACLA,QAAQ;IACRhb,WAAW;oBACKA,aAAa;IAC7BnvB,KAAKmvB;IACLA,WAAW;;MAGTgb,UAAU,QAAQA,UAAUhxC,WAAW,KAAKi6B,MAAM+W,OAAOhb;;MAEzDhL,MAAM0pC;IACR1pC,MAAM0pC,SAAS;IACf,KAAKyB;;;OAIFnrC,MAAMmoC,QAAQ8D,YAAY,MAAMjsC,OAAOnkB;SACrC;;AAGTqC,OAAOmG,eAAemkD,SAASjqD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;WACI,KAAKyjD,eAAehuD;;;AAI/B,oBAAoB2oB;SACXA,MAAMmoC,UAAUnoC,MAAM3oB,WAAW,KAAK2oB,MAAM+pC,oBAAoB,SAAS/pC,MAAMmmC,aAAanmC,MAAMypC;;AAG3G,mBAAmB3I,QAAQ9gC;EACzB8gC,OAAO8J,OAAO,UAAUr9C;IACtByS,MAAMiqC;QAEF18C;MACFozC,eAAeG,QAAQvzC;;IAGzByS,MAAMqoC,cAAc;IACpBvH,OAAOl0C,KAAK;IACZ6+C,YAAY3K,QAAQ9gC;;;AAIxB,mBAAmB8gC,QAAQ9gC;OACpBA,MAAMqoC,gBAAgBroC,MAAMooC;eACpBtH,OAAO8J,WAAW,eAAe5qC,MAAMiiC;MAChDjiC,MAAMiqC;MACNjqC,MAAMooC,cAAc;MACpBh+C,QAAQmF,SAAS28C,WAAWpL,QAAQ9gC;;MAEpCA,MAAMqoC,cAAc;MACpBvH,OAAOl0C,KAAK;;;;AAKlB,qBAAqBk0C,QAAQ9gC;MACvBmsC,OAAOP,WAAW5rC;MAElBmsC;IACFC,UAAUtL,QAAQ9gC;QAEdA,MAAMiqC,cAAc;MACtBjqC,MAAMmmC,WAAW;MACjBrF,OAAOl0C,KAAK;UAERoT,MAAMgiC;;;YAGJsG,SAASxH,OAAOuB;aAEfiG,UAAUA,OAAOtG,eAAesG,OAAO/G;UAC1CT,OAAO59B;;;;;SAMRipC;;AAGT,qBAAqBrL,QAAQ9gC,OAAOnkB;EAClCmkB,MAAMmoC,SAAS;EACfsD,YAAY3K,QAAQ9gC;MAEhBnkB;QACEmkB,MAAMmmC,UAAU/7C,QAAQmF,SAAS1T,UAASilD,OAAO16B,KAAK,UAAUvqB;;EAGtEmkB,MAAMshC,QAAQ;EACdR,OAAO3iD,WAAW;;AAGpB,wBAAwBkuD,SAASrsC,OAAOzS;MAClCuT,QAAQurC,QAAQvrC;EACpBurC,QAAQvrC,QAAQ;SAETA;QACDjlB,KAAKilB,MAAMuK;IACfrL,MAAMiqC;IACNpuD,GAAG0R;IACHuT,QAAQA,MAAM3Q;;;EAIhB6P,MAAMmqC,mBAAmBh6C,OAAOk8C;;AAGlCnuD,OAAOmG,eAAemkD,SAASjqD,WAAW;;;;EAIxCgE,YAAY;EACZX,KAAK;QACC,KAAKyjD,mBAAmBrwD;aACnB;;WAGF,KAAKqwD,eAAepD;;EAE7Bz+C,KAAK,aAAavF;;;SAGX,KAAKonD;;;;;IAMV,KAAKA,eAAepD,YAAYhkD;;;AAGpCuqD,SAASjqD,UAAU2kB,UAAU88B,YAAY98B;AACzCslC,SAASjqD,UAAUkkD,aAAazC,YAAY0C;AAE5C8F,SAASjqD,UAAUikD,WAAW,UAAUj1C,KAAK1R;EAC3CA,GAAG0R;;;;ACvrBL;;IAEIugD;AAEJ,yBAAyB9vC,KAAKhgB,KAAKC;OAAaD,OAAOggB;IAAO9f,OAAOmG,eAAe2Z,KAAKhgB;MAAOC,OAAOA;MAAOsE,YAAY;MAAMnE,cAAc;MAAMD,UAAU;;;IAAkB6f,IAAIhgB,OAAOC;;SAAgB+f;;IAEvMmoC,WAAWzoD,QAAQ;IAEnBqwD,eAAertD,OAAO;IACtBstD,cAActtD,OAAO;IACrButD,SAASvtD,OAAO;IAChBwtD,SAASxtD,OAAO;IAChBytD,eAAeztD,OAAO;IACtB0tD,iBAAiB1tD,OAAO;IACxB2tD,UAAU3tD,OAAO;AAErB,0BAA0BzC,OAAO0b;;IAE7B1b,OAAOA;IACP0b,MAAMA;;;AAIV,wBAAwB5L;MAClB/C,UAAU+C,KAAKggD;MAEf/iD,YAAY;QACVxW,OAAOuZ,KAAKsgD,SAAShiC;;;;QAIrB73B,SAAS;MACXuZ,KAAKogD,gBAAgB;MACrBpgD,KAAKggD,gBAAgB;MACrBhgD,KAAKigD,eAAe;MACpBhjD,QAAQsjD,iBAAiB95D,MAAM;;;;AAKrC,oBAAoBuZ;;;EAGlB3D,QAAQmF,SAASg/C,gBAAgBxgD;;AAGnC,qBAAqBygD,aAAazgD;SACzB,UAAU/C,SAASkB;IACxBsiD,YAAYpjD,KAAK;UACX2C,KAAKmgD;QACPljD,QAAQsjD,iBAAiBt5D,WAAW;;;MAItC+Y,KAAKqgD,gBAAgBpjD,SAASkB;OAC7BA;;;IAIHuiD,yBAAyBvwD,OAAOugB,eAAe;IAC/CiwC,uCAAuCxwD,OAAOihB,gBAAgB2uC;MAC5DhN;WACK,KAAKuN;;EAGdl+C,MAAM;QACA41C,QAAQ;;;QAIRjuD,QAAQ,KAAKm2D;QAEbn2D,UAAU;aACL4V,QAAQxB,OAAOpU;;QAGpB,KAAKo2D;aACAxgD,QAAQ1C,QAAQsjD,iBAAiBt5D,WAAW;;QAGjD,KAAKq5D,SAASpM;;;;;iBAKLv0C,QAAQ,UAAU1C,SAASkB;QACpC9B,QAAQmF,SAAS;cACXw2C,MAAMkI;YACR/hD,OAAO65C,MAAMkI;;YAEbjjD,QAAQsjD,iBAAiBt5D,WAAW;;;;;;;;;QAUxCw5D,cAAc,KAAKL;QACnBpjD;QAEAyjD;MACFzjD,cAAc2C,QAAQihD,YAAYH,aAAa;;;;UAI3Ch6D,OAAO,KAAK65D,SAAShiC;UAErB73B,SAAS;eACJkZ,QAAQ1C,QAAQsjD,iBAAiB95D,MAAM;;MAGhDuW,cAAc2C,QAAQ,KAAK0gD;;IAG7B,KAAKD,gBAAgBpjD;WACdA;;GAERy7C,gBAAgBsH,uBAAuBptD,OAAOsc,eAAe;SACvD;IACLwpC,gBAAgBsH,uBAAuB,UAAU;MAC/Cc,SAAS;;;;aAKFlhD,QAAQ,UAAU1C,SAASkB;IACpC0iD,OAAOP,SAASnrC,QAAQ,MAAM,UAAU3V;UAClCA;QACFrB,OAAOqB;;;MAITvC,QAAQsjD,iBAAiBt5D,WAAW;;;IAGtC84D,wBAAwBW;IAExB/N,oCAAoC,2CAA2CI;MAC7E+N;MAEAxsD,WAAWnE,OAAO7B,OAAOqyD,uCAAuCG,qBAAqBrI,gBAAgBqI,gBAAgBR;IACvHpwD,OAAO6iD;IACP3iD,UAAU;MACRqoD,gBAAgBqI,gBAAgBd;IAClC9vD,OAAO;IACPE,UAAU;MACRqoD,gBAAgBqI,gBAAgBb;IAClC/vD,OAAO;IACPE,UAAU;MACRqoD,gBAAgBqI,gBAAgBZ;IAClChwD,OAAO;IACPE,UAAU;MACRqoD,gBAAgBqI,gBAAgBX;IAClCjwD,OAAO6iD,OAAOuB,eAAed;IAC7BpjD,UAAU;MACRqoD,gBAAgBqI,gBAAgBT;IAClCnwD,OAAO,eAAe+M,SAASkB;UACzB1X,OAAO6N,SAASgsD,SAAShiC;UAEzB73B;QACF6N,SAAS8rD,gBAAgB;QACzB9rD,SAAS0rD,gBAAgB;QACzB1rD,SAAS2rD,eAAe;QACxBhjD,QAAQsjD,iBAAiB95D,MAAM;;QAE/B6N,SAAS0rD,gBAAgB/iD;QACzB3I,SAAS2rD,eAAe9hD;;;IAG5B/N,UAAU;MACR0wD;EACJxsD,SAAS8rD,gBAAgB;EACzBhI,SAASrF,QAAQ,UAAUvzC;QACrBA,OAAOA,IAAIjF,SAAS;UAClB4D,SAAS7J,SAAS2rD;;;UAGlB9hD,WAAW;QACb7J,SAAS8rD,gBAAgB;QACzB9rD,SAAS0rD,gBAAgB;QACzB1rD,SAAS2rD,eAAe;QACxB9hD,OAAOqB;;MAGTlL,SAAS4rD,UAAU1gD;;;QAIjBvC,UAAU3I,SAAS0rD;QAEnB/iD,YAAY;MACd3I,SAAS8rD,gBAAgB;MACzB9rD,SAAS0rD,gBAAgB;MACzB1rD,SAAS2rD,eAAe;MACxBhjD,QAAQsjD,iBAAiBt5D,WAAW;;IAGtCqN,SAAS6rD,UAAU;;EAErBpN,OAAO5jD,GAAG,YAAY4xD,WAAWpwD,KAAK,MAAM2D;SACrCA;;AAGTtO,OAAOiR,UAAU07C;;;AC9MjtvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/FA;IACI1C,WAAWtgD,QAAQ;IACnBq5D,SAASr5D,QAAQ;IACjB8J,OAAO9J,QAAQ;IACf0qB,SAAS1qB,QAAQ,eAAe0qB;IAChC4uC,MAAMt5D,QAAQ;IACd4xD,YAAY5xD,QAAQ;IAEpBu5D,MAAMv5D,QAAQ;IAEdw5D,QAAQ9uC,OAAO0d,MAAM;AAEzB,cAAeqxB,KAAKn5D;EAClBwJ,KAAKlT,KAAK,MAAM;aACL0J,QAAQ;IACjBA,MAAMoqB,OAAO3O,KAAKzb;;MAGhBo5D,YAAaD,QAAQ,YAAYA,QAAQ,WAAY,MAAM;EAE/D,KAAKE,OAAOF;EACZ,KAAKG,OAAOt5D;MACRA,IAAI3G,SAAS+/D;QACXhuC,OAAO+tC,QAAQ,eAAe7H,cAAc2H,IAAIE;IACpDn5D,MAAMorB,KAAKyN,OAAO74B,KAAK07B;aACd17B,IAAI3G,SAAS+/D;IACtBp5D,MAAMoqB,OAAOxuB,QAAQoE,KAAKk5D,QAAQE;;MAGhCG,OAAO,KAAKC,QAAQpvC,OAAO6C,YAAYmsC;MACvCK,OAAO,KAAKC,QAAQtvC,OAAO6C,YAAYmsC;WAElChgE,IAAI,GAAGA,IAAIggE,WAAWhgE;IAC7BmgE,KAAKngE,KAAK4G,IAAI5G,KAAK;IACnBqgE,KAAKrgE,KAAK4G,IAAI5G,KAAK;;EAErB,KAAKy5D,QAAQsG,QAAQ,eAAe7H,cAAc2H,IAAIE;EACtD,KAAKtG,MAAMh6B,OAAO0gC;;AAGpBvZ,SAAS2Z,MAAMnwD;AAEfmwD,KAAKp5D,UAAU6/C,UAAU,UAAU5pD;EACjC,KAAKq8D,MAAMh6B,OAAOriC;;AAGpBmjE,KAAKp5D,UAAUqsD,SAAS;MAClB9qB,IAAI,KAAK+wB,MAAMn3B;MACftQ,OAAO,KAAKiuC,SAAS,eAAe/H,cAAc2H,IAAI,KAAKI;SACxDjuC,KAAKyN,OAAO,KAAK6gC,OAAO7gC,OAAOiJ,GAAGpG;;AAG3C3lC,OAAOiR,UAAU,oBAAqBmyD,KAAKn5D;EACzCm5D,MAAMA,IAAI7zC;MACN6zC,QAAQ,YAAYA,QAAQ;eACnBQ,KAAK,UAAU35D;;MAExBm5D,QAAQ;eACCJ,OAAOC,KAAKh5D;;aAEd25D,KAAKR,KAAKn5D;;;;AC5DvB;IACIggD,WAAWtgD,QAAQ;IACnB0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhC5gB,OAAO9J,QAAQ;IAEfw5D,QAAQ9uC,OAAO0d,MAAM;IACrBsxB,YAAY;AAEhB,cAAeD,KAAKn5D;EAClBwJ,KAAKlT,KAAK,MAAM;aACL0J,QAAQ;IACjBA,MAAMoqB,OAAO3O,KAAKzb;;EAGpB,KAAKq5D,OAAOF;EACZ,KAAKG,OAAOt5D;MAERA,IAAI3G,SAAS+/D;IACfp5D,MAAMm5D,IAAIn5D;aACDA,IAAI3G,SAAS+/D;IACtBp5D,MAAMoqB,OAAOxuB,QAAQoE,KAAKk5D,QAAQE;;MAGhCG,OAAO,KAAKC,QAAQpvC,OAAO6C,YAAYmsC;MACvCK,OAAO,KAAKC,QAAQtvC,OAAO6C,YAAYmsC;WAElChgE,IAAI,GAAGA,IAAIggE,WAAWhgE;IAC7BmgE,KAAKngE,KAAK4G,IAAI5G,KAAK;IACnBqgE,KAAKrgE,KAAK4G,IAAI5G,KAAK;;EAGrB,KAAKy5D,SAAS0G;;AAGhBvZ,SAAS2Z,MAAMnwD;AAEfmwD,KAAKp5D,UAAU6/C,UAAU,UAAU5pD;EACjC,KAAKq8D,MAAM/7D,KAAKN;;AAGlBmjE,KAAKp5D,UAAUqsD,SAAS;MAClB9qB,IAAI,KAAKu3B,KAAKjvC,OAAOxuB,OAAO,KAAKi3D;SAC9B,KAAKwG,KAAKjvC,OAAOxuB,QAAQ,KAAK89D,OAAO53B;;AAE9C/rC,OAAOiR,UAAU2yD;;;AC7CjB;AACA;AACA;AACA;AACA;;;ACJA;;;;;AEAA;AACA;;;;ICDIvvC,SAAS1qB,QAAQ,eAAe0qB;IAEhCwvC,kBAAkBl6D,QAAQ;IAC1BwkD,kBAAkBxkD,QAAQ;IAC1B+jD,OAAO/jD,QAAQ;IACfm6D,WAAWn6D,QAAQ;IAEnBo6D;IACAC,SAASp6D,OAAOg7B,UAAUh7B,OAAOg7B,OAAOo/B;IACxCC;EACFf,KAAK;EACL,SAAS;EACTgB,MAAM;EACNC,QAAQ;EACR,WAAW;EACXC,QAAQ;EACR,WAAW;EACX,WAAW;EACXx4B,QAAQ;;IAENy4B;AACJ,qBAAsBC;MAChB16D,OAAOyM,YAAYzM,OAAOyM,QAAQ2b;WAC7BrY,QAAQ1C,QAAQ;;OAEpB+sD,WAAWA,OAAOO,cAAcP,OAAOQ;WACnC7qD,QAAQ1C,QAAQ;;MAErBotD,OAAOC,UAAUrjE;WACZojE,OAAOC;;EAEhBP,WAAWA,YAAY1vC,OAAO0d,MAAM;MAChC0yB,OAAOC,cAAcX,UAAUA,UAAU,IAAI,KAAKO,MACnDjtD,KAAK;WACG;KACNstD,MAAM;WACA;;EAEXN,OAAOC,QAAQG;SACRA;;IAELjpD;AACJ;MACMA;WACKA;;MAEL5R,OAAOyM,WAAWzM,OAAOyM,QAAQmF;IACnCA,WAAW5R,OAAOyM,QAAQmF;aACjB5R,OAAOg7D;IAChBppD,WAAW5R,OAAOg7D;aACTh7D,OAAOgR;IAChBY,WAAW5R,OAAOgR;;IAElBY,WAAW5R,OAAO/C;;SAEb2U;;AAET,uBAAwBqpD,UAAUC,MAAMC,YAAYzhE,QAAQghE;SACnDN,OAAOO,UACZ,OAAOM;IAAYn1D,MAAM;KAAY,QAAQ,eAC7C2H,KAAK,UAAUpN;WACR+5D,OAAOQ;MACZ90D,MAAM;MACNo1D,MAAMA;MACNC,YAAYA;MACZ1vC;QACE3lB,MAAM40D;;OAEPr6D,KAAK3G,UAAU;KACjB+T,KAAK,UAAU2/B;WACT3iB,OAAO3O,KAAKsxB;;;AAIvB,wBAAyBhgC,SAASsgB;EAChCtgB,QAAQK,KAAK,UAAUpF;IACrB+yD,cAAc;MACZ1tC,SAAS,MAAMrlB;;KAEhB,UAAUvN;IACXsgE,cAAc;MACZ1tC,SAAS5yB;;;;AAIf1E,OAAOiR,UAAU,UAAU4zD,UAAUC,MAAMC,YAAYE,QAAQt/B,QAAQrO;aAC1DqO,WAAW;IACpBrO,WAAWqO;IACXA,SAAS1kC;;EAGX0kC,SAASA,UAAU;MACf2+B,OAAOL,UAAUt+B,OAAOpW;OAEvB+0C,eAAe16D,OAAO+P,YAAY;IACrCqrD,cAAc;UACR/yD;;QAEFA,MAAMy7C,KAAKmX,UAAUC,MAAMC,YAAYE,QAAQt/B;eACxCjhC;eACA4yB,SAAS5yB;;MAElB4yB,SAAS,MAAMrlB;;;;EAKnB4xD,gBAAgBkB,YAAYE;EAC5BJ,WAAWf,SAASe,UAAU1W,iBAAiB;EAC/C2W,OAAOhB,SAASgB,MAAM3W,iBAAiB;aAC5B72B,aAAa,sBAAsBxtB,MAAM;EAEpDo7D,eAAeC,YAAYb,MAAMjtD,KAAK,UAAU+tD;QAC1CA,aAAaV,cAAcG,UAAUC,MAAMC,YAAYE,QAAQX;WAE5D5W,KAAKmX,UAAUC,MAAMC,YAAYE,QAAQt/B;MAC9CrO;;;;ACpHN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;IClBI62B;;IAEAvkD,OAAOyM,WAAWzM,OAAOyM,QAAQ2b;EACnCm8B,kBAAkB;WACTvkD,OAAOyM,WAAWzM,OAAOyM,QAAQvD;MACtCuyD,gBAAgB7wD,SAAS6B,QAAQvD,QAAQvM,MAAM,KAAK,GAAG+N,MAAM,IAAI;EAErE65C,kBAAkBkX,iBAAiB,IAAI,UAAU;;EAEjDlX,kBAAkB;;AAEpBnuD,OAAOiR,UAAUk9C;;;ICXb8U,MAAMt5D,QAAQ;IACd4xD,YAAY5xD,QAAQ;IACpBu5D,MAAMv5D,QAAQ;IACd0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCwvC,kBAAkBl6D,QAAQ;IAC1BwkD,kBAAkBxkD,QAAQ;IAC1Bm6D,WAAWn6D,QAAQ;IAEnBw5D,QAAQ9uC,OAAO0d,MAAM;IACrBuzB;EACFrC,KAAK;EACLiB,MAAM;EACNqB,QAAQ;EACRpB,QAAQ;EACRC,QAAQ;EACRx4B,QAAQ;EACR45B,QAAQ;EACRC,WAAW;;AAGb,cAAerC,KAAKn5D,KAAKy7D;MACnBrwC,OAAOswC,UAAUvC;MACjBC,YAAaD,QAAQ,YAAYA,QAAQ,WAAY,MAAM;MAE3Dn5D,IAAI3G,SAAS+/D;IACfp5D,MAAMorB,KAAKprB;aACFA,IAAI3G,SAAS+/D;IACtBp5D,MAAMoqB,OAAOxuB,QAAQoE,KAAKk5D,QAAQE;;MAGhCG,OAAOnvC,OAAO6C,YAAYmsC,YAAYiC,MAAMlC;MAC5CM,OAAOrvC,OAAO6C,YAAYmsC,YAAYiC,MAAMlC;WACvC//D,IAAI,GAAGA,IAAIggE,WAAWhgE;IAC7BmgE,KAAKngE,KAAK4G,IAAI5G,KAAK;IACnBqgE,KAAKrgE,KAAK4G,IAAI5G,KAAK;;MAGjBuiE,QAAQvxC,OAAO6C,YAAYmsC,YAAYqC,UAAU;EACrDlC,KAAK9rC,KAAKkuC,OAAO,GAAG,GAAGvC;EACvB,KAAKuC,QAAQA;EACb,KAAKC,QAAQrC;EACb,KAAKE,OAAOA;EACZ,KAAKN,MAAMA;EACX,KAAKC,YAAYA;EACjB,KAAKhuC,OAAOA;EACZ,KAAK8B,OAAOmuC,MAAMlC;;AAGpBQ,KAAKp5D,UAAUuN,MAAM,UAAUtX,MAAM+iE;EACnC/iE,KAAKi3B,KAAK8rC,MAAM,KAAKH;MACjBt3B,IAAI,KAAK1W,KAAKmuC;EAClBz3B,EAAErU,KAAK,KAAKgsC,MAAM,KAAKL;SAChB,KAAKhuC,KAAK,KAAKquC;;AAGxB,mBAAoBN;EAClB,iBAAkB3iE;WACTyiE,IAAIE,KAAKtgC,OAAOriC,MAAMklC;;EAE/B,oBAAqBllC;eACR86D,YAAYz4B,OAAOriC,MAAMklC;;MAGlCy9B,QAAQ,YAAYA,QAAQ,oBAAoB0C;MAChD1C,QAAQ,cAAcH;SACnB8C;;AAGT,gBAAiBlB,UAAUC,MAAMC,YAAYE,QAAQt/B;EACnDk+B,gBAAgBkB,YAAYE;EAC5BJ,WAAWf,SAASe,UAAU1W,iBAAiB;EAC/C2W,OAAOhB,SAASgB,MAAM3W,iBAAiB;EAEvCxoB,SAASA,UAAU;MAEfL,WAAWs+B,KAAKj+B,QAAQk/B,UAAUC,KAAKxhE;MAEvC0iE,KAAK3xC,OAAO6C,YAAY+tC;MACxBgB,SAAS5xC,OAAO6C,YAAY4tC,KAAKxhE,SAAS;EAC9CwhE,KAAKptC,KAAKuuC,QAAQ,GAAG,GAAGnB,KAAKxhE;MAEzB4iE,UAAU;MACV/gC,OAAOmgC,MAAM3/B;MACb/2B,IAAIoC,KAAKuqB,KAAK0pC,SAAS9/B;WAElB9hC,IAAI,GAAGA,KAAKuL,GAAGvL;IACtB4iE,OAAOxrB,cAAcp3C,GAAGyhE,KAAKxhE;QAEzB6iE,IAAI7gC,KAAKvtB,IAAIkuD,QAAQ3gC,KAAKsgC;QAC1BzzD,IAAIg0D;aAECp2D,IAAI,GAAGA,IAAIg1D,YAAYh1D;MAC9BoC,IAAImzB,KAAKvtB,IAAI5F,GAAGmzB,KAAKugC;eACZrgE,IAAI,GAAGA,IAAI2/B,MAAM3/B,KAAK2gE,EAAE3gE,MAAM2M,EAAE3M;;IAG3C2gE,EAAEzuC,KAAKsuC,IAAIE;IACXA,WAAW/gC;;SAGN6gC;;AAGThmE,OAAOiR,UAAU6zB;;;ICxGbzQ,SAAS1qB,QAAQ,eAAe0qB;AAEpCr0B,OAAOiR,UAAU,UAAUm1D,OAAOnvC,UAAUvnB;MACtC2kB,OAAOye,SAASszB;WACXA;oBACSA,UAAU;WACnB/xC,OAAO3O,KAAK0gD,OAAOnvC;aACjB3X,YAAY4zB,OAAOkzB;WACrB/xC,OAAO3O,KAAK0gD,MAAM/kD;;cAEf/R,UAAUI,OAAO;;;;;ACV/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IClEI4yD,aAAa34D,QAAQ;IACrB08D,MAAM18D,QAAQ;IACdsgD,WAAWtgD,QAAQ;IACnB0qB,SAAS1qB,QAAQ,eAAe0qB;IAEhCiyC;EACF,gBAAgBD,IAAIE,IAAIC,YAAYH,IAAII;EACxC,YAAYJ,IAAII;EAChB,eAAeJ,IAAIE,IAAIC,YAAYH,IAAII;EACvC,WAAWJ,IAAII;EACf,WAAWJ,IAAIE,IAAIC,YAAYH,IAAIK;EACnC,WAAWL,IAAIK;;AAEjBJ,MAAMD,MAAMC,MAAM;AAClBA,MAAMK,OAAOL,MAAM;AACnBtmE,OAAOiR,UAAUy1D;AACjBzc,SAASyc,KAAKpE;AACd,aAAcjjB;EACZijB,WAAW/hE,KAAK;MACZqmE,WAAWvnB,KAAKtsC,KAAKwc;MACrBxc,OAAOuzD,MAAMM;MACbvkE;MACAg9C,KAAKwnB;IACPxkE,OAAO;;IAEPA,OAAO;;MAEL4H,MAAMo1C,KAAKp1C;OACVoqB,OAAOye,SAAS7oC;IACnBA,MAAMoqB,OAAO3O,KAAKzb;;MAEhB28D,aAAa,aAAaA,aAAa;IACzC38D,MAAMoqB,OAAOxuB,QAAQoE,KAAKA,IAAIqK,MAAM,GAAG;;MAErCwyD,KAAKznB,KAAKynB;OACTzyC,OAAOye,SAASg0B;IACnBA,KAAKzyC,OAAO3O,KAAKohD;;EAEnB,KAAKC,OAAOh0D,KAAKzK;IACf2B,KAAKA;IACL68D,IAAIA;IACJzkE,MAAMA;;;AAGVqkE,IAAIl8D,UAAU6/C,UAAU,UAAU5pD;SACzB4zB,OAAO3O,KAAK,KAAKqhD,KAAKjkC,OAAOriC;;AAEtCimE,IAAIl8D,UAAUqsD,SAAS;SACdxiC,OAAO3O,KAAK,KAAKqhD,KAAKnQ;;;;AChD/B;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ICZIoQ,QAAQr9D,QAAQ;IAChBs9D,aAAat9D,QAAQ;IACrB0qB,SAAS1qB,QAAQ,eAAe0qB;IAChC6yC,eAAev9D,QAAQ;IACvBohD,YAAYphD,QAAQ;IACpBw9D,MAAMx9D,QAAQ;IACdy9D,OAAOz9D,QAAQ;IACfsgD,WAAWtgD,QAAQ;AAEvB,gBAAiBoJ,MAAM9I,KAAK68D;EAC1B/b,UAAUxqD,KAAK;EAEf,KAAK8mE,aAAaC;EAClB,KAAKC,cAAcJ,IAAIK,IAAIv9D;EAC3B,KAAKw9D,QAAQpzC,OAAO3O,KAAKohD;EACzB,KAAKY,QAAQ30D;EACb,KAAK40D,eAAe;;AAGtB1d,SAAS2d,QAAQ7c;AAEjB6c,OAAOp9D,UAAU6/C,UAAU,UAAU5pD;EACnC,KAAK4mE,OAAOj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OAAOiR,UAAU07C;;;AC9MjtvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;IC9FIt4B,SAAS1qB,QAAQ,eAAe0qB;IAChCk9C,aAAa5nE,QAAQ;IACrB6nE,MAAM7nE,QAAQ;IACd8nE,KAAK9nE,QAAQ,YAAY+nE;IACzBvD,KAAKxkE,QAAQ;IACbgoE,YAAYhoE,QAAQ;IACpBioE,SAASjoE,QAAQ;AAErB,cAAe0rB,MAAMprB,KAAK4nE,UAAUC,UAAUhpE;MACxC+lE,OAAO8C,UAAU1nE;MACjB4kE,KAAKkD;;QAEHD,aAAa,WAAWA,aAAa,uBAAuBhoE,MAAM;WAC/DkoE,OAAO38C,MAAMw5C;aACXA,KAAKxsE,SAAS;QACnByvE,aAAa,iBAAiBhoE,MAAM;WACjCmoE,QAAQ58C,MAAMw5C,MAAMgD;;QAEvBC,aAAa,SAASA,aAAa,uBAAuBhoE,MAAM;;EAEtEurB,OAAOhB,OAAOxuB,QAAQiD,KAAKusB;MACvB1D,MAAMk9C,KAAKqD,QAAQzv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MACnBsxD,cAAc5F,GAAG52C,KAAK4gB,IAAI07B,OAAON,SAASG,KAAK7E,KAAKqD;MACpDvuB,KAAKowB,QAAQ7D,MAAM/B,GAAGsB,KAAKZ,KAAK8E;MAChC/vB,KAAKmwB,QAAQ7D,MAAM/B,GAAGsB,KAAKZ,KAAK+E;MAChCI,OAAOnF,KAAKoF;MACZ9+D,IAAI05D,KAAK8E;MACTj0C,IAAImvC,KAAK+E;MACT/H,KAAKloB,GAAGwsB,OAAOtB,KAAKqF,WAAW9D;MAC/B+D,KAAKvwB,GAAGusB,OAAOtB,KAAKuF,WAAWhE;MAC/BrkC,IAAI8/B,GAAGwI,KAAKF,IAAIrB,KAAKkB,MAAMN,KAAKv+D,GAAG29D,KAAKpzC;SACrCy0C,GAAGG,KAAKvoC,GAAG+mC,KAAKe,OAAOJ,WAAWC,KAAK7E,KAAKqD,SAASqC,YAAYlgD,QAAQ,MAAM1C;;AAExF6/C,IAAI8B,OAAOA;AAEXtzE,OAAOiR,UAAUugE;;;AClCjtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzzjlbdrRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClzjwlPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzxrrhnC,OAAOhgC,QAAQ;IACf6qE,QAAQ7qE,QAAQ;IAChB8qE,UAAU9qE,QAAQ;IAClB+qE,UAAU/qE,QAAQ;IAClBgrE,SAAShrE,QAAQ;IACjB0qB,SAAS1qB,QAAQ,eAAe0qB;AACpCr0B,OAAOiR,UAAU0gE;AAEjB,mBAAoBtwD;MACdwjD;aACOxjD,WAAW,aAAagT,OAAOye,SAASzxB;IACjDwjD,WAAWxjD,OAAOuzD;IAClBvzD,SAASA,OAAOpX;;aAEPoX,WAAW;IACpBA,SAASgT,OAAO3O,KAAKrE;;MAGnBwzD,WAAWJ,QAAQpzD,QAAQwjD;MAE3BxiE,OAAOwyE,SAAS/rE;MAChBrI,OAAOo0E,SAASp0E;MAChBq0E,SAASC;UACL1yE;SACD;MACH0yE,QAAQprC,KAAKqrC,YAAYt5C,OAAOj7B,MAAM,OAAOw0E,eAAeC;SAEz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B,WAAWtc,MAAMvU,QAAQmwB,IAAIzvC;SAEtB+6E,WAAWtrC,KAAKnwB,QAAQuU;;;;AC1GjdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClhxuxpwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChhRC,UAAUvtB,QAAQ40E;SACRvtE,YAAY,mBAAmBjR,WAAW,cAAcw+E,QAAQvtE,kBAChE3G,WAAW,cAAcA,OAAOm2C,MAAMn2C,QAAQ,YAAYk0E,YAChE50E,gBAAgB60E,eAAe,cAAcA,aAAa70E,UA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F,IAAIitB;QACbsE,MAAMA,IAAI3hB,MAAM,GAAG5P,KAAK,MAAMuxB,IAAI3hB,MAAM5P;;;WAIrCuxB;;;EAOTsuD,YAAYuC;EACZvC,UAAU,aAAaA,UAAUA,YAAYA;;aAGlCj6E,UAAU,cAAcA,OAAOm2C;IACxCn2C,OAAO;aAAqBi6E;;oBAGZvkF,UAAU,eAAeA,OAAOiR;IAChDjR,OAAOiR,UAAUszE;;SAIZD;MACHA,sBAAsBpzE,QAAQ,eAAeA,OAAOA,OAAO1N;;IAG7D8gF,aAAaC,YAAYA;;GAE1B;;;ACr1FH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnvcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCA;AACA;AACA;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtvzltZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdzglFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7EA;OAEQlwD,UAAW1qB,QAAQ;MACrB2nC,aAAa3nC,QAAQ;AAE3B3J,OAAOiR,UAAU,iBAAkBM;mBAChB+L,KAAK/L;QAChB8iB,OAAOye,SAASx1B;YACZA;eACGg0B,WAAW8M,aAAa9gC;YAC3BA,EAAEhJ;;YAEF+f,OAAO3O,KAAKpI;;;;AAKxBtd,OAAOiR,QAAQ6yD,WAAW9jE,OAAOiR;AAEjCjR,OAAOiR,QAAQ69E,SAAS,iBAAkBv9E;mBACvB+L,KAAK/L;QAChB8iB,OAAOye,SAASx1B;gBACRg0B,aAAaa,OAAO70B;eACrBg0B,WAAW8M,aAAa9gC;YAC3BA;;gBAEIg0B,aAAaa,OAAO9d,OAAO3O,KAAKpI;;;;;;AC1BhjvpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1EA;;MACMyxE,aAAaplF,QAAQ;MAErBqlF,yBAAyBxrF,WAAW,mBAAmBc,aAAa,YAAYA,SAAS2qF,aAAa;MACtGC,cAAcH;MACdI,aAAaH,oBAAoBE;MACjCE,mBAAmBF,gBAAgBF;MACnCK,uBAAuBH,eAAeF;MACtCM,iBAAiB3lF,YAAY,qBAAqB0M,YAAY,sBAAsBA,QAAQk5E,YAAY,eAAel5E,QAAQk5E,QAAQ7/E,SAAS,WAAWw/E;;MAE3JM,sBAAsB5zE,kBAAkB,qBAAqB1K,SAAS,sBAAsBu+E,sBAAsB,eAAev+E,gBAAgBu+E;MACjJC,iBAAiBr5E,YAAY,sBAAsBA,QAAQ4b,QAAQ,iCAAwC;AAEjHjyB,OAAOiR;EACL0+E,QAAQD;EACRX,YAAYG;EACZU,gBAAgBR;EAChBS,oBAAoBR;EACpB54E,QAAQ64E;;;;EAIRQ,WAAWX;EACXY,aAAaP;EACbQ,cAAchB;;;;;;ACvBhB;;aAEexrF,WAAW,sBAAsBA,OAAO6S,YAAY,YAAY7S,OAAO6S,QAAQhU,SAAS;WACxF;;;aAIAgU,YAAY,sBAAsBA,QAAQC,aAAa,cAAcD,QAAQC,SAAS25E;WACtF;;;aAIA5zE,cAAc,mBAAmBA,UAAUnG,cAAc,YAAYmG,UAAUnG,UAAU3U,QAAQ,eAAe;WAChH;;SAGJ;;AAGXvB,OAAOiR,UAAU89E;;;ACpBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AEpnrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;OCnBQ16D,UAAW1qB,QAAQ;OACnBumF,iBAAkBvmF,QAAQ;;;AAIlC,uBAAwBsgB;SACfA,eAAe3K,eACnB2K,OAAO,QAAQA,IAAIvV,eAAe,QAAQuV,IAAIvV,YAAYhF,SAAS,wBAC3Dua,IAAIxH,eAAe;;AAGhCziB,OAAOiR,UAAU,AAAAk/E;QACT59D,iBAAiB49D,OAAOnoD,uBAAuBmoD,OAAO59D;QAEtDhhB,UAAU;UACR6+E,eAAeF,cACnB,EAAGnvF,MAAMgtB,MAAM7V;MACbi4E,OAAOloF,iBAAiB,WAAWlH;MACnCovF,OAAOloF,iBAAiB,SAASiQ;MACjCi4E,OAAOloF,iBAAiB,SAAS8lB;aAE1B;QACLwE,eAAehyB,KAAK4vF,QAAQ,WAAWpvF;QACvCwxB,eAAehyB,KAAK4vF,QAAQ,SAASj4E;QACrCqa,eAAehyB,KAAK4vF,QAAQ,SAASpiE;;;MAGvCo/B,eAAe5sC;;sBAGA9f,SAAU2vF;YACrBn4D,cAAcx3B,QAAQ4zB,OAAO3O,KAAKjlB,QAAQA;;;MAIhD4vF,YAAYF,OAAOG,eAAe;MAClCC;EAEJJ,OAAOloF,iBAAiB,QAAQ;IAC9BooF,YAAY;IACZE,YAAY;;EAGdJ,OAAOloF,iBAAiB,SAAS;IAC/BooF,YAAY;IACZE,YAAY;;EAGdJ,OAAOloF,iBAAiB,SAAS,AAAAuR;SAC1B62E,WAAWE,YAAY/2E;;EAG9BjI,OAAO8+E,YAAY,UAAU12E,QAAQ,CAAC1C,SAASkB;QACzCk4E,kBAAkBp5E;QAClBs5E,kBAAkBp4E,OAAOo4E;UAEvBC,UAAU,AAAAC;MACdl+D,eAAehyB,KAAK4vF,QAAQ,QAAQO;MACpCn+D,eAAehyB,KAAK4vF,QAAQ,SAASQ;MACrCF;;UAGIC,SAAS,MAAMF,QAAQv5E;UACvB05E,UAAU,AAAAn3E,OAAOg3E,QAAQ,MAAMr4E,OAAOqB;IAE5C22E,OAAOloF,iBAAiB,QAAQyoF;IAChCP,OAAOloF,iBAAiB,SAAS0oF;;SAG5Bp/E;;;;ACrxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9irnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ICeImhD,4BAA4BvoD,OAAOuoD,8BACrC,mCAAmCzoC;MAC7Btb,OAAOxE,OAAOwE,KAAKsb;MACnB2mE;WACKvtF,IAAI,GAAGA,IAAIsL,KAAKrL,QAAQD;IAC/ButF,YAAYjiF,KAAKtL,MAAM8G,OAAOqG,yBAAyByZ,KAAKtb,KAAKtL;;SAE5DutF;;IAGPC,eAAe;AACnB5/E,QAAQiwB,SAAS,UAAS30B;OACnB0nB,SAAS1nB;QACRukF;aACKztF,IAAI,GAAGA,IAAIkM,UAAUjM,QAAQD;MACpCytF,QAAQ/vF,KAAKs0C,QAAQ9lC,UAAUlM;;WAE1BytF,QAAQ5sF,KAAK;;MAGlBb,IAAI;MACJuN,OAAOrB;MACPoiB,MAAM/gB,KAAKtN;MACX2yB,MAAM1rB,OAAOgC,GAAG8jB,QAAQwgE,cAAc,UAAS92E;QAC7CA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AAOC,cAAc;;SAExDF,OAAOoG,iBACZzP,IACA4xD,0BAA0BshC;;AAI9B/iF,QAAQ8iF,UAAU7gC,SAAS4gC;AAE3B,+BAA+B/6E,QAAQjR;;;;;OAKhCiR;QACCm7E,gBAAgBpqF,MAAM;IAC1BoqF,UAAUn7E,SAASA;IACnBA,SAASm7E;;SAEJpsF,GAAGiR;;AAGZ,qBAAqBi7E;aACRA,aAAa;cACZ1kF,UAAU;;;;;EAMtB;QACMsB;aACKvN,IAAI,GAAGA,IAAIkM,UAAUjM,QAAQD;MACpCuN,KAAK7P,KAAKwO,UAAUlM;;QAGlB8wF,UAAUvjF,KAAK6c;eACR0mE,YAAY;gBACX7kF,UAAU;;QAElB4B,OAAO;QACPpJ,KAAK;aACAqsF,QAAQnsF,MAAMkJ,MAAM3B;;;;IAI7BykF,SAAShsF,MAAM,MAAM4I,MAClByG,KAAK,UAASsgC;MAAOthC,QAAQmF,SAAS1T,GAAG6C,KAAK,MAAM,MAAMgtC;OACrD,UAASy8C;MAAO/9E,QAAQmF,SAAS64E,sBAAsB1pF,KAAK,MAAMypF,KAAKtsF;;;EAGjFqC,OAAOihB,eAAekpE,eAAenqF,OAAOugB,eAAespE;EAC3D7pF,OAAOoG,iBAAiB+jF,eACA5hC,0BAA0BshC;SAC3CM;;AAETrjF,QAAQsjF,cAAcA;;;AC1sBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdzUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnDA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnnJA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA+G,QAAQ4d,aAAaA;AACrB5d,QAAQ6d,OAAOA;AACf7d,QAAQ8d,OAAOA;AACf9d,QAAQ+d,YAAYA;AACpB/d,QAAQge,UAAUC;AAClBje,QAAQke,WAAW;MACdC,SAAS;SAEN;SACDA;MACJA,SAAS;MACTlsB,QAAQ0B,KAAK;;;;;;;AAShBqM,QAAQoe,UACP,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxtmzpvpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnxGA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpxtD;IACAq0D,YAAY;IACZC,UAAU;IACVC,UAAU;IACVC,eAAe;IACfn0D,QAAQ;IACRo0D,aAAa;IACb7+D,MAAM;IACN8+D,UAAU;IACVh6D,MAAM;IACNoxD,QAAQ;IACR6I,aAAa;IACb7rF,KAAK;IACL8rF,YAAY;IACZC,cAAc;IACdvrD,MAAM;;EAGV,iBAAiBxgC;;WAENgsF,eAAeC,cAAcjsF,MAAMsF;;EAG9C,kBAAkB4mF,KAAKjkE;WACZkkE,QAAQpuF,MAAM,OAAOmuF,KAAKtwF,OAAOqsB;;EAG5C,wBAAwBmkE,YAAYnkE;QAC5BokE,SAAS,GAAGC,cAAcF,WAAW/yF,QAAQ4mB,KAAKziB,SAAS,IAAIpE,GAAGmC,GAAGgxF,IAAIjuB,KAAKkuB,eAAeC,YAAYC,aAAalsD;SACrHpnC,IAAI,GAAGA,IAAIkzF,aAAalzF;iBACdgzF,WAAWhzF,OAAO;QACzBoE,UAAU4uF,WAAWhzF;wBAETgzF,WAAWhzF,OAAO;QAC9BmzF,KAAKH,WAAWhzF;;YACZmzF,GAAG7nF;;UACHub,MAAMgI,KAAKokE;eACN9wF,IAAI,GAAGA,IAAIgxF,GAAG7nF,KAAKrL,QAAQkC;gBACxB0kB,OAAOjpB;wBACG6I,MAAMssF,QAAQ,iEAAiEI,GAAG7nF,KAAKnJ,IAAIgxF,GAAG7nF,KAAKnJ,IAAE;;YAEnH0kB,MAAMA,IAAIssE,GAAG7nF,KAAKnJ;;mBAGjBgxF,GAAGI;;UACR1sE,MAAMgI,KAAKskE,GAAGI;;;UAGd1sE,MAAMgI,KAAKokE;;YAGXn1D,GAAGu0D,SAAS3zF,KAAKy0F,GAAGn0F,SAAS8+B,GAAGw0D,cAAc5zF,KAAKy0F,GAAGn0F,SAAS6nB,eAAe1iB;UAC9E0iB,MAAMA;;YAGNiX,GAAGy0D,YAAY7zF,KAAKy0F,GAAGn0F,iBAAiB6nB,QAAQ,YAAYyD,MAAMzD;oBACxD5a,UAAU8mF,QAAQ,2CAA2ClsE;;YAGvEiX,GAAGK,OAAOz/B,KAAKy0F,GAAGn0F;UAClBs0F,cAAczsE,OAAO;;gBAGjBssE,GAAGn0F;eACF;YACD6nB,MAAM1V,SAAS0V,KAAK,IAAI2C,SAAS;;eAEhC;YACD3C,MAAM3f,OAAOiuB,aAAahkB,SAAS0V,KAAK;;eAEvC;eACA;YACDA,MAAM1V,SAAS0V,KAAK;;eAEnB;YACDA,MAAM/nB,KAAK2K,UAAUod,KAAK,MAAMssE,GAAGK,QAAQriF,SAASgiF,GAAGK,SAAS;;eAE/D;YACD3sE,MAAMssE,GAAG9I,YAAYoJ,WAAW5sE,KAAKqgE,cAAciM,GAAG9I,aAAaoJ,WAAW5sE,KAAKqgE;;eAElF;YACDrgE,MAAMssE,GAAG9I,YAAYoJ,WAAW5sE,KAAK0X,QAAQ40D,GAAG9I,aAAaoJ,WAAW5sE;;eAEvE;YACDA,MAAMssE,GAAG9I,YAAYnjF,OAAOwpB,OAAO7J,IAAI0kE,YAAY4H,GAAG9I,eAAeoJ,WAAW5sE;;eAE/E;YACDA,OAAO1V,SAAS0V,KAAK,QAAQ,GAAG2C,SAAS;;eAExC;YACD3C,MAAM3f,OAAO2f;YACbA,MAAOssE,GAAG9I,YAAYxjE,IAAIgM,UAAU,GAAGsgE,GAAG9I,aAAaxjE;;eAEtD;YACDA,MAAM3f,SAAS2f;YACfA,MAAOssE,GAAG9I,YAAYxjE,IAAIgM,UAAU,GAAGsgE,GAAG9I,aAAaxjE;;eAEtD;YACDA,MAAM/f,OAAOK,UAAUqiB,SAAStsB,KAAK2pB,KAAK5V,MAAM,IAAI,GAAGib;YACvDrF,MAAOssE,GAAG9I,YAAYxjE,IAAIgM,UAAU,GAAGsgE,GAAG9I,aAAaxjE;;eAEtD;YACDA,MAAM1V,SAAS0V,KAAK,QAAQ;;eAE3B;YACDA,MAAMA,IAAInZ;YACVmZ,MAAOssE,GAAG9I,YAAYxjE,IAAIgM,UAAU,GAAGsgE,GAAG9I,aAAaxjE;;eAEtD;YACDA,OAAO1V,SAAS0V,KAAK,QAAQ,GAAG2C,SAAS;;eAExC;YACD3C,OAAO1V,SAAS0V,KAAK,QAAQ,GAAG2C,SAAS,IAAIw7B;;;YAGjDlnB,GAAGpK,KAAKh1B,KAAKy0F,GAAGn0F;UAChBoF,UAAUyiB;;cAGNiX,GAAGK,OAAOz/B,KAAKy0F,GAAGn0F,WAAWs0F,eAAeH,GAAG/rD;YAC/CA,OAAOksD,cAAc,MAAM;YAC3BzsE,MAAMA,IAAI2C,WAAWwD,QAAQ8Q,GAAGsJ,MAAM;;YAGtCA,OAAO;;UAEXgsD,gBAAgBD,GAAGO,WAAWP,GAAGO,aAAa,MAAM,MAAMP,GAAGO,SAAS7jF,OAAO,KAAK;UAClFwjF,aAAaF,GAAGK,SAASpsD,OAAOvgB,KAAK5mB;UACrCilE,MAAMiuB,GAAGK,QAASH,aAAa,IAAID,cAAcO,OAAON,cAAc,KAAM;UAC5EjvF,UAAU+uF,GAAGS,QAAQxsD,OAAOvgB,MAAMq+C,MAAOkuB,kBAAkB,MAAMhsD,OAAO89B,MAAMr+C,MAAMq+C,MAAM99B,OAAOvgB;;;;WAItGziB;;MAGPyvF,gBAAgB/sF,OAAO7B,OAAO;EAElC,uBAAuB6tF;QACfe,cAAcf;aACPe,cAAcf;;QAGrBgB,OAAOhB,KAAK3mE,OAAO6mE,iBAAiBe,YAAY;WAC7CD;WACE3nE,QAAQ2R,GAAGtF,KAAK1kB,KAAKggF,WAAW;QACjCd,WAAWt1F,KAAKyuB,MAAM;kBAEhBA,QAAQ2R,GAAG8rD,OAAO91E,KAAKggF,WAAW;QACxCd,WAAWt1F,KAAK;kBAEVyuB,QAAQ2R,GAAG20D,YAAY3+E,KAAKggF,WAAW;YACzC3nE,MAAM;UACN4nE,aAAa;cACTC,iBAAiBC,oBAAoB9nE,MAAM,IAAI+nE;eAC9CA,cAAcp2D,GAAGl3B,IAAIkN,KAAKmgF,wBAAwB;YACnDD,WAAWt2F,KAAKw2F,YAAY;oBACpBD,oBAAoBA,kBAAkBphE,UAAUqhE,YAAY,GAAGj0F,aAAa;mBAC3Ei0F,cAAcp2D,GAAG40D,WAAW5+E,KAAKmgF,wBAAwB;gBAC1DD,WAAWt2F,KAAKw2F,YAAY;0BAEtBA,cAAcp2D,GAAG60D,aAAa7+E,KAAKmgF,wBAAwB;gBACjED,WAAWt2F,KAAKw2F,YAAY;;0BAGlBC,YAAY;;;;sBAKpBA,YAAY;;UAE1BhoE,MAAM,KAAK6nE;;UAGXD,aAAa;;YAEbA,cAAc;oBACJttF,MAAM;;QAGpBusF,WAAWt1F;UAEH+0F,aAAatmE,MAAM;UACnBonE,UAAapnE,MAAM;UACnB7gB,MAAa6gB,MAAM;UACnBib,MAAajb,MAAM;UACnBunE,UAAavnE,MAAM;UACnBynE,OAAaznE,MAAM;UACnBqnE,OAAarnE,MAAM;UACnBk+D,WAAal+D,MAAM;UACnBntB,MAAamtB,MAAM;;;kBAKjBgoE,YAAY;;MAE1BL,OAAOA,KAAKjhE,UAAU1G,MAAM,GAAGlsB;;WAE5B4zF,cAAcf,OAAOE;;;;;;aAOrBplF,YAAY;IACnBA,QAAQ,aAAamlF;IACrBnlF,QAAQ,cAAcwmF;;aAEfj0F,WAAW;IAClBA,OAAO,aAAa4yF;IACpB5yF,OAAO,cAAci0F;eAEVntF,WAAW,cAAcA,OAAO;MACvCA,OAAO;;UAEC,WAAW8rF;UACX,YAAYqB;;;;;;;;AChOhltEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChlTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACYA;;;AAEAz3F,OAAOiR,UAAUs6C;;IAGbC;;AAGJD,SAASE,gBAAgBA;;IAGrBC,KAAK/hD,QAAQ,UAAUypB;IAEvBu4B,kBAAkB,yBAAyBC,SAASvpD;SAC/CupD,QAAQj5B,UAAUtwB,MAAMiB;;;;IAO7BuoD,SAASliD,QAAQ;;IAIjB0qB,SAAS1qB,QAAQ,UAAU0qB;IAE3By3B,gBAAgBliD,OAAO+qB,eAAc;AAEzC,6BAA6Bsd;SACpB5d,OAAO3O,KAAKusB;;AAGrB,uBAAuBhoB;SACdoK,OAAOye,SAAS7oB,QAAQA,eAAe6hC;;;IAK5CC,YAAYpiD,QAAQ;IAEpB2mB;IAEAy7B,aAAaA,UAAUC;EACzB17B,QAAQy7B,UAAUC,SAAS;;EAE3B17B,QAAQ;;;IAKNghB,aAAa3nC,QAAQ;IAErBsiD,cAActiD,QAAQ;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D,SAAS2rD,eAAe;QACxB9hD,OAAOqB;;MAGTlL,SAAS4rD,UAAU1gD;;;QAIjBvC,UAAU3I,SAAS0rD;QAEnB/iD,YAAY;MACd3I,SAAS8rD,gBAAgB;MACzB9rD,SAAS0rD,gBAAgB;MACzB1rD,SAAS2rD,eAAe;MACxBhjD,QAAQsjD,iBAAiBt5D,WAAW;;IAGtCqN,SAAS6rD,UAAU;;EAErBpN,OAAO5jD,GAAG,YAAY4xD,WAAWpwD,KAAK,MAAM2D;SACrCA;;AAGTtO,OAAOiR,UAAU07C;;;AC9MjtvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;IC9FI31C;AAEJhX,OAAOiR,iBAAiB2zD,mBAAmB,aACvCA,eAAej6D,YAAYnH,WAAW,cAAcA,SAASoG;AAE7D,AAAA9B,OAAOkP,YAAYA,UAAU2C,QAAQ1C,YACpCI,KAAKvP,IACL68D,MAAM,AAAAnrD,OAAO3S,WAAW;QAAc2S;GAAO;;;ACRltmzpvpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnxGA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxlpvPA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnzXA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnhdA;;IACIyZ,OAAOhiB;;AAGXgiB,KAAKC,YAAYvpB,QAAQ;;AAGzBspB,KAAKE,SAASxpB,QAAQ;;AAGtBspB,KAAKG,eAAezpB,QAAQ;;AAG5BspB,KAAKI,QAAQ1pB,QAAQ;;AAGrBspB,KAAKK,UAAU3pB,QAAQ;;AAGvBs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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACplDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnjztB,QAAQ;IAChB0tB,QAAQ1tB,QAAQ;;IAGhBspB,OAAOjzB,OAAOiR,UAAUmmB,MAAMnE,OAAOmE,MAAMnE;;CAG9C;;;;aAIW5c,YAAY,eAAeA,QAAQmF;IAC3CyX,KAAKzX,WAAWnF,QAAQmF;eACdZ,iBAAiB;MACzBqY,KAAKrY,eAAeA;;;;MAIpBqY,KAAKrY,eAAeqY,KAAKzX;;;;;aAMnBZ,iBAAiB;IACzBqY,KAAKrY,eAAe;aAAoBA,aAAa5S,MAAM/G,WAAWsO;;IACtE0jB,KAAKzX,WAAW,UAAS8b;aAChB1c,aAAa0c;;;;;;;;;EAWxBrE,KAAKrY,eAAe,UAAS0c;IAC3BzwB,WAAWywB,UAAU;;;aAIb9zB,WAAW,sBACZA,OAAOmY,gBAAgB;QAC1B4b,MAAM;QACNC;IACJvE,KAAKrY,eAAe,UAAS0c;MAC3BE,UAAUz2B,KAAKu2B;;;UAGZE,UAAUl0B,WAAW;QACtBE,OAAOmY,YAAY4b,KAAK;;;IAG5B,iBAAiBr1B;UACZA,MAAMqP,WAAW/N,UAAUtB,MAAMzB,SAAS82B;QAC3Cr1B,MAAMu1B;YACFC,OAAOF,UAAUljB;QACrBkjB,UAAUl0B,SAAS;QACnBo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AAQ;MACnBA,UAAU;;;;WAKNl/B,IAAI,GAAGw2B,MAAMx2B,OAAOuO,SAASvO,IAAIw2B,MAAM14B,SAAS,KAAKkC;IAC3Dsc,MAAM/gB,KAAK;;aAGHszB,WAAW;WACZA,OAAO3O,KAAK5D,MAAMS;;aAGhBoS,WAAW7S,MAAMS;;AAG9B,+BAA+ByZ,OAAOuI;MAChClhC,IAAI;MACJohC,OAAOF,SAASjhC;MAChByQ,QAAQwwB,SAASrxB,OAAO;MACxBmB,UAAU;OACVhR,IAAI,GAAGA,IAAI24B,MAAM14B,YAAYD;aACvB0M,IAAI,GAAG20B,QAAQ1I,MAAMxB,GAAGn3B,IAAI0M,IAAIsE,OAAO/Q,UAAUyM;MACvD20B,SAASrwB,OAAOtE,MAAM;MACtBsE,OAAOtE,KAAK20B,QAAQD;MACpBC,QAASA,QAAQD,OAAQ;;WAGrBC,QAAQ;MACZrwB,OAAOtT,KAAK2jC,QAAQD;MACpBC,QAASA,QAAQD,OAAQ;;;MAIzBh9B,SAAS;;OAGTpE,IAAI,GAAG24B,MAAMxB,GAAGn3B,OAAO,KAAKA,IAAI24B,MAAM14B,WAAW,KAAKD;IACxDoE,UAAUsM;;;OAGR1Q,IAAIgR,OAAO/Q,SAAS,GAAGD,KAAK,KAAKA;IACnCoE,UAAU88B,SAASlwB,OAAOhR;;SAGrBoE;;;;ACxzlkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrteA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ICDI2vB,QAAQztB,QAAQ;AACpBA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;IAEJg7B,QAAQvN,MAAMuN,QAAQvN,MAAMuN;IAE5BC;IACDxN,MAAMnE,KAAK8E,aAAaX,MAAM2D,QAAQ8J;EACvCD,SAASj7B,QAAQ;;;;;;;;;;;;;;;;;;AAmBnB3J,OAAOiR,UAAUmmB,MAAM0N,SAASH,MAAMG,SAAS,UAC7C3vB,GAAGuM,GAAGE,GAAGmjB,OAAOC,IAAI1N;aACV0N,OAAO;IACf1N,WAAW0N;IACXA,KAAK;;;;MAKJ5N,MAAMnE,KAAK8E,aAAaX,MAAM2D,QAAQ8J,qBACvCD,OAAOE,WAAWE,OAAO,eAAeA,OAAO,cAC9CJ,OAAOK,WAAW3hC,SAAS,OAAO0hC,MAAMA,OAAO;eACtCA,OAAO;;MAEfA,K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AASzkC,GAAG80B;QACvBrW,QAAQ;aACJ/H,IAAI,GAAGA,IAAIoe,GAAGpe,KAAK;MACzB+H,SAASvX,OAAOiuB,aAAcn1B,KAAK0W,IAAK;;IAE1CzI,IAAI41B,QAAQplB;;;;;;;;;;EAWdxQ,IAAIy2B,iBAAiB,UAAS/D;;QAEzBA,WAAW9yB;MACZI,IAAI21B,WAAW,UAASD,QAAQ1P;QAC9B,kBAAkB5yB;cACZjE,OAAOiE,EAAEjE;cACVA,KAAK22B,SAAS32B,KAAK22B,MAAM2O;YAC1B70B,KAAK82B,oBAAoB,WAAWzsB;YACpC+b,SAAS72B,KAAK22B,MAAM2O,KAAKvsB,KAAK/Y,KAAK22B,MAAM2O,KAAKjkB;;;QAGlD5Q,KAAKjJ,iBAAiB,WAAWsT;QACjCrK,KAAKyK;UAAayb;YAAQ2O;cAAOiB,QAAQA;;;;;;;UAIvCzrB,WAAW,UAAS7W;YAClBjE,OAAOiE,EAAEjE;YACVA,KAAK22B,SAAS32B,KAAK22B,MAAM2O;UAC1Bz0B,IAAI21B,SAASxmC,KAAK22B,MAAM2O,KAAKiB,QAAQ,UAASxtB,KAAKsI;YACjDkiB,OAAOroB;cAAayb;gBAAQ2O;kBAAOvsB,KAAKA;kBAAKsI,OAAOA;;;;;;;;MAK1DkiB,OAAO/7B,iBAAiB,WAAWsT;;;SAIhCjK;;;;ACjazZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjunxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChtiBI8lB,QAAQztB,QAAQ;AACpBA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;IACJs+B,gBAAgBt+B,QAAQ;IACxBu+B,qBAAqBD,cAAcC;IACnCC,sBAAsBF,cAAcE;WAE9BC,eAAe;MACnBA,aAAahR,MAAMiR,KAAKD;;IAG1BhQ,aAAahB,MAAMnE,KAAKmF;IACxBkQ,sBAAsBjU,WAAW,cAAcM,aAAaN;;;;;AAMhE+C,MAAMmR,MAAMnR,MAAMmR;AAClBvoC,OAAOiR,UAAUmmB,MAAMmR,IAAIC,UAAUpR,MAAMoR,UAAUpR,MAAMoR;IACvDA,UAAUpR,MAAMoR;AAEpBA,QAAQC;AACRD,QAAQC,UAAUC,yBAAyB;AAC3CF,QAAQC,UAAUE,0BAA0B;AAC5CH,QAAQC,UAAUG,mBAAmB;AACrCJ,QAAQC,UAAUI,mBAAmB;AACrCL,QAAQC,UAAUK,mBAAmB;AAErCN,QAAQO,kBAAkB,UAAShO;EACjCA,UAAUA;MACNkL,OAAOlL,QAAQkL;MAChBA,SAAShlC;;IAEVglC,OAAO7O,MAAMuQ,OAAOqB,aAAaR,QAAQC,UAAUG;oBACpC3C,SAAS;QACrBA,KAAK3iC,WAAWklC,QAAQC,UAAUG;gBACzBt5B,UACR,oBAAoBk5B,QAAQC,UAAUG,mBACtC;;eAEM3C,gBAAgBtR;cAChBrlB,UACR;;EAGJ22B,OAAOgD;IAAuBjlC,SAASiiC;IAAMhP,UAAU;;MAEnDiS,SAASZ,aAAaE,QAAQC,UAAUC;MACxCS,SAASb,aAAaE,QAAQC,UAAUE;WACpCtlC,IAAI,GAAGA,IAAI,MAAMA;IACvB8lC,GAAG9lC,KAAK4iC,KAAK5iC;;EAEf+lC,oBAAoBF,IAAIC;;IAChBE,WAAWH;IAAII,YAAYH;;;;;;;;;;;AAWrCX,QAAQe,qBAAqB,UAAStf;MAChCuf;MACAC;MACAC,QAAQtS,MAAMuS,KAAKvrB,SAAS6L,KAAKke,qBAAqBqB,SAASC;OAC/DC;QACE3lC,YAAY+F,MAAM;IACtB/F,MAAM0lC,SAASA;UACT1lC;;MAEJ6lC,MAAMxS,MAAMuS,KAAKE,SAASL,QAAQM;MAClCC,aAAa3S,MAAM4S,KAAKC;MACzBL,QAAQG;cACCjgC,MAAM,kBAAkB8/B,MAAM,qBACtCG,aAAa;;MAEbT,aAAaE,QAAQF;;;MAGrBY,kBAAkBjB;IACpBjlC,SAASozB,MAAMuS,KAAKQ,QAAQb,YAAYp/B;IACxC+sB,UAAU;;;;;;IAKJiT,iBAAiBA;;;;;;;;;;AAU3B1B,QAAQ4B,oBAAoB,UAASngB;;MAE/Buf;MACAC;MACAC,QAAQtS,MAAMuS,KAAKvrB,SAAS6L,KAAKie,oBAAoBsB,SAASC;OAC9DC;QACE3lC,YAAY+F,MAAM;IACtB/F,MAAM0lC,SAASA;UACT1lC;;MAEJ6lC,MAAMxS,MAAMuS,KAAKE,SAASL,QAAQa;MAClCN,aAAa3S,MAAM4S,KAAKC;MACzBL,QAAQG;cACCjgC,MAAM,kBAAkB8/B,MAAM,qBACtCG,aAAa;;MAEbO,iBAAiBd,QAAQe;MAC1BD,eAAehnC,WAAWklC,QAAQC,UAAUC;cACnC5+B,MAAM;;SAEXm/B;IACLjlC,SAASsmC;IACTrT,UAAU;;;AAIduR,QAAQgC,0BAA0B,UAASzP;EACzCA,UAAUA;MACNuO,aAAaL;IACfjlC,SAAS+2B,QAAQuO;IAAYrS,UAAU;;MAEtCqS,WAAWhmC,WAAWklC,QAAQC,UAAUE;cAC/Br5B,UACR,qDACAk5B,QAAQC,UAAUE;;MAGlBO,SAASZ,aAAaE,QAAQC,UAAUC;WACpCrlC,IAAI,GAAGA,IAAI6lC,GAAG5lC,UAAUD;IAC9B6lC,GAAG7lC,KAAKimC,WAAW,KAAKjmC;;SAEnB6lC;;AAGTV,QAAQiC,OAAO,UAAS1P;EACtBA,UAAUA;MACNxD,MAAM0R,sBAAsBlO;MAC5BuO,aAAaL;IACfjlC,SAAS+2B,QAAQuO;IACjBrS,UAAU;;MAETqS,WAAWhmC,WAAWklC,QAAQC,UAAUG;QACrC8B,UAAUlC,QAAQO;MAAiB9C,MAAMqD;;IAC7CA,aAAaoB,QAAQpB;aACbA,WAAWhmC,WAAWklC,QAAQC,UAAUE;cACtCr5B,UACR,qDACAk5B,QAAQC,UAAUG,mBAAmB,SACrCJ,QAAQC,UAAUE;;MAGlBgC,gBAAgBrC,aAClBE,QAAQC,UAAUI,mBAAmBtR,IAAIj0B;EAC3CsnC,YAAYD,WAAWpT,KAAKA,IAAIj0B,QAAQgmC;MAEpCuB,UAAUvC,aAAaE,QAAQC,UAAUI;WACrCxlC,IAAI,GAAGA,IAAIwnC,IAAIvnC,UAAUD;IAC/BwnC,IAAIxnC,KAAKsnC,UAAUtnC;;SAEdwnC;;AAGTrC,QAAQsC,SAAS,UAAS/P;EACxBA,UAAUA;MACNxD,MAAM0R,sBAAsBlO;MAC7BA,QAAQgQ,cAAc9pC;cACbqO,UACR,yEACA;;MAEAu7B,MAAM5B;IACRjlC,SAAS+2B,QAAQgQ;IACjB9T,UAAU;;MAET4T,IAAIvnC,WAAWklC,QAAQC,UAAUI;cACxBv5B,UACR,oDACAk5B,QAAQC,UAAUI;;MAElBQ,YAAYJ;IACdjlC,SAAS+2B,QAAQsO;IACjBpS,UAAU;;MAEToS,UAAU/lC,WAAWklC,QAAQC,UAAUC;cAC9Bp5B,UACR,oDACAk5B,QAAQC,UAAUC;;MAGlBsC,SAAS1C,aAAaE,QAAQC,UAAUI,mBAAmBtR,IAAIj0B;MAC/Dqe,QAAQ2mB,aAAaE,QAAQC,UAAUI,mBAAmBtR,IAAIj0B;MAC9DD;OACAA,IAAI,GAAGA,IAAImlC,QAAQC,UAAUI,oBAAoBxlC;IACnD2nC,GAAG3nC,KAAKwnC,IAAIxnC;;OAEVA,IAAI,GAAGA,IAAIk0B,IAAIj0B,UAAUD;IAC3B2nC,GAAG3nC,IAAImlC,QAAQC,UAAUI,oBAAoBtR,IAAIl0B;;SAE3C4nC,iBAAiBtpB,GAAGqpB,IAAIA,GAAG1nC,QAAQ+lC,cAAc;;AAG3D,+BAA+BtO;MACzB/2B,UAAU+2B,QAAQ/2B;MACnBA,mBAAmB2wB,cAAc3wB,mBAAmBskC;WAC9CtkC;;MAGLizB,WAAW8D,QAAQ9D;MACpBjzB,YAAY/C;QACV85B,QAAQiK;;MAEThhC,UAAU+2B,QAAQiK,GAAGW,SAAS9L;MAC9B5C,WAAW;;gBAED3nB,UAAU;;;aAIdtL,YAAY,aAAaizB;cACvB3nB,UAAU;;aAGZtL,YAAY;eACVqwB,WAAW;aACZA,OAAO3O,KAAK1hB,SAASizB;;IAE9BjzB,cAAco0B,WAAWp0B,SAASizB;eACxBjzB,mBAAmBo0B;cACnB9oB,UACR,uEACA,oEACA;;;MAIA+R,aAAainB,aAAatkC,QAAQV;WAC9BD,IAAI,GAAGA,IAAIge,OAAO/d,UAAUD;IAClCge,OAAOhe,KAAKW,QAAQw2B,GAAGn3B;;SAElBge;;IAGL6pB,MAAMC;IACNC,MAAMD,IAAI;IACVn9B,IAAIm9B,IACN,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;IACtDE,KAAKF,IACP,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;IACtDG,IAAIH,IACN,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;IACtDI,IAAIJ,IACN,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;IACtDK,QAAQC,cACV,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1C,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC3CC,IAAIP,IACN,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;;;AAI1D,gBAAgB5T,KAAKoU;;MAEf3G,KAAK5N,MAAM4N,GAAG4G,OAAOtjC;MACrB+Y,aAAa+W,WAAWb;EAC5ByN,GAAGlC,OAAOzhB,OAAOwY,SAAS8R,SAAS;MAC/BtW,OAAO2P,GAAGW,SAAS9L;aACbxF,WAAW;WACZA,OAAO3O,KAAK2P,MAAM;;MAEvBpjB,UAAUq2B,aAAaE,QAAQC,UAAUK;WACrCzlC,IAAI,GAAGA,IAAI,MAAMA;IACvB4O,IAAI5O,KAAKgyB,KAAKrhB,WAAW3Q;;SAEpB4O;;AAGT,6BAA6Bi3B,IAAIC;MAC3Bh0B,KAAKg2B,MAAMA,MAAMA,MAAMA;MACvB9nC;MAEAoC,IAAImmC,OAAOzC,IAAI;EACnB1jC,EAAE,MAAM;EACRA,EAAE,OAAO;EACTA,EAAE,OAAO;EAETomC,WAAW12B,GAAG1P;EACd6c,KAAK4mB,IAAI/zB;OAEL9R,IAAI,GAAGA,IAAI,MAAMA;IACnB8lC,GAAG9lC,IAAI,MAAM6lC,GAAG7lC;;SAEX;;;AAIT,qBAAqB2nC,IAAIrpB,GAAGwW,GAAGgR;MACzB9lC,GAAG0M,GAAGgK,QAAQ0xB,aAAa;MAC3Bt2B,KAAKg2B,MAAMA,MAAMA,MAAMA;MAEvB1lC,IAAImmC,OAAOzC,IAAI;EACnB1jC,EAAE,MAAM;EACRA,EAAE,OAAO;EACTA,EAAE,OAAO;MAELqmC,QAAQ3T,IAAI;OACZ90B,IAAI,GAAGA,IAAI80B,KAAK90B;IAClB2nC,GAAG,KAAK3nC,KAAKse,EAAEte;;OAEbA,IAAI,GAAGA,IAAI,MAAMA;IACnB2nC,GAAG,KAAK3nC,KAAKoC,EAAE,KAAKpC;;MAGlBuW,IAAIgyB,OAAOZ,GAAGnN,SAAS,KAAK1F,IAAI;EACpCyL,OAAOhqB;EACPiyB,WAAW12B,GAAGyE;EACd0I,KAAK0oB,IAAI71B;OAEL9R,IAAI,IAAIA,IAAI,MAAMA;IACpB2nC,GAAG3nC,KAAK8lC,GAAG9lC;;MAET0oC,IAAIH,OAAOZ,IAAI7S,IAAI;EACvByL,OAAOmI;OAEH1oC,IAAI,IAAIA,IAAI,MAAMA;IACpB0W,EAAE1W,KAAK;;OAELA,IAAI,GAAGA,IAAI,MAAMA;IACnB0W,EAAE1W,KAAKuW,EAAEvW;;OAEPA,IAAI,GAAGA,IAAI,MAAMA;SACf0M,IAAI,GAAGA,IAAI,IAAIA;MACjBgK,EAAE1W,IAAI0M,MAAMg8B,EAAE1oC,KAAKoC,EAAEsK;;;EAIzBi8B,KAAKhB,GAAGnN,SAAS,KAAK9jB;SACf+xB;;AAGT,0BAA0BnqB,GAAGqpB,IAAI7S,GAAG+Q;MAC9B7lC,GAAG4oC;MACH3P,QAAQgM,aAAa;MACrBnzB,KAAKg2B,MAAMA,MAAMA,MAAMA,OACvBzL,KAAKyL,MAAMA,MAAMA,MAAMA;EAE3Bc,QAAQ;MACL9T,IAAI;YACG;;MAGP+T,UAAUxM,GAAGwJ;YACN;;OAGN7lC,IAAI,GAAGA,IAAI80B,KAAK90B;IAClBse,EAAEte,KAAK2nC,GAAG3nC;;OAERA,IAAI,GAAGA,IAAI,MAAMA;IACnBse,EAAEte,IAAI,MAAM6lC,GAAG7lC;;MAEb0oC,IAAIH,OAAOjqB,GAAGwW;EAClByL,OAAOmI;EACPI,WAAWh3B,GAAGuqB,GAAGqM;EAEjBF,WAAWnM,GAAGsL,GAAGnN,SAAS;EAC1BuO,IAAIj3B,GAAGuqB;EACPpd,KAAKga,GAAGnnB;EAERgjB,KAAK;MACFkU,iBAAiBrB,IAAI,GAAG1O,GAAG;SACxBj5B,IAAI,GAAGA,IAAI80B,KAAK90B;MAClBse,EAAEte,KAAK;;YAED;;OAGNA,IAAI,GAAGA,IAAI80B,KAAK90B;IAClBse,EAAEte,KAAK2nC,GAAG3nC,IAAI;;EAEhB4oC,OAAO9T;SACA8T;;AAGT,cAAcryB,GAAGG;MACX2qB,OAAOrhC,GAAG0M,GAAGvK;OACbnC,IAAI,IAAIA,KAAK,MAAMA;IACrBqhC,QAAQ;UACJ30B,IAAI1M,IAAI,IAAImC,IAAInC,IAAI,KAAI0M,IAAIvK,KAAKuK;MACnCgK,EAAEhK,MAAM20B,QAAQ,KAAK3qB,EAAE1W,KAAKmoC,EAAEz7B,KAAK1M,IAAI;MACvCqhC,QAAS3qB,EAAEhK,KAAK,OAAQ;MACxBgK,EAAEhK,MAAM20B,QAAQ;;IAElB3qB,EAAEhK,MAAM20B;IACR3qB,EAAE1W,KAAK;;EAETqhC,QAAQ;OACJ30B,IAAI,GAAGA,IAAI,MAAMA;IACnBgK,EAAEhK,MAAM20B,SAAS3qB,EAAE,OAAO,KAAKyxB,EAAEz7B;IACjC20B,QAAQ3qB,EAAEhK,MAAM;IAChBgK,EAAEhK,MAAM;;OAENA,IAAI,GAAGA,IAAI,MAAMA;IACnBgK,EAAEhK,MAAM20B,QAAQ8G,EAAEz7B;;OAEhB1M,IAAI,GAAGA,IAAI,MAAMA;IACnB0W,EAAE1W,IAAI,MAAM0W,EAAE1W,MAAM;IACpBuW,EAAEvW,KAAK0W,EAAE1W,KAAK;;;AAIlB,gBAAgBuW;MACVG,QAAQ0xB,aAAa;WACjBpoC,IAAI,GAAGA,IAAI,MAAMA;IACvB0W,EAAE1W,KAAKuW,EAAEvW;IACTuW,EAAEvW,KAAK;;EAET2oC,KAAKpyB,GAAGG;;AAGV,aAAa5E,GAAGuqB;MACV5xB,IAAIq9B,MAAM7tB,IAAI6tB,MAAMvpB,IAAIupB,MACxB1lC,IAAI0lC,MAAMzmC,IAAIymC,MAAM5+B,IAAI4+B,MACxBmB,IAAInB,MAAMY,IAAIZ,MAAM7O,IAAI6O;EAE5BoB,EAAEz+B,GAAGqH,EAAE,IAAIA,EAAE;EACbo3B,EAAEjQ,GAAGoD,EAAE,IAAIA,EAAE;EACb8M,EAAE1+B,GAAGA,GAAGwuB;EACRmQ,EAAEnvB,GAAGnI,EAAE,IAAIA,EAAE;EACbs3B,EAAEnQ,GAAGoD,EAAE,IAAIA,EAAE;EACb8M,EAAElvB,GAAGA,GAAGgf;EACRkQ,EAAE5qB,GAAGzM,EAAE,IAAIuqB,EAAE;EACb8M,EAAE5qB,GAAGA,GAAGypB;EACRmB,EAAE/mC,GAAG0P,EAAE,IAAIuqB,EAAE;EACb+M,EAAEhnC,GAAGA,GAAGA;EACR8mC,EAAE7nC,GAAG4Y,GAAGxP;EACRy+B,EAAEhgC,GAAG9G,GAAGmc;EACR6qB,EAAEH,GAAG7mC,GAAGmc;EACR6qB,EAAEV,GAAGzuB,GAAGxP;EAER0+B,EAAEr3B,EAAE,IAAIzQ,GAAG6H;EACXigC,EAAEr3B,EAAE,IAAI42B,GAAGO;EACXE,EAAEr3B,EAAE,IAAIm3B,GAAG//B;EACXigC,EAAEr3B,EAAE,IAAIzQ,GAAGqnC;;AAGb,eAAe52B,GAAGuqB,GAAGpiB;WACXja,IAAI,GAAGA,IAAI,KAAKA;IACtBqpC,SAASv3B,EAAE9R,IAAIq8B,EAAEr8B,IAAIia;;;AAIzB,cAAc1D,GAAGzE;MACXw3B,KAAKxB,MAAMyB,KAAKzB,MAAM0B,KAAK1B;EAC/B2B,SAASD,IAAI13B,EAAE;EACfq3B,EAAEG,IAAIx3B,EAAE,IAAI03B;EACZL,EAAEI,IAAIz3B,EAAE,IAAI03B;EACZE,UAAUnzB,GAAGgzB;EACbhzB,EAAE,OAAOozB,SAASL,OAAO;;AAG3B,mBAAmBM,GAAG9U;MAChB90B,GAAG0M,GAAGuN;MACNqE,IAAIwpB,MAAM7O,IAAI6O;OACd9nC,IAAI,GAAGA,IAAI,MAAMA;IACnBi5B,EAAEj5B,KAAK80B,EAAE90B;;EAEX6pC,SAAS5Q;EACT4Q,SAAS5Q;EACT4Q,SAAS5Q;OACLvsB,IAAI,GAAGA,IAAI,KAAKA;IAClB4R,EAAE,KAAK2a,EAAE,KAAK;SACVj5B,IAAI,GAAGA,IAAI,MAAMA;MACnBse,EAAEte,KAAKi5B,EAAEj5B,KAAK,UAAWse,EAAEte,IAAI,MAAM,KAAM;MAC3Cse,EAAEte,IAAE,MAAM;;IAEZse,EAAE,MAAM2a,EAAE,MAAM,UAAW3a,EAAE,OAAO,KAAM;IAC1CrE,IAAKqE,EAAE,OAAO,KAAM;IACpBA,EAAE,OAAO;IACT+qB,SAASpQ,GAAG3a,GAAG,IAAIrE;;OAEhBja,IAAI,GAAGA,IAAI,IAAIA;IAClB4pC,EAAE,IAAI5pC,KAAKi5B,EAAEj5B,KAAK;IAClB4pC,EAAE,IAAI5pC,IAAI,KAAKi5B,EAAEj5B,MAAM;;;AAI3B,mBAAmBuW,GAAGzE;MAChBmnB,IAAI6O,MAAMgC,MAAMhC,MAAMjJ,MAAMiJ,MAC5BiC,MAAMjC,MAAMkC,OAAOlC,MAAMmC,OAAOnC,MAChCoC,OAAOpC;EAEXqC,SAAS5zB,EAAE,IAAIwxB;EACfqC,YAAY7zB,EAAE,IAAIzE;EAClBjF,EAAEgyB,KAAKtoB,EAAE;EACT4yB,EAAEY,KAAKlL,KAAKl0B;EACZu+B,EAAErK,KAAKA,KAAKtoB,EAAE;EACd6yB,EAAEW,KAAKxzB,EAAE,IAAIwzB;EAEbl9B,EAAEm9B,MAAMD;EACRl9B,EAAEo9B,MAAMD;EACRb,EAAEe,MAAMD,MAAMD;EACdb,EAAElQ,GAAGiR,MAAMrL;EACXsK,EAAElQ,GAAGA,GAAG8Q;EAERM,QAAQpR,GAAGA;EACXkQ,EAAElQ,GAAGA,GAAG4F;EACRsK,EAAElQ,GAAGA,GAAG8Q;EACRZ,EAAElQ,GAAGA,GAAG8Q;EACRZ,EAAE5yB,EAAE,IAAI0iB,GAAG8Q;EAEXl9B,EAAEi9B,KAAKvzB,EAAE;EACT4yB,EAAEW,KAAKA,KAAKC;MACTO,SAASR,KAAKjL;IACfsK,EAAE5yB,EAAE,IAAIA,EAAE,IAAI8xB;;EAGhBx7B,EAAEi9B,KAAKvzB,EAAE;EACT4yB,EAAEW,KAAKA,KAAKC;MACTO,SAASR,KAAKjL;YACP;;MAGP8K,SAASpzB,EAAE,QAASzE,EAAE,OAAO;IAC9Bo3B,EAAE3yB,EAAE,IAAIsxB,KAAKtxB,EAAE;;EAGjB4yB,EAAE5yB,EAAE,IAAIA,EAAE,IAAIA,EAAE;SACT;;AAGT,qBAAqBqzB,GAAG9U;MAClB90B;OACAA,IAAI,GAAGA,IAAI,MAAMA;IACnB4pC,EAAE5pC,KAAK80B,EAAE,IAAI90B,MAAM80B,EAAE,IAAI90B,IAAI,MAAM;;EAErC4pC,EAAE,OAAO;;AAGX,iBAAiBA,GAAG5pC;MACdue,IAAIupB;MACJr9B;OACAA,IAAI,GAAGA,IAAI,MAAMA;IACnB8T,EAAE9T,KAAKzK,EAAEyK;;OAEPA,IAAI,KAAKA,KAAK,KAAKA;IACrBoC,EAAE0R,GAAGA;QACF9T,MAAM;MACP0+B,EAAE5qB,GAAGA,GAAGve;;;OAGRyK,IAAI,GAAGA,IAAI,MAAMA;IACnBm/B,EAAEn/B,KAAK8T,EAAE9T;;;AAIb,kBAAkBA,GAAGwP;MACfsE,QAAQ0mB,aAAa;MACrB7iC,QAAQ6iC,aAAa;EACzByE,UAAUnrB,GAAG9T;EACbi/B,UAAUtnC,GAAG6X;SACN+uB,iBAAiBzqB,GAAG,GAAGnc,GAAG;;AAGnC,0BAA0BsU,GAAG6zB,IAAIC,GAAGC;SAC3BC,GAAGh0B,GAAG6zB,IAAIC,GAAGC,IAAI;;AAG1B,YAAY/zB,GAAG6zB,IAAIC,GAAGC,IAAI3V;MACpB90B,GAAGoC,IAAI;OACPpC,IAAI,GAAGA,IAAI80B,KAAK90B;IAClBoC,KAAKsU,EAAE6zB,KAAKvqC,KAAKwqC,EAAEC,KAAKzqC;;UAElB,IAAMoC,IAAI,MAAO,KAAM;;AAGjC,kBAAkBqI;MACZrI,QAAQ6iC,aAAa;EACzByE,UAAUtnC,GAAGqI;SACNrI,EAAE,KAAK;;AAGhB,oBAAoB0P,GAAGuqB,GAAGhe;MACpBpE,GAAGja;EACPmqC,SAASr4B,EAAE,IAAI+1B;EACfsC,SAASr4B,EAAE,IAAIi2B;EACfoC,SAASr4B,EAAE,IAAIi2B;EACfoC,SAASr4B,EAAE,IAAI+1B;OACX7nC,IAAI,KAAKA,KAAK,KAAKA;IACrBia,IAAKoE,EAAGre,IAAI,IAAG,OAAOA,IAAI,KAAM;IAChC2qC,MAAM74B,GAAGuqB,GAAGpiB;IACZ8uB,IAAI1M,GAAGvqB;IACPi3B,IAAIj3B,GAAGA;IACP64B,MAAM74B,GAAGuqB,GAAGpiB;;;AAIhB,oBAAoBnI,GAAGuM;MACjBge,KAAKyL,MAAMA,MAAMA,MAAMA;EAC3BqC,SAAS9N,EAAE,IAAI4L;EACfkC,SAAS9N,EAAE,IAAI6L;EACfiC,SAAS9N,EAAE,IAAI0L;EACfoB,EAAE9M,EAAE,IAAI4L,GAAGC;EACXY,WAAWh3B,GAAGuqB,GAAGhe;;AAGnB,kBAAkB9H,GAAG9L;MACfzK;OACAA,IAAI,GAAGA,IAAI,IAAIA;IACjBuW,EAAEvW,KAAKyK,EAAEzK,KAAK;;;AAIlB,kBAAkB4pC,GAAG5pC;MACfue,IAAIupB;MACJr9B;OACAA,IAAI,GAAGA,IAAI,MAAMA;IACnB8T,EAAE9T,KAAKzK,EAAEyK;;OAEPA,IAAI,KAAKA,KAAK,KAAKA;IACrBoC,EAAE0R,GAAGA;QACF9T,MAAM,KAAKA,MAAM;MAClB0+B,EAAE5qB,GAAGA,GAAGve;;;OAGRyK,IAAI,GAAGA,IAAI,MAAMA;IACnBm/B,EAAEn/B,KAAK8T,EAAE9T;;;AAIb,kBAAkBm/B;MACZ5pC,GAAGwE,GAAG+Z,IAAI;OACVve,IAAI,GAAGA,IAAI,MAAMA;IACnBwE,IAAIolC,EAAE5pC,KAAKue,IAAI;IACfA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;IACnBolC,EAAE5pC,KAAKwE,IAAI+Z,IAAI;;EAEjBqrB,EAAE,MAAMrrB,IAAI,IAAI,MAAMA,IAAI;;AAG5B,kBAAkBzM,GAAGuqB,GAAGpiB;MAClBgf,GAAG1a,MAAMtE,IAAI;WACTja,IAAI,GAAGA,IAAI,MAAMA;IACvBi5B,IAAI1a,KAAKzM,EAAE9R,KAAKq8B,EAAEr8B;IAClB8R,EAAE9R,MAAMi5B;IACRoD,EAAEr8B,MAAMi5B;;;AAIZ,YAAY8B;MACN/6B,GAAGuW,QAAQ6xB,aAAa;MACzBrN;SACG/6B,IAAI,GAAGA,IAAI+6B,KAAK96B,UAAUD;MAC5BuW,EAAEvW,KAAK+6B,KAAK/6B;;;SAGTuW;;AAGT,WAAWqzB,GAAGn/B,GAAGwP;WACPja,IAAI,GAAGA,IAAI,MAAMA;IACvB4pC,EAAE5pC,KAAKyK,EAAEzK,KAAKia,EAAEja;;;AAIpB,WAAW4pC,GAAGn/B,GAAGwP;WACPja,IAAI,GAAGA,IAAI,MAAMA;IACvB4pC,EAAE5pC,KAAKyK,EAAEzK,KAAKia,EAAEja;;;AAIpB,WAAW4pC,GAAGn/B;EACZ0+B,EAAES,GAAGn/B,GAAGA;;AAGV,WAAWm/B,GAAGn/B,GAAGwP;MACXzV,GAAG+Z,GACJqsB,KAAK,GAAIC,KAAK,GAAIC,KAAK,GAAIC,KAAK,GAAIC,KAAK,GAAIC,KAAK,GAAIC,KAAK,GAAIC,KAAK,GACpEC,KAAK,GAAIC,KAAK,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GACrEC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GACrEC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAC5DC,KAAK1yB,EAAE,IACP2yB,KAAK3yB,EAAE,IACP4yB,KAAK5yB,EAAE,IACP6yB,KAAK7yB,EAAE,IACP8yB,KAAK9yB,EAAE,IACP+yB,KAAK/yB,EAAE,IACPgzB,KAAKhzB,EAAE,IACPizB,KAAKjzB,EAAE,IACPkzB,KAAKlzB,EAAE,IACPmzB,KAAKnzB,EAAE,IACPozB,MAAMpzB,EAAE,KACRqzB,MAAMrzB,EAAE,KACRszB,MAAMtzB,EAAE,KACRuzB,MAAMvzB,EAAE,KACRwzB,MAAMxzB,EAAE,KACRyzB,MAAMzzB,EAAE;EAEVzV,IAAIiG,EAAE;EACNmgC,MAAMpmC,IAAImoC;EACV9B,MAAMrmC,IAAIooC;EACV9B,MAAMtmC,IAAIqoC;EACV9B,MAAMvmC,IAAIsoC;EACV9B,MAAMxmC,IAAIuoC;EACV9B,MAAMzmC,IAAIwoC;EACV9B,MAAM1mC,IAAIyoC;EACV9B,MAAM3mC,IAAI0oC;EACV9B,MAAM5mC,IAAI2oC;EACV9B,MAAM7mC,IAAI4oC;EACV9B,OAAO9mC,IAAI6oC;EACX9B,OAAO/mC,IAAI8oC;EACX9B,OAAOhnC,IAAI+oC;EACX9B,OAAOjnC,IAAIgpC;EACX9B,OAAOlnC,IAAIipC;EACX9B,OAAOnnC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNogC,MAAMrmC,IAAImoC;EACV7B,MAAMtmC,IAAIooC;EACV7B,MAAMvmC,IAAIqoC;EACV7B,MAAMxmC,IAAIsoC;EACV7B,MAAMzmC,IAAIuoC;EACV7B,MAAM1mC,IAAIwoC;EACV7B,MAAM3mC,IAAIyoC;EACV7B,MAAM5mC,IAAI0oC;EACV7B,MAAM7mC,IAAI2oC;EACV7B,OAAO9mC,IAAI4oC;EACX7B,OAAO/mC,IAAI6oC;EACX7B,OAAOhnC,IAAI8oC;EACX7B,OAAOjnC,IAAI+oC;EACX7B,OAAOlnC,IAAIgpC;EACX7B,OAAOnnC,IAAIipC;EACX7B,OAAOpnC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNqgC,MAAMtmC,IAAImoC;EACV5B,MAAMvmC,IAAIooC;EACV5B,MAAMxmC,IAAIqoC;EACV5B,MAAMzmC,IAAIsoC;EACV5B,MAAM1mC,IAAIuoC;EACV5B,MAAM3mC,IAAIwoC;EACV5B,MAAM5mC,IAAIyoC;EACV5B,MAAM7mC,IAAI0oC;EACV5B,OAAO9mC,IAAI2oC;EACX5B,OAAO/mC,IAAI4oC;EACX5B,OAAOhnC,IAAI6oC;EACX5B,OAAOjnC,IAAI8oC;EACX5B,OAAOlnC,IAAI+oC;EACX5B,OAAOnnC,IAAIgpC;EACX5B,OAAOpnC,IAAIipC;EACX5B,OAAOrnC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNsgC,MAAMvmC,IAAImoC;EACV3B,MAAMxmC,IAAIooC;EACV3B,MAAMzmC,IAAIqoC;EACV3B,MAAM1mC,IAAIsoC;EACV3B,MAAM3mC,IAAIuoC;EACV3B,MAAM5mC,IAAIwoC;EACV3B,MAAM7mC,IAAIyoC;EACV3B,OAAO9mC,IAAI0oC;EACX3B,OAAO/mC,IAAI2oC;EACX3B,OAAOhnC,IAAI4oC;EACX3B,OAAOjnC,IAAI6oC;EACX3B,OAAOlnC,IAAI8oC;EACX3B,OAAOnnC,IAAI+oC;EACX3B,OAAOpnC,IAAIgpC;EACX3B,OAAOrnC,IAAIipC;EACX3B,OAAOtnC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNugC,MAAMxmC,IAAImoC;EACV1B,MAAMzmC,IAAIooC;EACV1B,MAAM1mC,IAAIqoC;EACV1B,MAAM3mC,IAAIsoC;EACV1B,MAAM5mC,IAAIuoC;EACV1B,MAAM7mC,IAAIwoC;EACV1B,OAAO9mC,IAAIyoC;EACX1B,OAAO/mC,IAAI0oC;EACX1B,OAAOhnC,IAAI2oC;EACX1B,OAAOjnC,IAAI4oC;EACX1B,OAAOlnC,IAAI6oC;EACX1B,OAAOnnC,IAAI8oC;EACX1B,OAAOpnC,IAAI+oC;EACX1B,OAAOrnC,IAAIgpC;EACX1B,OAAOtnC,IAAIipC;EACX1B,OAAOvnC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNwgC,MAAMzmC,IAAImoC;EACVzB,MAAM1mC,IAAIooC;EACVzB,MAAM3mC,IAAIqoC;EACVzB,MAAM5mC,IAAIsoC;EACVzB,MAAM7mC,IAAIuoC;EACVzB,OAAO9mC,IAAIwoC;EACXzB,OAAO/mC,IAAIyoC;EACXzB,OAAOhnC,IAAI0oC;EACXzB,OAAOjnC,IAAI2oC;EACXzB,OAAOlnC,IAAI4oC;EACXzB,OAAOnnC,IAAI6oC;EACXzB,OAAOpnC,IAAI8oC;EACXzB,OAAOrnC,IAAI+oC;EACXzB,OAAOtnC,IAAIgpC;EACXzB,OAAOvnC,IAAIipC;EACXzB,OAAOxnC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNygC,MAAM1mC,IAAImoC;EACVxB,MAAM3mC,IAAIooC;EACVxB,MAAM5mC,IAAIqoC;EACVxB,MAAM7mC,IAAIsoC;EACVxB,OAAO9mC,IAAIuoC;EACXxB,OAAO/mC,IAAIwoC;EACXxB,OAAOhnC,IAAIyoC;EACXxB,OAAOjnC,IAAI0oC;EACXxB,OAAOlnC,IAAI2oC;EACXxB,OAAOnnC,IAAI4oC;EACXxB,OAAOpnC,IAAI6oC;EACXxB,OAAOrnC,IAAI8oC;EACXxB,OAAOtnC,IAAI+oC;EACXxB,OAAOvnC,IAAIgpC;EACXxB,OAAOxnC,IAAIipC;EACXxB,OAAOznC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACN0gC,MAAM3mC,IAAImoC;EACVvB,MAAM5mC,IAAIooC;EACVvB,MAAM7mC,IAAIqoC;EACVvB,OAAO9mC,IAAIsoC;EACXvB,OAAO/mC,IAAIuoC;EACXvB,OAAOhnC,IAAIwoC;EACXvB,OAAOjnC,IAAIyoC;EACXvB,OAAOlnC,IAAI0oC;EACXvB,OAAOnnC,IAAI2oC;EACXvB,OAAOpnC,IAAI4oC;EACXvB,OAAOrnC,IAAI6oC;EACXvB,OAAOtnC,IAAI8oC;EACXvB,OAAOvnC,IAAI+oC;EACXvB,OAAOxnC,IAAIgpC;EACXvB,OAAOznC,IAAIipC;EACXvB,OAAO1nC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACN2gC,MAAM5mC,IAAImoC;EACVtB,MAAM7mC,IAAIooC;EACVtB,OAAO9mC,IAAIqoC;EACXtB,OAAO/mC,IAAIsoC;EACXtB,OAAOhnC,IAAIuoC;EACXtB,OAAOjnC,IAAIwoC;EACXtB,OAAOlnC,IAAIyoC;EACXtB,OAAOnnC,IAAI0oC;EACXtB,OAAOpnC,IAAI2oC;EACXtB,OAAOrnC,IAAI4oC;EACXtB,OAAOtnC,IAAI6oC;EACXtB,OAAOvnC,IAAI8oC;EACXtB,OAAOxnC,IAAI+oC;EACXtB,OAAOznC,IAAIgpC;EACXtB,OAAO1nC,IAAIipC;EACXtB,OAAO3nC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACN4gC,MAAM7mC,IAAImoC;EACVrB,OAAO9mC,IAAIooC;EACXrB,OAAO/mC,IAAIqoC;EACXrB,OAAOhnC,IAAIsoC;EACXrB,OAAOjnC,IAAIuoC;EACXrB,OAAOlnC,IAAIwoC;EACXrB,OAAOnnC,IAAIyoC;EACXrB,OAAOpnC,IAAI0oC;EACXrB,OAAOrnC,IAAI2oC;EACXrB,OAAOtnC,IAAI4oC;EACXrB,OAAOvnC,IAAI6oC;EACXrB,OAAOxnC,IAAI8oC;EACXrB,OAAOznC,IAAI+oC;EACXrB,OAAO1nC,IAAIgpC;EACXrB,OAAO3nC,IAAIipC;EACXrB,OAAO5nC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACN6gC,OAAO9mC,IAAImoC;EACXpB,OAAO/mC,IAAIooC;EACXpB,OAAOhnC,IAAIqoC;EACXpB,OAAOjnC,IAAIsoC;EACXpB,OAAOlnC,IAAIuoC;EACXpB,OAAOnnC,IAAIwoC;EACXpB,OAAOpnC,IAAIyoC;EACXpB,OAAOrnC,IAAI0oC;EACXpB,OAAOtnC,IAAI2oC;EACXpB,OAAOvnC,IAAI4oC;EACXpB,OAAOxnC,IAAI6oC;EACXpB,OAAOznC,IAAI8oC;EACXpB,OAAO1nC,IAAI+oC;EACXpB,OAAO3nC,IAAIgpC;EACXpB,OAAO5nC,IAAIipC;EACXpB,OAAO7nC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACN8gC,OAAO/mC,IAAImoC;EACXnB,OAAOhnC,IAAIooC;EACXnB,OAAOjnC,IAAIqoC;EACXnB,OAAOlnC,IAAIsoC;EACXnB,OAAOnnC,IAAIuoC;EACXnB,OAAOpnC,IAAIwoC;EACXnB,OAAOrnC,IAAIyoC;EACXnB,OAAOtnC,IAAI0oC;EACXnB,OAAOvnC,IAAI2oC;EACXnB,OAAOxnC,IAAI4oC;EACXnB,OAAOznC,IAAI6oC;EACXnB,OAAO1nC,IAAI8oC;EACXnB,OAAO3nC,IAAI+oC;EACXnB,OAAO5nC,IAAIgpC;EACXnB,OAAO7nC,IAAIipC;EACXnB,OAAO9nC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACN+gC,OAAOhnC,IAAImoC;EACXlB,OAAOjnC,IAAIooC;EACXlB,OAAOlnC,IAAIqoC;EACXlB,OAAOnnC,IAAIsoC;EACXlB,OAAOpnC,IAAIuoC;EACXlB,OAAOrnC,IAAIwoC;EACXlB,OAAOtnC,IAAIyoC;EACXlB,OAAOvnC,IAAI0oC;EACXlB,OAAOxnC,IAAI2oC;EACXlB,OAAOznC,IAAI4oC;EACXlB,OAAO1nC,IAAI6oC;EACXlB,OAAO3nC,IAAI8oC;EACXlB,OAAO5nC,IAAI+oC;EACXlB,OAAO7nC,IAAIgpC;EACXlB,OAAO9nC,IAAIipC;EACXlB,OAAO/nC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNghC,OAAOjnC,IAAImoC;EACXjB,OAAOlnC,IAAIooC;EACXjB,OAAOnnC,IAAIqoC;EACXjB,OAAOpnC,IAAIsoC;EACXjB,OAAOrnC,IAAIuoC;EACXjB,OAAOtnC,IAAIwoC;EACXjB,OAAOvnC,IAAIyoC;EACXjB,OAAOxnC,IAAI0oC;EACXjB,OAAOznC,IAAI2oC;EACXjB,OAAO1nC,IAAI4oC;EACXjB,OAAO3nC,IAAI6oC;EACXjB,OAAO5nC,IAAI8oC;EACXjB,OAAO7nC,IAAI+oC;EACXjB,OAAO9nC,IAAIgpC;EACXjB,OAAO/nC,IAAIipC;EACXjB,OAAOhoC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNihC,OAAOlnC,IAAImoC;EACXhB,OAAOnnC,IAAIooC;EACXhB,OAAOpnC,IAAIqoC;EACXhB,OAAOrnC,IAAIsoC;EACXhB,OAAOtnC,IAAIuoC;EACXhB,OAAOvnC,IAAIwoC;EACXhB,OAAOxnC,IAAIyoC;EACXhB,OAAOznC,IAAI0oC;EACXhB,OAAO1nC,IAAI2oC;EACXhB,OAAO3nC,IAAI4oC;EACXhB,OAAO5nC,IAAI6oC;EACXhB,OAAO7nC,IAAI8oC;EACXhB,OAAO9nC,IAAI+oC;EACXhB,OAAO/nC,IAAIgpC;EACXhB,OAAOhoC,IAAIipC;EACXhB,OAAOjoC,IAAIkpC;EACXlpC,IAAIiG,EAAE;EACNkhC,OAAOnnC,IAAImoC;EACXf,OAAOpnC,IAAIooC;EACXf,OAAOrnC,IAAIqoC;EACXf,OAAOtnC,IAAIsoC;EACXf,OAAOvnC,IAAIuoC;EACXf,OAAOxnC,IAAIwoC;EACXf,OAAOznC,IAAIyoC;EACXf,OAAO1nC,IAAI0oC;EACXf,OAAO3nC,IAAI2oC;EACXf,OAAO5nC,IAAI4oC;EACXf,OAAO7nC,IAAI6oC;EACXf,OAAO9nC,IAAI8oC;EACXf,OAAO/nC,IAAI+oC;EACXf,OAAOhoC,IAAIgpC;EACXf,OAAOjoC,IAAIipC;EACXf,OAAOloC,IAAIkpC;EAEX9C,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,MAAO,KAAKgB;EACZf,OAAO,KAAKgB;EACZf,OAAO,KAAKgB;EACZf,OAAO,KAAKgB;EACZf,OAAO,KAAKgB;EACZf,OAAO,KAAKgB;;;EAIZnuB,IAAI;EACJ/Z,IAAKomC,KAAKrsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASomC,KAAKpmC,IAAI+Z,IAAI;EAC9D/Z,IAAKqmC,KAAKtsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASqmC,KAAKrmC,IAAI+Z,IAAI;EAC9D/Z,IAAKsmC,KAAKvsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASsmC,KAAKtmC,IAAI+Z,IAAI;EAC9D/Z,IAAKumC,KAAKxsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASumC,KAAKvmC,IAAI+Z,IAAI;EAC9D/Z,IAAKwmC,KAAKzsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASwmC,KAAKxmC,IAAI+Z,IAAI;EAC9D/Z,IAAKymC,KAAK1sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASymC,KAAKzmC,IAAI+Z,IAAI;EAC9D/Z,IAAK0mC,KAAK3sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS0mC,KAAK1mC,IAAI+Z,IAAI;EAC9D/Z,IAAK2mC,KAAK5sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS2mC,KAAK3mC,IAAI+Z,IAAI;EAC9D/Z,IAAK4mC,KAAK7sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS4mC,KAAK5mC,IAAI+Z,IAAI;EAC9D/Z,IAAK6mC,KAAK9sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS6mC,KAAK7mC,IAAI+Z,IAAI;EAC9D/Z,IAAI8mC,MAAM/sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQ8mC,MAAM9mC,IAAI+Z,IAAI;EAC9D/Z,IAAI+mC,MAAMhtB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQ+mC,MAAM/mC,IAAI+Z,IAAI;EAC9D/Z,IAAIgnC,MAAMjtB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQgnC,MAAMhnC,IAAI+Z,IAAI;EAC9D/Z,IAAIinC,MAAMltB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQinC,MAAMjnC,IAAI+Z,IAAI;EAC9D/Z,IAAIknC,MAAMntB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQknC,MAAMlnC,IAAI+Z,IAAI;EAC9D/Z,IAAImnC,MAAMptB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQmnC,MAAMnnC,IAAI+Z,IAAI;EAC9DqsB,MAAMrsB,IAAE,IAAI,MAAMA,IAAE;;EAGpBA,IAAI;EACJ/Z,IAAKomC,KAAKrsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASomC,KAAKpmC,IAAI+Z,IAAI;EAC9D/Z,IAAKqmC,KAAKtsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASqmC,KAAKrmC,IAAI+Z,IAAI;EAC9D/Z,IAAKsmC,KAAKvsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASsmC,KAAKtmC,IAAI+Z,IAAI;EAC9D/Z,IAAKumC,KAAKxsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASumC,KAAKvmC,IAAI+Z,IAAI;EAC9D/Z,IAAKwmC,KAAKzsB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASwmC,KAAKxmC,IAAI+Z,IAAI;EAC9D/Z,IAAKymC,KAAK1sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAASymC,KAAKzmC,IAAI+Z,IAAI;EAC9D/Z,IAAK0mC,KAAK3sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS0mC,KAAK1mC,IAAI+Z,IAAI;EAC9D/Z,IAAK2mC,KAAK5sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS2mC,KAAK3mC,IAAI+Z,IAAI;EAC9D/Z,IAAK4mC,KAAK7sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS4mC,KAAK5mC,IAAI+Z,IAAI;EAC9D/Z,IAAK6mC,KAAK9sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAS6mC,KAAK7mC,IAAI+Z,IAAI;EAC9D/Z,IAAI8mC,MAAM/sB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQ8mC,MAAM9mC,IAAI+Z,IAAI;EAC9D/Z,IAAI+mC,MAAMhtB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQ+mC,MAAM/mC,IAAI+Z,IAAI;EAC9D/Z,IAAIgnC,MAAMjtB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQgnC,MAAMhnC,IAAI+Z,IAAI;EAC9D/Z,IAAIinC,MAAMltB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQinC,MAAMjnC,IAAI+Z,IAAI;EAC9D/Z,IAAIknC,MAAMntB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQknC,MAAMlnC,IAAI+Z,IAAI;EAC9D/Z,IAAImnC,MAAMptB,IAAI;EAAOA,IAAI5Q,KAAK2P,MAAM9Y,IAAI;EAAQmnC,MAAMnnC,IAAI+Z,IAAI;EAC9DqsB,MAAMrsB,IAAE,IAAI,MAAMA,IAAE;EAEpBqrB,EAAG,KAAKgB;EACRhB,EAAG,KAAKiB;EACRjB,EAAG,KAAKkB;EACRlB,EAAG,KAAKmB;EACRnB,EAAG,KAAKoB;EACRpB,EAAG,KAAKqB;EACRrB,EAAG,KAAKsB;EACRtB,EAAG,KAAKuB;EACRvB,EAAG,KAAKwB;EACRxB,EAAG,KAAKyB;EACRzB,EAAE,MAAM0B;EACR1B,EAAE,MAAM2B;EACR3B,EAAE,MAAM4B;EACR5B,EAAE,MAAM6B;EACR7B,EAAE,MAAM8B;EACR9B,EAAE,MAAM+B;;;;AC9ixJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpjpxrpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnhXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbvqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChjtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnvMM0oD,YAAY/tF,QAAQ;MACpBguF,SAAShuF,QAAQ;MACjBiuF,UAAUjuF,QAAQ;MAClBkuF,QAAQluF,QAAQ;OACdmuF,QAASnuF,QAAQ;OAEvB/H,WACAm2F,uBACAC,qBACEruF,QAAQ;MAEN2mB,QAAQ3mB,QAAQ,SAAS;;MAGzBsuF,uBACG57E,cAAc,sBACdA,UAAU67E,YAAY,YAC7B77E,UAAU67E,QAAQ3oE,kBAAkB;AAEtC,iBAAiBmoE;;;;;;;EAOfhjF,YAAY2qC;IACV,MAAMA;IAEN,KAAK84C,kBAAkB94C,KAAK+4C;;;;;;;MAQ1B1oF;WACK;;;;;;;EAQT2oF;SACO,KAAKC;;;;UAKJC,MAAM,KAAKA;UACXC,YAAY,KAAKn5C,KAAKm5C;;UAGtBn5C,OAAO44C,qBAETH,KACE,KAAKz4C,MACL,SACA,qBACA,OACA,OACA,cACA,QACA,MACA,WACA,sBACA,gBACA,mBACA,UACA,cACA,UACA;QAGF,KAAKA,KAAKo5C;MACZp5C,KAAKq5C,UAAU,KAAKr5C,KAAKo5C;;;MAIzB,KAAKz2F,KACH+1F,0BAA0BE,gBACtBO,gBACM52F,UAAU22F,KAAKC,iBACf52F,UAAU22F,WACZ32F,UAAU22F,KAAKC,WAAWn5C;aAC7B7lC;aACA,KAAKX,KAAK,SAASW;;IAG5B,KAAKxX,GAAG22F,aAAa,KAAKxI,OAAOwI,cAAcX;IAE/C,KAAKY;;;;;;;EAQPA;UACQ1nF,OAAO;IAEb,KAAKlP,GAAG62F,SAAS;MACf3nF,KAAKw/E;;IAEP,KAAK1uF,GAAG2C,UAAU;MAChBuM,KAAK4nF;;IAEP,KAAK92F,GAAGC,YAAY,UAAS0vD;MAC3BzgD,KAAKiuC,OAAOwS,GAAGlxD;;IAEjB,KAAKuB,GAAGyC,UAAU,UAASC;MACzBwM,KAAKy/E,QAAQ,mBAAmBjsF;;;;;;;;;EAUpCw2B,MAAM69D;UACE7nF,OAAO;IACb,KAAK9G,WAAW;;;QAIZyvD,QAAQk/B,QAAQz1F;QAChBD,IAAI;UACFuL,IAAIirD;WACHx2D,IAAIuL,GAAGvL;OACX,UAAS21F;QACRrB,OAAOsB,aAAaD,QAAQ9nF,KAAKinF,gBAAgB,UAAS13F;;gBAElD4+C;eACD04C;gBACCiB,OAAOj+D;cACTskB,KAAK65C,WAAWF,OAAOj+D,QAAQm+D;;gBAG7BhoF,KAAKmuC,KAAK85C;oBACNxnE,MACJ,oBAAoBlxB,OAChB4zB,OAAO5R,WAAWhiB,QAClBA,KAAK6C;kBACPquB,MAAMzgB,KAAKmuC,KAAK85C,kBAAkBC;gBACpC/5C,KAAK65C,WAAW;;;;;;;;gBAShBnB;;cAEF7mF,KAAKlP,GAAGq3F,KAAK54F;;cAEbyQ,KAAKlP,GAAGq3F,KAAK54F,MAAM4+C;;mBAEd36C;YACP4rB,MAAM;;YAGNupC,SAASj0C;;SAEZmzE,QAAQ11F;;IAGb;MACE6N,KAAK2H,KAAK;;;MAIVhS,WAAW;QACTqK,KAAK9G,WAAW;QAChB8G,KAAK2H,KAAK;SACT;;;;;;;;EASPigF;IACEpB,UAAUltF,UAAUsuF,QAAQv4F,KAAK;;;;;;;EAQnC+4F;eACa,KAAKt3F,OAAO;MACrB,KAAKA,GAAGu3F;MACR,KAAKv3F,KAAK;;;;;;;;EASdu2F;QACM94D,QAAQ,KAAKA;UACX+5D,SAAS,KAAKn6C,KAAKo6C,SAAS,QAAQ;QACtCh4F,OAAO;;QAIT,KAAK49C,KAAK59C,SACR,UAAU+3F,UAAUzlE,OAAO,KAAKsrB,KAAK59C,UAAU,OAC9C,SAAS+3F,UAAUzlE,OAAO,KAAKsrB,KAAK59C,UAAU;MAEjDA,OAAO,MAAM,KAAK49C,KAAK59C;;;QAIrB,KAAK49C,KAAKq6C;MACZj6D,MAAM,KAAK4f,KAAKs6C,kBAAkB9B;;;SAI/B,KAAKM;MACR14D,MAAMm6D,MAAM;;IAGdn6D,QAAQm4D,QAAQ77D,OAAO0D;;QAGnBA,MAAMn8B;MACRm8B,QAAQ,MAAMA;;UAGVo6D,OAAO,KAAKx6C,KAAK79C,SAASD,QAAQ,UAAU;WAEhDi4F,SACA,SACCK,OAAO,MAAM,KAAKx6C,KAAK79C,WAAW,MAAM,KAAK69C,KAAK79C,YACnDC,OACA,KAAK49C,KAAKhgB,OACVI;;;;;;;;EAUJ64D;aAEM12F,gBACA,kBAAkBA,cAAa,KAAK8N,SAASoqF,GAAGtvF,UAAUkF;;;AAKlE1P,OAAOiR,UAAU6oF;;;AC5QjcvtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbtnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;A;A;A;A;A;A;A;A;A;A;A;A;ACjDA,mCAA+B;AAC/B,0CAAuB;AAEvB;A;GAEG;AACU,QAAA,KAAK,GAAG,IAAI,aAAK,EAAE,CAAA;;;A;A;A;A;A;A;ACNhC,mEAA0C;AAC1C,mCAA+B;AAC/B,0DAA4B;AAC5B,4DAAuC;AACvC,0DAAoC;AACpC,sDAA0B;AAC1B,2DAAmD;AAEnD,iDAA4C;AAC5C,iDAA4C;AAC5C,mEAA6D;AAC7D,mCAAqD;AACrD,uCAA0D;AAC1D,qCAAuD;AAKvD,yCAAqC;AACrC,qCAAiC;AAEjC,2CAAwD;AAWxD,MAAa,KAAK;IAQhB;A;A;A;OAIG;IACH,YAAa,cAAsB,EAAE,SAAiB;QAZ/C,aAAQ,GAAG,QAAQ,CAAA;QAET,aAAQ,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AM;MACNq4C,OAAO;;MAEPv4D,IAAI,uCACA,uCACA,uCACA;MACJrH,IAAI,uCACA,uCACA,uCACA;MACJwP,IAAI,uCACA,uCACA,uCACA;MACJ6a,IAAI,uCACA,uCACA,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA,uCACA,uCACA,yCACA,uCACA,uCACA,uCACA,wCACD4tD;;;;;;;;AAWR,qBAAqBsqB;EACnB9vG;IACE;MACE1R,IAAI;MACJy3G,MAAM;MACNp4G,MAAM;MACN84F,QAAQ;MACR9lE,MAAM;MACNq4C,OAAO;;MAEPv4D,IAAI,uCACA;;MAEJrH,GAAG;MACHwP,GAAG;MACH6a,IAAI,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA;OAEA,uCACA;MAEH8uE,gBAGK,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA;;;;;;;;AAYX,mBAAmBoJ;EACjB9vG;IACE;MACE1R,IAAI;MACJy3G,MAAM;MACNp4G,MAAM;MACN84F,QAAQ;MACR9lE,MAAM;MACNq4C,OAAO;;MAEPv4D,IAAI,uCACA,uCACA,uCACA;;MAEJrH,GAAG;MACHwP,GAAG;MACH6a,IAAI,uCACA,uCACA,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA;MAEH8uE,gBAGK,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA;;;;;;;;AAYX,sBAAsBoJ;EACpB9vG;IACE;MACE1R,IAAI;MACJy3G,MAAM;MACNp4G,MAAM;MACN84F,QAAQ;MACR9lE,MAAM;MACNq4C,OAAO;;MAEPv4D,IAAI,uCACA,uCACA,uCACA;;MAEJrH,IAAI,uCACA,uCACA,uCACA;MACJwP,GAAG;MACH6a,IAAI,uCACA,uCACA,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA;MAEH8uE,gBAGK,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA;;;;;;;;AAYX,sBAAsBqJ;EACpB/vG,YAAYwlF;IACV;MACEl3F,IAAI;MACJy3G,MAAM;MACNp4G,MAAM;MACN84F,QAAQ;MACR9lE,MAAM;MACN21B,QAAQ;MACRnhC,SAAS;MACT6jD,OAAO;;MAEPv4D,IAAI,uCACA;MACJrH,GAAG;;MAEHrI,IAAI,uCACA;MACJ0yB,IAAI,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA;OAEA,uCACA,wCACD4tD;MAEFkhB,YAEK,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA,2CAGA,uCACA,yCACA,uCACA;;;;;;;;;AAaX,qBAAqBqJ;EACnB/vG,YAAYwlF;IACV;MACEl3F,IAAI;MACJy3G,MAAM;MACNp4G,MAAM;MACN84F,QAAQ;MACR9lE,MAAM;MACN21B,QAAQ;MACRnhC,SAAS;MACT6jD,OAAO;;MAEPv4D,IAAI,uCACA,uCACA,uCACA;MACJrH,GAAG;;MAEHrI,IAAI,uCACA,uCACA,uCACA;MACJ0yB,IAAI,uCACA,uCACA,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA,uCACA,uCACA;OAEA,uCACA,uCACA,uCACA,sBACD4tD;MAEFkhB,YAEK,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA;;;;;;;;AAYX,oBAAoBqJ;EAClB/vG,YAAYwlF;IACV;MACEl3F,IAAI;MACJy3G,MAAM;MACNp4G,MAAM;MACN84F,QAAQ;MACR9lE,MAAM;MACN21B,QAAQ;MACRnhC,SAAS;MACT6jD,OAAO;;MAEPv4D,IAAI,uCACA,uCACA,uCACA;MACJrH,GAAG;;MAEHrI,IAAI,uCACA,uCACA,uCACA;MACJ0yB,IAAI,uCACA,uCACA,uCACA;MACJ4T,GAAG;;MAEH8xB,GAAG;MACHvxB,KACG,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,sBACD4tD;MAEFkhB,YAEK,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA,yBAGA,uCACA,uCACA,uCACA,uBACA,uCACA,uCACA,uCACA;;;;;;;MAWLxpC;EACJvmD,WAAW;EACXsjF;EACAC;EACAggB;EACAC;EACAhgB;EACAigB;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;;MAGI5nH;EACJ0jB,WAAW;EACXsjF,MAAM;EACNC,MAAM;EACNggB,MAAM;EACNC,MAAM;EACNhgB,MAAM;EACNigB,WAAW;EACXC,eAAe;EACfC,eAAe;EACfC,eAAe;EACfC,QAAQ;EACRC,MAAM;EACNC,SAAS;EACTC,SAAS;EACTC,QAAQ;EACRC,OAAO;;AAGT,eAAe7/G,SAASkB;EACtBmpF,cAAcrqF,SAAS;QAEjBzF,MAAMyF,KAAK24C;MAEb0pB,QAAQpqE,MAAMsC;OAEb8nE;UACG2rC,QAAQ9rC,OAAO3nE;SAEhByzG,iBACO5zG,OAAO,oBAAoB4F,KAAK;IAE5CqiE,YAAY2rC,SAAS9sG;IACrBjJ,MAAMsC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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5CA;OAEQn8F,UAAW1qB,QAAQ;MACrByyC,SAASzvC,OAAO0vC,IAAI;AAE1B,oBAAqBtJ;QACb,gBAAgBzB;eACTA,WAAWyB;;EAGxBzB,WAAWgL,MAAM/7C,KAAK,MAAMwyC;;AAG9BzB,WAAWgL,QAAQ,eAAgBvJ;EACjC5oC,OAAOmG,eAAe,MAAM8rC;IAAUlyC,OAAO;;EAE7C,KAAKqyC;EACL,KAAKj5C,SAAS;MAEVyvC;IACF,KAAKZ,OAAOY;;;AAIhBzB,WAAW9mC,UAAUgyC,OAAO,cAAezJ;aAC9BzB,WAAWyB;;AAGxBzB,WAAW9mC,UAAUiyC,UAAU,iBAAkB75B;MAC3CA,WAAW;YACL,GAAG;;MAGT85B,MAAM;WAEDr5C,IAAI,GAAGA,IAAI,KAAKk5C,MAAMj5C,QAAQD;UAC/Bs5C,KAAKD,MAAM,KAAKH,MAAMl5C,GAAGC;QAC3Bsf,SAAS+5B,MAAMt5C,MAAM,KAAKk5C,MAAMj5C,SAAS;cACnCD,GAAGuf,SAAS85B;;IAEtBA,MAAMC;;;AAIVrL,WAAW9mC,UAAUoyC,iBAAiB,UAAUC;QACxCC,WAAW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;MAEtBksD,OAAO9vF,IAAI3G,UAAU,KAAK6zB;;;UAItBoxC,MAAMl0C,OAAO0d,MAAM,KAAK5a;aAErB9zB,IAAI,GAAGA,IAAI4G,IAAI3G,QAAQD,KAC9BklE,IAAIllE,KAAK4G,IAAI5G,KAAK;aAEXA,IAAI4G,IAAI3G,QAAQD,IAAIklE,IAAIjlE,QAAQD,KACvCklE,IAAIllE,KAAK;IAEX,KAAKuiC,MAAMxH,QAAQ,KAAKrkB;IACxB,KAAK6rB,MAAM9C,OAAOylC;aAETllE,IAAI,GAAGA,IAAI4G,IAAI3G,QAAQD,KAC9BklE,IAAIllE,KAAK4G,IAAI5G,KAAK;aAEXA,IAAI4G,IAAI3G,QAAQD,IAAIklE,IAAIjlE,QAAQD,KACvCklE,IAAIllE,KAAK;IAEX,KAAKwiC,MAAMzH,QAAQ,KAAKrkB;IACxB,KAAK8rB,MAAM/C,OAAOylC;WAEX;;;;;;EAQTzlC,OAAOriC;IACL,KAAKmlC,MAAM9C,OAAOriC;WACX;;;;;;EAQTm2D;IACE,KAAK/wB,MAAM/C,OAAO,KAAK8C,MAAMgxB,SAAS,KAAK/oB;WACpC,KAAKhI,MAAM+wB,SAAS,KAAK/oB;;;;;;AAQpC7tC,OAAOiR,UAAU8/G;;;ACrHjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxzXA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnhdA;;IACI99F,OAAOhiB;;AAGXgiB,KAAKC,YAAYvpB,QAAQ;;AAGzBspB,KAAKE,SAASxpB,QAAQ;;AAGtBspB,KAAKG,eAAezpB,QAAQ;;AAG5BspB,KAAKI,QAAQ1pB,QAAQ;;AAGrBspB,KAAKK,UAAU3pB,QAAQ;;AAGvBspB,KAAKM,OAAO5pB,QAAQ;;AAGpBspB,KAAKO,OAAO7pB,QAAQ;;AAGpBspB,KAAKQ,WAAW9pB,QAAQ;;;;;;AAOxBspB,KAAKxc,SAASid,eAAe9pB,WAAW,eAClBA,UACAA,OAAOyM,WACPzM,O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AAWnzB,UAAUD,GACrCqzB,SAASD,WAAWpzB,MAAM;;;;;;SAOvB;;aACMsL,OAAOxE,OAAOwE,KAAK,OAAOtL,IAAIsL,KAAKrL,SAAS,GAAGD,KAAK,KAAKA,OAC1DqzB,SAAS/nB,KAAKtL,QAAQ,KAAK,KAAKsL,KAAKtL,QAAQpC,aAAa,KAAK0N,KAAKtL,QAAQ,aACrEsL,KAAKtL;;;;;;;;;;;;;;;AAiB5B4vB,KAAK0D,cAAc,kBAAkBF;;;;;;;SAQ1B,UAAS/mB;aACHrM,IAAI,GAAGA,IAAIozB,WAAWnzB,UAAUD,OACjCozB,WAAWpzB,OAAOqM,aACX,KAAK+mB,WAAWpzB;;;;;;;;;;;;;;;;;;;AAoBvC4vB,KAAK2D;EACDC,OAAOtsB;EACPusB,OAAOvsB;EACPuX,OAAOvX;EACPwsB,MAAM;;;AAIV9D,KAAK+D,aAAa;MACV3C,SAASpB,KAAKoB;;OAEbA;IACDpB,KAAKsB,eAAetB,KAAKuB,sBAAsB;;;;;EAKnDvB,KAAKsB,eAAeF,OAAO3O,SAASiP,WAAWjP,QAAQ2O,OAAO3O;EAE1D,qBAAqBxb,OAAO+sB;eACb5C,OAAOnqB,OAAO+sB;;EAEjChE,KAAKuB,sBAAsBH,OAAO6C;EAE9B,4BAA4BC;eACb9C,OAAO8C;;;;;AClavMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACplDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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K71B,KAAK6R;MACNyjB,IAAI57B,MAAM,MAAM;MAChB47B,IAAIvC,OAAO4C;MACXD,MAAMJ,IAAIM,SAAS9L;;MAEnB2L,MAAMpO,MAAMnE,KAAKiJ,SAASsJ,KAAKC,KAAKN;MACpCO,OAAOD;QACL11B;aACKqnB,MAAMnE,KAAKrY,aAAagrB;;;;;;IAOjCL,MAAOliC,IAAIsuB,MAAO6T,MAAMA,IAAI3M,OAAO,GAAGjf;MAEpCvW;IACFwiC;;EAGFA;;;;ACjjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;IC3TIzO,QAAQztB,QAAQ;AACpBA,QAAQ;IAEJm8B,UAAU;IACX1O,MAAMnE,KAAK8E,aAAaX,MAAM2D,QAAQ8J,sBACtCxuB,QAAQC,SAAS;EAClBwvB,UAAUn8B,QAAQ;;;IAIhBo8B,OAAO/lC,OAAOiR,UAAUmmB,MAAM2O,OAAO3O,MAAM2O;;;;;;;;;;;;;;;;;;;AAoB/CA,KAAKz9B,SAAS,UAAS09B;MACjB10B;IACF00B,QAAQA;IACR/7B,KAAK;IACLg8B,MAAM;IACNhgB,MAAM;;IAENigB,SAAS;;IAETC,WAAW;;IAEXC,UAAU;;;MAIRpB,KAAKgB,OAAOhB;MACZqB,YAAY1gC,MAAM;WACdtC,IAAI,GAAGA,IAAI,MAAMA;IACvBgjC,MAAMhjC,KAAK2hC,GAAG18B;;EAEhBgJ,IAAI+0B,QAAQA;;EAGZ/0B,IAAIkiB,OAAO;;;;;;;;;;;EAYXliB,IAAIg1B,WAAW,UAAShM,OAAOhD;;SAEzBA;aACKhmB,IAAIi1B,aAAajM;;;QAItBkM,SAASl1B,IAAI00B,OAAOQ;QACpBC,YAAYn1B,IAAI00B,OAAOS;QACvBC,YAAYp1B,IAAI00B,OAAOU;QACvBC,aAAar1B,IAAI00B,OAAOW;QACxBrpB,IAAI8Z,MAAMnE,KAAKyH;;;;;;IAOnBppB,IAAIrH,MAAM;IAEVq8B;IAEA,kBAAkB9sB;UACbA;eACM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W,UAASD,QAAQ1P;QAC9B,kBAAkB5yB;cACZjE,OAAOiE,EAAEjE;cACVA,KAAK22B,SAAS32B,KAAK22B,MAAM2O;YAC1B70B,KAAK82B,oBAAoB,WAAWzsB;YACpC+b,SAAS72B,KAAK22B,MAAM2O,KAAKvsB,KAAK/Y,KAAK22B,MAAM2O,KAAKjkB;;;QAGlD5Q,KAAKjJ,iBAAiB,WAAWsT;QACjCrK,KAAKyK;UAAayb;YAAQ2O;cAAOiB,QAAQA;;;;;;;UAIvCzrB,WAAW,UAAS7W;YAClBjE,OAAOiE,EAAEjE;YACVA,KAAK22B,SAAS32B,KAAK22B,MAAM2O;UAC1Bz0B,IAAI21B,SAASxmC,KAAK22B,MAAM2O,KAAKiB,QAAQ,UAASxtB,KAAKsI;YACjDkiB,OAAOroB;cAAayb;gBAAQ2O;kBAAOvsB,KAAKA;kBAAKsI,OAAOA;;;;;;;;MAK1DkiB,OAAO/7B,iBAAiB,WAAWsT;;;SAIhCjK;;;;ACjazjunRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChtiBI8lB,QAAQztB,QAAQ;AACpBA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;IACJs+B,gBAAgBt+B,QAAQ;IACxBu+B,qBAAqBD,cAAcC;IACnCC,sBAAsBF,cAAcE;WAE9BC,eAAe;MACnBA,aAAahR,MAAMiR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CA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvppxrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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QAAQ;IAAd;QACmB,YAAO,GAAG,IAAI,GAAG,EAAuB,CAAA;IAgB3D,CAAC;IAdQ,KAAK,CAAE,MAAc,EAAE,GAAY;QACxC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAA;IAClC,CAAC;IAEM,IAAI,CAAE,MAAe;A;QAC1B,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,IAAI,CAAA;SACZ;QACD,aAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,mCAAI,IAAI,CAAA;IAC5C,CAAC;IAEM,YAAY;QACjB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;IACtB,CAAC;CACF;AAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAA;AAE7B,4BAAQ;;;AC3BV;AACA;AACA;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5OA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtDA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChpvpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;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H,OAAO6C;EAE9B,4BAA4BC;eACb9C,OAAO8C;;;;;AClavMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACplDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnjztB,QAAQ;IAChB0tB,QAAQ1tB,QAAQ;;IAGhBspB,OAAOjzB,OAAOiR,UAAUmmB,MAAMnE,OAAOmE,MAAMnE;;CAG9C;;;;aAIW5c,YAAY,eAAeA,QAAQmF;IAC3CyX,KAAKzX,WAAWnF,QAAQmF;eACdZ,iBAAiB;MACzBqY,KAAKrY,eAAeA;;;;MAIpBqY,KAAKrY,eAAeqY,KAAKzX;;;;;aAMnBZ,iBAAiB;IACzBqY,KAAKrY,eAAe;aAAoBA,aAAa5S,MAAM/G,WAAWsO;;IACtE0jB,KAAKzX,WAAW,UAAS8b;aAChB1c,aAAa0c;;;;;;;;;EAWxBrE,KAAKrY,eAAe,UAAS0c;IAC3BzwB,WAAWywB,UAAU;;;aAIb9zB,WAAW,sBACZA,OAAOmY,gBAAgB;QAC1B4b,MAAM;QACNC;IACJvE,KAAKrY,eAAe,UAAS0c;MAC3BE,UAAUz2B,KAAKu2B;;;UAGZE,UAAUl0B,WAAW;QACtBE,OAAOmY,YAAY4b,KAAK;;;IAG5B,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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrzO,QAAQztB,QAAQ;AACpBA,QAAQ;IAEJm8B,UAAU;IACX1O,MAAMnE,KAAK8E,aAAaX,MAAM2D,QAAQ8J,sBACtCxuB,QAAQC,SAAS;EAClBwvB,UAAUn8B,QAAQ;;;IAIhBo8B,OAAO/lC,OAAOiR,UAAUmmB,MAAM2O,OAAO3O,MAAM2O;;;;;;;;;;;;;;;;;;;AAoB/CA,KAAKz9B,SAAS,UAAS09B;MACjB10B;IACF00B,QAAQA;IACR/7B,KAAK;IACLg8B,MAAM;IACNhgB,MAAM;;IAENigB,SAAS;;IAETC,WAAW;;IAEXC,UAAU;;;MAIRpB,KAAKgB,OAAOhB;MACZqB,YAAY1gC,MAAM;WACdtC,IAAI,GAAGA,IAAI,MAAMA;IACvBgjC,MAAMhjC,KAAK2hC,GAAG18B;;EAEhBgJ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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChtiBI8lB,QAAQztB,QAAQ;AACpBA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;AACRA,QAAQ;IACJs+B,gBAAgBt+B,QAAQ;IACxBu+B,qBAAqBD,cAAcC;IACnCC,sBAAsBF,cAAcE;WAE9BC,eAAe;MACnBA,aAAahR,MAAMiR,KAAKD;;IAG1BhQ,aAAahB,MAAMnE,KAAKmF;IACxBkQ,sBAAsBjU,WAAW,cAAcM,aAAaN;;;;;AAMhE+C,MAAMmR,MAAMnR,MAAMmR;AAClBvoC,OAAOiR,UAAUmmB,MAAMmR,IAAIC,UAAUpR,MAAMoR,UAAUpR,MAAMoR;IACvDA,UAAUpR,MAAMoR;AAEpBA,QAAQC;AACRD,QAAQC,UAAUC,yBAAyB;AAC3CF,QAAQC,UAAUE,0BAA0B;AAC5CH,QAAQC,UAAUG,mBAAmB;AACrCJ,QAAQC,UAAUI,mBAAmB;AACrCL,QAAQC,UAAUK,mBAAmB;AAErCN,QAAQO,kBAAkB,UAAShO;EACjC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pEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvppCA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxrtmzpvxGA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxsources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./index.js","./node_modules/babel-polyfill/lib/index.js","./node_modules/core-js/shim.js","./node_modules/core-js/modules/es6.symbol.js","./node_modules/core-js/modules/_global.js","./node_modules/core-js/modules/_has.js","./node_modules/core-js/modules/_descriptors.js","./node_modules/core-js/modules/_fails.js","./node_modules/core-js/modules/_export.js","./node_modules/core-js/modules/_core.js","./node_modules/core-js/modules/_hide.js","./node_modules/core-js/modules/_object-dp.js","./node_modules/core-js/modules/_an-object.js","./node_modules/core-js/modules/_is-object.js","./node_modules/core-js/modules/_ie8-dom-define.js","./node_modules/core-js/modules/_dom-create.js","./node_modules/core-js/modules/_to-primitive.js","./node_modules/core-js/modules/_property-desc.js","./node_modules/core-js/modules/_redefine.js","./node_modules/core-js/modules/_uid.js","./node_modules/core-js/modules/_function-to-string.js","./node_modules/core-js/modules/_shared.js","./node_modules/core-js/modules/_library.js","./node_modules/core-js/modules/_ctx.js","./node_modules/core-js/modules/_a-function.js","./node_modules/core-js/modules/_meta.js","./node_modules/core-js/modules/_set-to-string-tag.js","./node_modules/core-js/modules/_wks.js","./node_modules/core-js/modules/_wks-ext.js","./node_modules/core-js/modules/_wks-define.js","./node_modules/core-js/modules/_enum-keys.js","./node_modules/core-js/modules/_object-keys.js","./node_modules/core-js/modules/_object-keys-internal.js","./node_modules/core-js/modules/_to-iobject.js","./node_modules/core-js/modules/_iobject.js","./node_modules/core-js/modules/_cof.js","./node_modules/core-js/modules/_defined.js","./node_modules/core-js/modules/_array-includes.js","./node_modules/core-js/modules/_to-length.js","./node_modules/core-js/modules/_to-integer.js","./node_modules/core-js/modules/_to-absolute-index.js","./node_modules/core-js/modules/_shared-key.js","./node_modules/core-js/modules/_enum-bug-keys.js","./node_modules/core-js/modules/_object-gops.js","./node_modules/core-js/modules/_object-pie.js","./node_modules/core-js/modules/_is-array.js","./node_modules/core-js/modules/_to-object.js","./node_modules/core-js/modules/_object-create.js","./node_modules/core-js/modules/_object-dps.js","./node_modules/core-js/modules/_html.js","./node_modules/core-js/modules/_object-gopn-ext.js","./node_modules/core-js/modules/_object-gopn.js","./node_modules/core-js/modules/_object-gopd.js","./node_modules/core-js/modules/es6.object.create.js","./node_modules/core-js/modules/es6.object.define-property.js","./node_modules/core-js/modules/es6.object.define-properties.js","./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","./node_modules/core-js/modules/_object-sap.js","./node_modules/core-js/modules/es6.object.get-prototype-of.js","./node_modules/core-js/modules/_object-gpo.js","./node_modules/core-js/modules/es6.object.keys.js","./node_modules/core-js/modules/es6.object.get-own-property-names.js","./node_modules/core-js/modules/es6.object.freeze.js","./node_modules/core-js/modules/es6.object.seal.js","./node_modules/core-js/modules/es6.object.prevent-extensions.js","./node_modules/core-js/modules/es6.object.is-frozen.js","./node_modules/core-js/modules/es6.object.is-sealed.js","./node_modules/core-js/modules/es6.object.is-extensible.js","./node_modules/core-js/modules/es6.object.assign.js","./node_modules/core-js/modules/_object-assign.js","./node_modules/core-js/modules/es6.object.is.js","./node_modules/core-js/modules/_same-value.js","./node_modules/core-js/modules/es6.object.set-prototype-of.js","./node_modules/core-js/modules/_set-proto.js","./node_modules/core-js/modules/es6.object.to-string.js","./node_modules/core-js/modules/_classof.js","./node_modules/core-js/modules/es6.function.bind.js","./node_modules/core-js/modules/_bind.js","./node_modules/core-js/modules/_invoke.js","./node_modules/core-js/modules/es6.function.name.js","./node_modules/core-js/modules/es6.function.has-instance.js","./node_modules/core-js/modules/es6.parse-int.js","./node_modules/core-js/modules/_parse-int.js","./node_modules/core-js/modules/_string-trim.js","./node_modules/core-js/modules/_string-ws.js","./node_modules/core-js/modules/es6.parse-float.js","./node_modules/core-js/modules/_parse-float.js","./node_modules/core-js/modules/es6.number.constructor.js","./node_modules/core-js/modules/_inherit-if-required.js","./node_modules/core-js/modules/es6.number.to-fixed.js","./node_modules/core-js/modules/_a-number-value.js","./node_modules/core-js/modules/_string-repeat.js","./node_modules/core-js/modules/es6.number.to-precision.js","./node_modules/core-js/modules/es6.number.epsilon.js","./node_modules/core-js/modules/es6.number.is-finite.js","./node_modules/core-js/modules/es6.number.is-integer.js","./node_modules/core-js/modules/_is-integer.js","./node_modules/core-js/modules/es6.number.is-nan.js","./node_modules/core-js/modules/es6.number.is-safe-integer.js","./node_modules/core-js/modules/es6.number.max-safe-integer.js","./node_modules/core-js/modules/es6.number.min-safe-integer.js","./node_modules/core-js/modules/es6.number.parse-float.js","./node_modules/core-js/modules/es6.number.parse-int.js","./node_modules/core-js/modules/es6.math.acosh.js","./node_modules/core-js/modules/_math-log1p.js","./node_modules/core-js/modules/es6.math.asinh.js","./node_modules/core-js/modules/es6.math.atanh.js","./node_modules/core-js/modules/es6.math.cbrt.js","./node_modules/core-js/modules/_math-sign.js","./node_modules/core-js/modules/es6.math.clz32.js","./node_modules/core-js/modules/es6.math.cosh.js","./node_modules/core-js/modules/es6.math.expm1.js","./node_modules/core-js/modules/_math-expm1.js","./node_modules/core-js/modules/es6.math.fround.js","./node_modules/core-js/modules/_math-fround.js","./node_modules/core-js/modules/es6.math.hypot.js","./node_modules/core-js/modules/es6.math.imul.js","./node_modules/core-js/modules/es6.math.log10.js","./node_modules/core-js/modules/es6.math.log1p.js","./node_modules/core-js/modules/es6.math.log2.js","./node_modules/core-js/modules/es6.math.sign.js","./node_modules/core-js/modules/es6.math.sinh.js","./node_modules/core-js/modules/es6.math.tanh.js","./node_modules/core-js/modules/es6.math.trunc.js","./node_modules/core-js/modules/es6.string.from-code-point.js","./node_modules/core-js/modules/es6.string.raw.js","./node_modules/core-js/modules/es6.string.trim.js","./node_modules/core-js/modules/es6.string.iterator.js","./node_modules/core-js/modules/_string-at.js","./node_modules/core-js/modules/_iter-define.js","./node_modules/core-js/modules/_iterators.js","./node_modules/core-js/modules/_iter-create.js","./node_modules/core-js/modules/es6.string.code-point-at.js","./node_modules/core-js/modules/es6.string.ends-with.js","./node_modules/core-js/modules/_string-context.js","./node_modules/core-js/modules/_is-regexp.js","./node_modules/core-js/modules/_fails-is-regexp.js","./node_modules/core-js/modules/es6.string.includes.js","./node_modules/core-js/modules/es6.string.repeat.js","./node_modules/core-js/modules/es6.string.starts-with.js","./node_modules/core-js/modules/es6.string.anchor.js","./node_modules/core-js/modules/_string-html.js","./node_modules/core-js/modules/es6.string.big.js","./node_modules/core-js/modules/es6.string.blink.js","./node_modules/core-js/modules/es6.string.bold.js","./node_modules/core-js/modules/es6.string.fixed.js","./node_modules/core-js/modules/es6.string.fontcolor.js","./node_modules/core-js/modules/es6.string.fontsize.js","./node_modules/core-js/modules/es6.string.italics.js","./node_modules/core-js/modules/es6.string.link.js","./node_modules/core-js/modules/es6.string.small.js","./node_modules/core-js/modules/es6.string.strike.js","./node_modules/core-js/modules/es6.string.sub.js","./node_modules/core-js/modules/es6.string.sup.js","./node_modules/core-js/modules/es6.date.now.js","./node_modules/core-js/modules/es6.date.to-json.js","./node_modules/core-js/modules/es6.date.to-iso-string.js","./node_modules/core-js/modules/_date-to-iso-string.js","./node_modules/core-js/modules/es6.date.to-string.js","./node_modules/core-js/modules/es6.date.to-primitive.js","./node_modules/core-js/modules/_date-to-primitive.js","./node_modules/core-js/modules/es6.array.is-array.js","./node_modules/core-js/modules/es6.array.from.js","./node_modules/core-js/modules/_iter-call.js","./node_modules/core-js/modules/_is-array-iter.js","./node_modules/core-js/modules/_create-property.js","./node_modules/core-js/modules/core.get-iterator-method.js","./node_modules/core-js/modules/_iter-detect.js","./node_modules/core-js/modules/es6.array.of.js","./node_modules/core-js/modules/es6.array.join.js","./node_modules/core-js/modules/_strict-method.js","./node_modules/core-js/modules/es6.array.slice.js","./node_modules/core-js/modules/es6.array.sort.js","./node_modules/core-js/modules/es6.array.for-each.js","./node_modules/core-js/modules/_array-methods.js","./node_modules/core-js/modules/_array-species-create.js","./node_modules/core-js/modules/_array-species-constructor.js","./node_modules/core-js/modules/es6.array.map.js","./node_modules/core-js/modules/es6.array.filter.js","./node_modules/core-js/modules/es6.array.some.js","./node_modules/core-js/modules/es6.array.every.js","./node_modules/core-js/modules/es6.array.reduce.js","./node_modules/core-js/modules/_array-reduce.js","./node_modules/core-js/modules/es6.array.reduce-right.js","./node_modules/core-js/modules/es6.array.index-of.js","./node_modules/core-js/modules/es6.array.last-index-of.js","./node_modules/core-js/modules/es6.array.copy-within.js","./node_modules/core-js/modules/_array-copy-within.js","./node_modules/core-js/modules/_add-to-unscopables.js","./node_modules/core-js/modules/es6.array.fill.js","./node_modules/core-js/modules/_array-fill.js","./node_modules/core-js/modules/es6.array.find.js","./node_modules/core-js/modules/es6.array.find-index.js","./node_modules/core-js/modules/es6.array.species.js","./node_modules/core-js/modules/_set-species.js","./node_modules/core-js/modules/es6.array.iterator.js","./node_modules/core-js/modules/_iter-step.js","./node_modules/core-js/modules/es6.regexp.constructor.js","./node_modules/core-js/modules/_flags.js","./node_modules/core-js/modules/es6.regexp.exec.js","./node_modules/core-js/modules/_regexp-exec.js","./node_modules/core-js/modules/es6.regexp.to-string.js","./node_modules/core-js/modules/es6.regexp.flags.js","./node_modules/core-js/modules/es6.regexp.match.js","./node_modules/core-js/modules/_advance-string-index.js","./node_modules/core-js/modules/_regexp-exec-abstract.js","./node_modules/core-js/modules/_fix-re-wks.js","./node_modules/core-js/modules/es6.regexp.replace.js","./node_modules/core-js/modules/es6.regexp.search.js","./node_modules/core-js/modules/es6.regexp.split.js","./node_modules/core-js/modules/_species-constructor.js","./node_modules/core-js/modules/es6.promise.js","./node_modules/core-js/modules/_an-instance.js","./node_modules/core-js/modules/_for-of.js","./node_modules/core-js/modules/_task.js","./node_modules/core-js/modules/_microtask.js","./node_modules/core-js/modules/_new-promise-capability.js","./node_modules/core-js/modules/_perform.js","./node_modules/core-js/modules/_user-agent.js","./node_modules/core-js/modules/_promise-resolve.js","./node_modules/core-js/modules/_redefine-all.js","./node_modules/core-js/modules/es6.map.js","./node_modules/core-js/modules/_collection-strong.js","./node_modules/core-js/modules/_validate-collection.js","./node_modules/core-js/modules/_collection.js","./node_modules/core-js/modules/es6.set.js","./node_modules/core-js/modules/es6.weak-map.js","./node_modules/core-js/modules/_collection-weak.js","./node_modules/core-js/modules/es6.weak-set.js","./node_modules/core-js/modules/es6.typed.array-buffer.js","./node_modules/core-js/modules/_typed.js","./node_modules/core-js/modules/_typed-buffer.js","./node_modules/core-js/modules/_to-index.js","./node_modules/core-js/modules/es6.typed.data-view.js","./node_modules/core-js/modules/es6.typed.int8-array.js","./node_modules/core-js/modules/_typed-array.js","./node_modules/core-js/modules/es6.typed.uint8-array.js","./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","./node_modules/core-js/modules/es6.typed.int16-array.js","./node_modules/core-js/modules/es6.typed.uint16-array.js","./node_modules/core-js/modules/es6.typed.int32-array.js","./node_modules/core-js/modules/es6.typed.uint32-array.js","./node_modules/core-js/modules/es6.typed.float32-array.js","./node_modules/core-js/modules/es6.typed.float64-array.js","./node_modules/core-js/modules/es6.reflect.apply.js","./node_modules/core-js/modules/es6.reflect.construct.js","./node_modules/core-js/modules/es6.reflect.define-property.js","./node_modules/core-js/modules/es6.reflect.delete-property.js","./node_modules/core-js/modules/es6.reflect.enumerate.js","./node_modules/core-js/modules/es6.reflect.get.js","./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","./node_modules/core-js/modules/es6.reflect.get-prototype-of.js","./node_modules/core-js/modules/es6.reflect.has.js","./node_modules/core-js/modules/es6.reflect.is-extensible.js","./node_modules/core-js/modules/es6.reflect.own-keys.js","./node_modules/core-js/modules/_own-keys.js","./node_modules/core-js/modules/es6.reflect.prevent-extensions.js","./node_modules/core-js/modules/es6.reflect.set.js","./node_modules/core-js/modules/es6.reflect.set-prototype-of.js","./node_modules/core-js/modules/es7.array.includes.js","./node_modules/core-js/modules/es7.array.flat-map.js","./node_modules/core-js/modules/_flatten-into-array.js","./node_modules/core-js/modules/es7.array.flatten.js","./node_modules/core-js/modules/es7.string.at.js","./node_modules/core-js/modules/es7.string.pad-start.js","./node_modules/core-js/modules/_string-pad.js","./node_modules/core-js/modules/es7.string.pad-end.js","./node_modules/core-js/modules/es7.string.trim-left.js","./node_modules/core-js/modules/es7.string.trim-right.js","./node_modules/core-js/modules/es7.string.match-all.js","./node_modules/core-js/modules/es7.symbol.async-iterator.js","./node_modules/core-js/modules/es7.symbol.observable.js","./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","./node_modules/core-js/modules/es7.object.values.js","./node_modules/core-js/modules/_object-to-array.js","./node_modules/core-js/modules/es7.object.entries.js","./node_modules/core-js/modules/es7.object.define-getter.js","./node_modules/core-js/modules/_object-forced-pam.js","./node_modules/core-js/modules/es7.object.define-setter.js","./node_modules/core-js/modules/es7.object.lookup-getter.js","./node_modules/core-js/modules/es7.object.lookup-setter.js","./node_modules/core-js/modules/es7.map.to-json.js","./node_modules/core-js/modules/_collection-to-json.js","./node_modules/core-js/modules/_array-from-iterable.js","./node_modules/core-js/modules/es7.set.to-json.js","./node_modules/core-js/modules/es7.map.of.js","./node_modules/core-js/modules/_set-collection-of.js","./node_modules/core-js/modules/es7.set.of.js","./node_modules/core-js/modules/es7.weak-map.of.js","./node_modules/core-js/modules/es7.weak-set.of.js","./node_modules/core-js/modules/es7.map.from.js","./node_modules/core-js/modules/_set-collection-from.js","./node_modules/core-js/modules/es7.set.from.js","./node_modules/core-js/modules/es7.weak-map.from.js","./node_modules/core-js/modules/es7.weak-set.from.js","./node_modules/core-js/modules/es7.global.js","./node_modules/core-js/modules/es7.system.global.js","./node_modules/core-js/modules/es7.error.is-error.js","./node_modules/core-js/modules/es7.math.clamp.js","./node_modules/core-js/modules/es7.math.deg-per-rad.js","./node_modules/core-js/modules/es7.math.degrees.js","./node_modules/core-js/modules/es7.math.fscale.js","./node_modules/core-js/modules/_math-scale.js","./node_modules/core-js/modules/es7.math.iaddh.js","./node_modules/core-js/modules/es7.math.isubh.js","./node_modules/core-js/modules/es7.math.imulh.js","./node_modules/core-js/modules/es7.math.rad-per-deg.js","./node_modules/core-js/modules/es7.math.radians.js","./node_modules/core-js/modules/es7.math.scale.js","./node_modules/core-js/modules/es7.math.umulh.js","./node_modules/core-js/modules/es7.math.signbit.js","./node_modules/core-js/modules/es7.promise.finally.js","./node_modules/core-js/modules/es7.promise.try.js","./node_modules/core-js/modules/es7.reflect.define-metadata.js","./node_modules/core-js/modules/_metadata.js","./node_modules/core-js/modules/es7.reflect.delete-metadata.js","./node_modules/core-js/modules/es7.reflect.get-metadata.js","./node_modules/core-js/modules/es7.reflect.get-metadata-keys.js","./node_modules/core-js/modules/es7.reflect.get-own-metadata.js","./node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js","./node_modules/core-js/modules/es7.reflect.has-metadata.js","./node_modules/core-js/modules/es7.reflect.has-own-metadata.js","./node_modules/core-js/modules/es7.reflect.metadata.js","./node_modules/core-js/modules/es7.asap.js","./node_modules/core-js/modules/es7.observable.js","./node_modules/core-js/modules/web.timers.js","./node_modules/core-js/modules/web.immediate.js","./node_modules/core-js/modules/web.dom.iterable.js","./node_modules/babel-polyfill/node_modules/regenerator-runtime/runtime.js","./node_modules/core-js/fn/regexp/escape.js","./node_modules/core-js/modules/core.regexp.escape.js","./node_modules/core-js/modules/_replacer.js","../../src/index.js","../../node_modules/debug/src/browser.js","./node_modules/process/browser.js","../../node_modules/debug/src/common.js","../../node_modules/ms/index.js","./node_modules/events/events.js","../../node_modules/err-code/index.js","../../node_modules/peer-id/src/index.js","../../node_modules/multihashes/src/index.js","../../node_modules/multibase/src/index.js","../../node_modules/multibase/src/constants.js","../../node_modules/@multiformats/base-x/src/index.js","../../node_modules/multibase/src/base.js","../../node_modules/multibase/src/util.js","../../node_modules/multibase/src/rfc4648.js","../../node_modules/multihashes/node_modules/varint/index.js","../../node_modules/multihashes/node_modules/varint/encode.js","../../node_modules/multihashes/node_modules/varint/decode.js","../../node_modules/multihashes/node_modules/varint/length.js","../../node_modules/multihashes/src/constants.js","../../node_modules/uint8arrays/to-string.js","../../node_modules/uint8arrays/from-string.js","../../node_modules/uint8arrays/concat.js","../../node_modules/cids/src/index.js","../../node_modules/multicodec/src/index.js","../../node_modules/multicodec/node_modules/varint/index.js","../../node_modules/multicodec/node_modules/varint/encode.js","../../node_modules/multicodec/node_modules/varint/decode.js","../../node_modules/multicodec/node_modules/varint/length.js","../../node_modules/multicodec/src/util.js","../../node_modules/multicodec/src/maps.js","../../node_modules/multicodec/src/generated-table.js","../../node_modules/cids/src/cid-util.js","../../node_modules/uint8arrays/equals.js","../../node_modules/libp2p-crypto/src/keys/index.js","../../node_modules/libp2p-crypto/src/keys/keys.js","../../node_modules/protobufjs/minimal.js","../../node_modules/protobufjs/src/index-minimal.js","../../node_modules/protobufjs/src/writer.js","../../node_modules/protobufjs/src/util/minimal.js","../../node_modules/@protobufjs/aspromise/index.js","../../node_modules/@protobufjs/base64/index.js","../../node_modules/@protobufjs/eventemitter/index.js","../../node_modules/@protobufjs/float/index.js","../../node_modules/@protobufjs/inquire/index.js","../../node_modules/@protobufjs/utf8/index.js","../../node_modules/@protobufjs/pool/index.js","../../node_modules/protobufjs/src/util/longbits.js","../../node_modules/protobufjs/src/writer_buffer.js","../../node_modules/protobufjs/src/reader.js","../../node_modules/protobufjs/src/reader_buffer.js","../../node_modules/protobufjs/src/rpc.js","../../node_modules/protobufjs/src/rpc/service.js","../../node_modules/protobufjs/src/roots.js","../../node_modules/node-forge/lib/asn1.js","../../node_modules/node-forge/lib/forge.js","../../node_modules/node-forge/lib/util.js","./node_modules/@parcel/node-resolver-core/lib/_empty.js","../../node_modules/node-forge/lib/baseN.js","../../node_modules/node-forge/lib/oids.js","../../node_modules/node-forge/lib/pbe.js","../../node_modules/node-forge/lib/aes.js","../../node_modules/node-forge/lib/cipher.js","../../node_modules/node-forge/lib/cipherModes.js","../../node_modules/node-forge/lib/des.js","../../node_modules/node-forge/lib/md.js","../../node_modules/node-forge/lib/pbkdf2.js","../../node_modules/node-forge/lib/hmac.js","../../node_modules/node-forge/lib/pem.js","../../node_modules/node-forge/lib/random.js","../../node_modules/node-forge/lib/sha256.js","../../node_modules/node-forge/lib/prng.js","../../node_modules/node-forge/lib/rc2.js","../../node_modules/node-forge/lib/rsa.js","../../node_modules/node-forge/lib/jsbn.js","../../node_modules/node-forge/lib/pkcs1.js","../../node_modules/node-forge/lib/sha1.js","../../node_modules/node-forge/lib/prime.js","../../node_modules/libp2p-crypto/src/keys/importer.js","../../node_modules/libp2p-crypto/src/ciphers/aes-gcm.browser.js","../../node_modules/libp2p-crypto/src/webcrypto.js","../../node_modules/libp2p-crypto/src/keys/rsa-class.js","../../node_modules/multihashing-async/src/sha.browser.js","../../node_modules/node-forge/lib/sha512.js","../../node_modules/node-forge/lib/ed25519.js","../../node_modules/node-forge/lib/asn1-validator.js","../../node_modules/libp2p-crypto/src/keys/rsa-browser.js","../../node_modules/libp2p-crypto/src/random-bytes.js","../../node_modules/iso-random-stream/src/random.browser.js","../../node_modules/libp2p-crypto/src/keys/rsa-utils.js","../../node_modules/libp2p-crypto/src/util.js","../../node_modules/libp2p-crypto/src/keys/jwk2pem.js","../../node_modules/libp2p-crypto/src/keys/exporter.js","../../node_modules/libp2p-crypto/src/keys/ed25519-class.js","../../node_modules/libp2p-crypto/src/keys/ed25519.js","../../node_modules/libp2p-crypto/src/keys/secp256k1-class.js","../../node_modules/libp2p-crypto/src/keys/secp256k1.js","../../node_modules/secp256k1/elliptic.js","../../node_modules/secp256k1/lib/index.js","../../node_modules/secp256k1/lib/elliptic.js","../../node_modules/elliptic/lib/elliptic.js","../../node_modules/elliptic/package.json","../../node_modules/elliptic/lib/elliptic/utils.js","../../node_modules/bn.js/lib/bn.js","../../node_modules/minimalistic-assert/index.js","../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../node_modules/brorand/index.js","../../node_modules/elliptic/lib/elliptic/curve/index.js","../../node_modules/elliptic/lib/elliptic/curve/base.js","../../node_modules/elliptic/lib/elliptic/curve/short.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/elliptic/lib/elliptic/curve/mont.js","../../node_modules/elliptic/lib/elliptic/curve/edwards.js","../../node_modules/elliptic/lib/elliptic/curves.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../node_modules/elliptic/lib/elliptic/ec/index.js","../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../node_modules/elliptic/lib/elliptic/ec/key.js","../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../node_modules/elliptic/lib/elliptic/eddsa/index.js","../../node_modules/elliptic/lib/elliptic/eddsa/key.js","../../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../node_modules/libp2p-crypto/src/keys/key-stretcher.js","../../node_modules/libp2p-crypto/src/hmac/index-browser.js","../../node_modules/libp2p-crypto/src/hmac/lengths.js","../../node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","../../node_modules/libp2p-crypto/src/keys/ecdh-browser.js","../../node_modules/libp2p-crypto/src/keys/validate-curve-type.js","../../node_modules/class-is/index.js","../../node_modules/peer-id/src/proto.js","../../node_modules/multiaddr/src/index.js","../../node_modules/multiaddr/src/codec.js","../../node_modules/multiaddr/src/convert.js","../../node_modules/multiaddr/src/ip.js","../../node_modules/is-ip/index.js","../../node_modules/ip-regex/index.js","../../node_modules/multiaddr/src/protocols-table.js","../../node_modules/varint/index.js","../../node_modules/varint/encode.js","../../node_modules/varint/decode.js","../../node_modules/varint/length.js","../../src/peer-routing.js","../../src/content-routing/utils.js","../../node_modules/it-filter/index.js","../../node_modules/it-map/index.js","../../node_modules/it-take/index.js","../../node_modules/it-merge/index.js","../../node_modules/it-pushable/index.js","../../node_modules/fast-fifo/index.js","../../node_modules/fast-fifo/fixed-size.js","../../node_modules/it-pipe/index.js","../../node_modules/it-first/index.js","../../node_modules/it-drain/index.js","../../node_modules/set-delayed-interval/src/index.js","../../src/content-routing/index.js","../../src/errors.js","../../src/get-peer.js","../../src/config.js","../../node_modules/merge-options/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/multiaddr/src/resolvers/index.js","../../node_modules/multiaddr/src/resolvers/dns.browser.js","../../node_modules/dns-over-http-resolver/src/index.js","../../node_modules/receptacle/index.js","../../node_modules/dns-over-http-resolver/src/utils.js","../../node_modules/native-fetch/src/index.js","../../node_modules/node-fetch/browser.js","../../src/constants.js","../../src/identify/consts.js","../../package.json","../../src/circuit/constants.js","../../node_modules/libp2p-utils/src/address-sort.js","../../node_modules/libp2p-utils/src/multiaddr/is-private.js","../../node_modules/private-ip/index.js","../../node_modules/private-ip/lib/index.js","../../node_modules/netmask/lib/netmask.js","../../src/transport-manager.js","../../node_modules/p-settle/index.js","../../node_modules/p-reflect/index.js","../../node_modules/p-settle/node_modules/p-limit/index.js","../../node_modules/p-try/index.js","../../src/record/utils.js","../../src/record/envelope/index.js","../../src/record/envelope/envelope.js","../../src/record/peer-record/index.js","../../node_modules/libp2p-utils/src/array-equals.js","../../src/record/peer-record/peer-record.js","../../src/record/peer-record/consts.js","../../src/address-manager/index.js","../../src/connection-manager/index.js","../../src/connection-manager/latency-monitor.js","../../src/connection-manager/visibility-change-emitter.js","../../node_modules/retimer/retimer.js","../../node_modules/retimer/time-browser.js","../../src/circuit/transport.js","../../node_modules/mafmt/src/index.js","../../src/circuit/protocol/index.js","../../node_modules/libp2p-utils/src/stream-to-ma-conn.js","../../node_modules/abortable-iterator/index.js","../../node_modules/get-iterator/index.js","../../node_modules/abortable-iterator/AbortError.js","../../src/circuit/multicodec.js","../../src/circuit/listener.js","../../src/circuit/circuit/hop.js","../../src/circuit/circuit/utils.js","../../src/circuit/circuit/stream-handler.js","../../node_modules/it-length-prefixed/src/index.js","../../node_modules/it-length-prefixed/src/encode.js","./node_modules/@parcel/node-libs-browser/node_modules/buffer/index.js","./node_modules/base64-js/index.js","./node_modules/ieee754/index.js","../../node_modules/bl/BufferList.js","../../node_modules/it-length-prefixed/src/varint-encode.js","../../node_modules/it-length-prefixed/src/decode.js","../../node_modules/it-length-prefixed/src/varint-decode.js","../../node_modules/it-length-prefixed/src/int32BE-encode.js","../../node_modules/it-length-prefixed/src/int32BE-decode.js","../../node_modules/it-handshake/src/index.js","../../node_modules/it-reader/index.js","../../node_modules/p-defer/index.js","../../src/circuit/circuit/stop.js","../../src/circuit/index.js","../../src/circuit/auto-relay.js","../../src/circuit/utils.js","../../node_modules/multihashing-async/src/index.js","../../node_modules/multihashing-async/src/crypto.js","../../node_modules/js-sha3/src/sha3.js","../../node_modules/murmurhash3js-revisited/index.js","../../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../../node_modules/multihashing-async/src/utils.js","../../node_modules/multihashing-async/src/blake.js","../../node_modules/blakejs/index.js","../../node_modules/blakejs/blake2b.js","../../node_modules/blakejs/util.js","../../node_modules/blakejs/blake2s.js","../../node_modules/ipfs-utils/src/text-encoder.js","../../src/dialer/index.js","../../node_modules/timeout-abort-controller/index.js","../../node_modules/abort-controller/browser.js","../../node_modules/timeout-abort-controller/node_modules/retimer/retimer.js","../../node_modules/timeout-abort-controller/node_modules/retimer/time-browser.js","../../node_modules/any-signal/index.js","../../node_modules/native-abort-controller/src/index.js","../../src/dialer/dial-request.js","../../node_modules/p-fifo/index.js","../../node_modules/p-any/index.js","../../node_modules/p-some/index.js","../../node_modules/aggregate-error/index.js","../../node_modules/indent-string/index.js","../../node_modules/clean-stack/index.js","../../node_modules/p-cancelable/index.js","../../src/keychain/index.js","../../node_modules/sanitize-filename/index.js","../../node_modules/truncate-utf8-bytes/browser.js","../../node_modules/truncate-utf8-bytes/lib/truncate.js","../../node_modules/utf8-byte-length/browser.js","../../node_modules/libp2p-crypto/src/index.js","../../node_modules/libp2p-crypto/src/aes/index.js","../../node_modules/libp2p-crypto/src/aes/ciphers-browser.js","../../node_modules/libp2p-crypto/src/aes/cipher-mode.js","../../node_modules/libp2p-crypto/src/pbkdf2.js","../../node_modules/interface-datastore/src/index.js","../../node_modules/interface-datastore/src/key.js","../../node_modules/nanoid/index.cjs","./node_modules/crypto-browserify/index.js","./node_modules/randombytes/browser.js","./node_modules/safe-buffer/index.js","./node_modules/create-hash/browser.js","./node_modules/inherits/inherits_browser.js","./node_modules/md5.js/index.js","./node_modules/hash-base/index.js","./node_modules/hash-base/node_modules/readable-stream/readable-browser.js","./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","./node_modules/hash-base/node_modules/readable-stream/errors-browser.js","./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","./node_modules/util-deprecate/browser.js","./node_modules/string_decoder/lib/string_decoder.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","./node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js","./node_modules/ripemd160/index.js","./node_modules/sha.js/index.js","./node_modules/sha.js/sha.js","./node_modules/sha.js/hash.js","./node_modules/sha.js/sha1.js","./node_modules/sha.js/sha224.js","./node_modules/sha.js/sha256.js","./node_modules/sha.js/sha384.js","./node_modules/sha.js/sha512.js","./node_modules/cipher-base/index.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/readable-browser.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/_stream_readable.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/stream-browser.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/destroy.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/state.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/errors-browser.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/_stream_duplex.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/_stream_writable.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/from-browser.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/_stream_transform.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/_stream_passthrough.js","./node_modules/@parcel/node-libs-browser/node_modules/readable-stream/lib/internal/streams/pipeline.js","./node_modules/create-hmac/browser.js","./node_modules/create-hmac/legacy.js","./node_modules/create-hash/md5.js","./node_modules/browserify-sign/algos.js","./node_modules/browserify-sign/browser/algorithms.json","./node_modules/pbkdf2/browser.js","./node_modules/pbkdf2/lib/async.js","./node_modules/pbkdf2/lib/precondition.js","./node_modules/pbkdf2/lib/default-encoding.js","./node_modules/pbkdf2/lib/sync-browser.js","./node_modules/pbkdf2/lib/to-buffer.js","./node_modules/browserify-cipher/browser.js","./node_modules/browserify-des/index.js","./node_modules/des.js/lib/des.js","./node_modules/des.js/lib/des/utils.js","./node_modules/des.js/lib/des/cipher.js","./node_modules/des.js/node_modules/minimalistic-assert/index.js","./node_modules/des.js/lib/des/des.js","./node_modules/des.js/lib/des/cbc.js","./node_modules/des.js/lib/des/ede.js","./node_modules/browserify-aes/browser.js","./node_modules/browserify-aes/encrypter.js","./node_modules/browserify-aes/modes/index.js","./node_modules/browserify-aes/modes/ecb.js","./node_modules/browserify-aes/modes/cbc.js","./node_modules/buffer-xor/index.js","./node_modules/browserify-aes/modes/cfb.js","./node_modules/browserify-aes/modes/cfb8.js","./node_modules/browserify-aes/modes/cfb1.js","./node_modules/browserify-aes/modes/ofb.js","./node_modules/browserify-aes/modes/ctr.js","./node_modules/browserify-aes/incr32.js","./node_modules/browserify-aes/modes/list.json","./node_modules/browserify-aes/authCipher.js","./node_modules/browserify-aes/aes.js","./node_modules/browserify-aes/ghash.js","./node_modules/browserify-aes/streamCipher.js","./node_modules/evp_bytestokey/index.js","./node_modules/browserify-aes/decrypter.js","./node_modules/browserify-des/modes.js","./node_modules/diffie-hellman/browser.js","./node_modules/diffie-hellman/lib/generatePrime.js","./node_modules/bn.js/lib/bn.js","./node_modules/miller-rabin/lib/mr.js","./node_modules/brorand/index.js","./node_modules/diffie-hellman/lib/primes.json","./node_modules/diffie-hellman/lib/dh.js","./node_modules/browserify-sign/browser/index.js","./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js","./node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js","./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js","./node_modules/browserify-sign/browser/sign.js","./node_modules/browserify-rsa/index.js","./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js","./node_modules/elliptic/lib/elliptic.js","./node_modules/elliptic/package.json","./node_modules/elliptic/lib/elliptic/utils.js","./node_modules/elliptic/node_modules/minimalistic-assert/index.js","./node_modules/elliptic/node_modules/minimalistic-crypto-utils/lib/utils.js","./node_modules/elliptic/lib/elliptic/curve/index.js","./node_modules/elliptic/lib/elliptic/curve/base.js","./node_modules/elliptic/lib/elliptic/curve/short.js","./node_modules/elliptic/lib/elliptic/curve/mont.js","./node_modules/elliptic/lib/elliptic/curve/edwards.js","./node_modules/elliptic/lib/elliptic/curves.js","./node_modules/hash.js/lib/hash.js","./node_modules/hash.js/lib/hash/utils.js","./node_modules/hash.js/node_modules/minimalistic-assert/index.js","./node_modules/hash.js/lib/hash/common.js","./node_modules/hash.js/lib/hash/sha.js","./node_modules/hash.js/lib/hash/sha/1.js","./node_modules/hash.js/lib/hash/sha/common.js","./node_modules/hash.js/lib/hash/sha/224.js","./node_modules/hash.js/lib/hash/sha/256.js","./node_modules/hash.js/lib/hash/sha/384.js","./node_modules/hash.js/lib/hash/sha/512.js","./node_modules/hash.js/lib/hash/ripemd.js","./node_modules/hash.js/lib/hash/hmac.js","./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","./node_modules/elliptic/lib/elliptic/ec/index.js","./node_modules/hmac-drbg/lib/hmac-drbg.js","./node_modules/hmac-drbg/node_modules/minimalistic-crypto-utils/lib/utils.js","./node_modules/hmac-drbg/node_modules/minimalistic-assert/index.js","./node_modules/elliptic/lib/elliptic/ec/key.js","./node_modules/elliptic/lib/elliptic/ec/signature.js","./node_modules/elliptic/lib/elliptic/eddsa/index.js","./node_modules/elliptic/lib/elliptic/eddsa/key.js","./node_modules/elliptic/lib/elliptic/eddsa/signature.js","./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js","./node_modules/parse-asn1/index.js","./node_modules/parse-asn1/asn1.js","./node_modules/asn1.js/lib/asn1.js","./node_modules/asn1.js/lib/asn1/api.js","./node_modules/asn1.js/lib/asn1/encoders/index.js","./node_modules/asn1.js/lib/asn1/encoders/der.js","./node_modules/asn1.js/node_modules/safer-buffer/safer.js","./node_modules/asn1.js/lib/asn1/base/node.js","./node_modules/asn1.js/lib/asn1/base/reporter.js","./node_modules/asn1.js/lib/asn1/base/buffer.js","./node_modules/asn1.js/node_modules/minimalistic-assert/index.js","./node_modules/asn1.js/lib/asn1/constants/der.js","./node_modules/asn1.js/lib/asn1/encoders/pem.js","./node_modules/asn1.js/lib/asn1/decoders/index.js","./node_modules/asn1.js/lib/asn1/decoders/der.js","./node_modules/asn1.js/lib/asn1/decoders/pem.js","./node_modules/asn1.js/lib/asn1/base/index.js","./node_modules/asn1.js/lib/asn1/constants/index.js","./node_modules/parse-asn1/certificate.js","./node_modules/parse-asn1/aesid.json","./node_modules/parse-asn1/fixProc.js","./node_modules/browserify-sign/browser/curves.json","./node_modules/browserify-sign/browser/verify.js","./node_modules/create-ecdh/browser.js","./node_modules/public-encrypt/browser.js","./node_modules/public-encrypt/publicEncrypt.js","./node_modules/public-encrypt/mgf.js","./node_modules/public-encrypt/xor.js","./node_modules/public-encrypt/withPublic.js","./node_modules/public-encrypt/privateDecrypt.js","./node_modules/randomfill/browser.js","../../node_modules/nanoid/url-alphabet/index.cjs","../../node_modules/interface-datastore/src/utils.js","../../node_modules/ipfs-utils/src/temp-dir.browser.js","../../node_modules/interface-datastore/src/memory.js","../../node_modules/interface-datastore/src/adapter.js","../../node_modules/interface-datastore/src/errors.js","../../src/keychain/cms.js","../../node_modules/node-forge/lib/pkcs7.js","../../node_modules/node-forge/lib/pkcs7asn1.js","../../node_modules/node-forge/lib/x509.js","../../node_modules/node-forge/lib/mgf.js","../../node_modules/node-forge/lib/mgf1.js","../../node_modules/node-forge/lib/pss.js","../../src/keychain/util.js","../../src/metrics/index.js","../../node_modules/streaming-iterables/dist/index.js","../../src/metrics/old-peers.js","../../node_modules/hashlru/index.js","../../src/metrics/stats.js","../../node_modules/bignumber.js/bignumber.js","../../node_modules/moving-average/index.js","../../src/upgrader.js","../../node_modules/multistream-select/src/index.js","../../node_modules/multistream-select/src/select.js","../../node_modules/multistream-select/src/multistream.js","../../node_modules/multistream-select/src/handle.js","../../node_modules/multistream-select/src/constants.js","../../node_modules/multistream-select/src/ls.js","../../node_modules/libp2p-interfaces/src/connection/index.js","../../node_modules/libp2p-interfaces/src/connection/connection.js","../../node_modules/libp2p-interfaces/src/connection/status.js","../../node_modules/mutable-proxy/build/index.js","../../src/peer-store/index.js","../../src/peer-store/address-book.js","../../src/peer-store/book.js","../../src/peer-store/key-book.js","../../src/peer-store/metadata-book.js","../../src/peer-store/proto-book.js","../../src/pubsub-adapter.js","../../src/peer-store/persistent/index.js","../../src/peer-store/persistent/consts.js","../../src/peer-store/persistent/pb/address-book.js","../../src/peer-store/persistent/pb/proto-book.js","../../src/registrar.js","../../node_modules/libp2p-interfaces/src/topology/index.js","../../src/ping/index.js","../../node_modules/it-buffer/index.js","../../src/ping/constants.js","../../src/identify/index.js","../../src/identify/message.js","../../src/nat-manager.js","../../node_modules/es6-promisify/dist/promisify.js","../../node_modules/ipfs-utils/src/env.js","../../node_modules/is-electron/index.js","../../node_modules/p-retry/index.js","../../node_modules/retry/index.js","../../node_modules/retry/lib/retry.js","../../node_modules/retry/lib/retry_operation.js","../../node_modules/libp2p-utils/src/multiaddr/is-loopback.js","../../node_modules/is-loopback-addr/index.js","./node_modules/libp2p-websockets/src/index.js","./node_modules/it-ws/client.js","./node_modules/it-ws/web-socket.js","./node_modules/it-ws/duplex.js","./node_modules/it-ws/source.js","./node_modules/event-iterator/lib/dom.js","./node_modules/event-iterator/lib/event-iterator.js","./node_modules/it-ws/sink.js","./node_modules/it-ws/ready.js","./node_modules/it-ws/ws-url.js","./node_modules/iso-url/index.js","./node_modules/iso-url/src/url-browser.js","./node_modules/iso-url/src/relative.js","./node_modules/class-is/index.js","./node_modules/multiaddr-to-uri/index.js","./node_modules/multiaddr-to-uri/node_modules/multiaddr/src/index.js","./node_modules/multiaddr-to-uri/node_modules/multiaddr/src/codec.js","./node_modules/multiaddr-to-uri/node_modules/multiaddr/src/convert.js","./node_modules/multiaddr-to-uri/node_modules/multiaddr/src/ip.js","./node_modules/is-ip/index.js","./node_modules/ip-regex/index.js","./node_modules/multiaddr-to-uri/node_modules/uint8arrays/to-string.js","./node_modules/multiaddr-to-uri/node_modules/multibase/src/constants.js","./node_modules/@multiformats/base-x/src/index.js","./node_modules/multiaddr-to-uri/node_modules/multibase/src/base.js","./node_modules/multiaddr-to-uri/node_modules/multibase/src/util.js","./node_modules/web-encoding/src/lib.cjs","./node_modules/util/util.js","./node_modules/util/support/types.js","./node_modules/is-arguments/index.js","./node_modules/call-bind/callBound.js","./node_modules/get-intrinsic/index.js","./node_modules/has-symbols/index.js","./node_modules/has-symbols/shams.js","./node_modules/function-bind/index.js","./node_modules/function-bind/implementation.js","./node_modules/has/src/index.js","./node_modules/call-bind/index.js","./node_modules/is-generator-function/index.js","./node_modules/which-typed-array/index.js","./node_modules/foreach/index.js","./node_modules/available-typed-arrays/index.js","./node_modules/array-filter/index.js","./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","./node_modules/is-typed-array/index.js","./node_modules/util/support/isBufferBrowser.js","./node_modules/multiaddr-to-uri/node_modules/multibase/src/rfc4648.js","./node_modules/multiaddr-to-uri/node_modules/multiaddr/src/protocols-table.js","./node_modules/cids/src/index.js","./node_modules/cids/node_modules/multihashes/src/index.js","./node_modules/cids/node_modules/multibase/src/index.js","./node_modules/cids/node_modules/multibase/src/constants.js","./node_modules/cids/node_modules/multibase/src/base.js","./node_modules/cids/node_modules/multibase/src/util.js","./node_modules/cids/node_modules/multibase/src/rfc4648.js","./node_modules/cids/node_modules/varint/index.js","./node_modules/cids/node_modules/varint/encode.js","./node_modules/cids/node_modules/varint/decode.js","./node_modules/cids/node_modules/varint/length.js","./node_modules/cids/node_modules/multihashes/src/constants.js","./node_modules/cids/node_modules/uint8arrays/to-string.js","./node_modules/cids/node_modules/uint8arrays/from-string.js","./node_modules/cids/node_modules/uint8arrays/concat.js","./node_modules/cids/node_modules/multicodec/src/index.js","./node_modules/cids/node_modules/multicodec/src/util.js","./node_modules/cids/node_modules/multicodec/src/maps.js","./node_modules/cids/node_modules/multicodec/src/generated-table.js","./node_modules/cids/src/cid-util.js","./node_modules/cids/node_modules/uint8arrays/equals.js","./node_modules/multiaddr-to-uri/node_modules/multibase/src/index.js","./node_modules/multiaddr-to-uri/node_modules/varint/index.js","./node_modules/multiaddr-to-uri/node_modules/varint/encode.js","./node_modules/multiaddr-to-uri/node_modules/varint/decode.js","./node_modules/multiaddr-to-uri/node_modules/varint/length.js","./node_modules/multiaddr-to-uri/node_modules/uint8arrays/from-string.js","./node_modules/multiaddr-to-uri/node_modules/uint8arrays/concat.js","./node_modules/multiaddr-to-uri/node_modules/err-code/index.js","./node_modules/multiaddr-to-uri/node_modules/uint8arrays/equals.js","./node_modules/abortable-iterator/index.js","./node_modules/get-iterator/index.js","./node_modules/abortable-iterator/AbortError.js","./node_modules/libp2p-websockets/node_modules/p-defer/index.js","./node_modules/debug/src/browser.js","./node_modules/debug/src/common.js","./node_modules/ms/index.js","./node_modules/ipfs-utils/src/env.js","./node_modules/is-electron/index.js","./node_modules/libp2p-websockets/src/listener.browser.js","./node_modules/libp2p-websockets/src/socket-to-conn.js","./node_modules/libp2p-websockets/src/constants.js","./node_modules/libp2p-websockets/node_modules/libp2p-utils/src/ip-port-to-multiaddr.js","./node_modules/libp2p-websockets/node_modules/multiaddr/src/index.js","./node_modules/libp2p-websockets/node_modules/multiaddr/src/codec.js","./node_modules/libp2p-websockets/node_modules/multiaddr/src/convert.js","./node_modules/libp2p-websockets/node_modules/multiaddr/src/ip.js","./node_modules/libp2p-websockets/node_modules/uint8arrays/to-string.js","./node_modules/libp2p-websockets/node_modules/multibase/src/index.js","./node_modules/libp2p-websockets/node_modules/multibase/src/constants.js","./node_modules/libp2p-websockets/node_modules/multibase/src/base.js","./node_modules/libp2p-websockets/node_modules/multibase/src/util.js","./node_modules/libp2p-websockets/node_modules/multibase/src/rfc4648.js","./node_modules/libp2p-websockets/node_modules/multiaddr/src/protocols-table.js","./node_modules/libp2p-websockets/node_modules/varint/index.js","./node_modules/libp2p-websockets/node_modules/varint/encode.js","./node_modules/libp2p-websockets/node_modules/varint/decode.js","./node_modules/libp2p-websockets/node_modules/varint/length.js","./node_modules/libp2p-websockets/node_modules/uint8arrays/from-string.js","./node_modules/libp2p-websockets/node_modules/uint8arrays/concat.js","./node_modules/err-code/index.js","./node_modules/libp2p-websockets/node_modules/uint8arrays/equals.js","./node_modules/ip-address/dist/ip-address.js","./node_modules/ip-address/dist/lib/ipv4.js","./node_modules/ip-address/dist/lib/common.js","./node_modules/ip-address/dist/lib/v4/constants.js","./node_modules/ip-address/dist/lib/address-error.js","./node_modules/jsbn/index.js","./node_modules/ip-address/node_modules/sprintf-js/src/sprintf.js","./node_modules/ip-address/dist/lib/ipv6.js","./node_modules/ip-address/dist/lib/v6/constants.js","./node_modules/ip-address/dist/lib/v6/helpers.js","./node_modules/ip-address/dist/lib/v6/regular-expressions.js","./node_modules/p-timeout/index.js","./node_modules/libp2p-websockets/src/filters.js","./node_modules/libp2p-websockets/node_modules/mafmt/src/index.js","./node_modules/libp2p-webrtc-star/src/index.js","./node_modules/libp2p-webrtc-peer/index.js","./node_modules/get-browser-rtc/index.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/readable-browser.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/_stream_readable.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/stream-browser.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/destroy.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/state.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/errors-browser.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/_stream_duplex.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/_stream_writable.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/from-browser.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/_stream_transform.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/_stream_passthrough.js","./node_modules/libp2p-webrtc-peer/node_modules/readable-stream/lib/internal/streams/pipeline.js","./node_modules/queue-microtask/index.js","./node_modules/libp2p-webrtc-peer/node_modules/err-code/index.js","./node_modules/ipfs-utils/src/supports.js","./node_modules/libp2p-webrtc-star/node_modules/multiaddr/src/index.js","./node_modules/libp2p-webrtc-star/node_modules/multiaddr/src/codec.js","./node_modules/libp2p-webrtc-star/node_modules/multiaddr/src/convert.js","./node_modules/libp2p-webrtc-star/node_modules/multiaddr/src/ip.js","./node_modules/libp2p-webrtc-star/node_modules/uint8arrays/to-string.js","./node_modules/libp2p-webrtc-star/node_modules/multibase/src/index.js","./node_modules/libp2p-webrtc-star/node_modules/multibase/src/constants.js","./node_modules/libp2p-webrtc-star/node_modules/multibase/src/base.js","./node_modules/libp2p-webrtc-star/node_modules/multibase/src/util.js","./node_modules/libp2p-webrtc-star/node_modules/multibase/src/rfc4648.js","./node_modules/libp2p-webrtc-star/node_modules/multiaddr/src/protocols-table.js","./node_modules/libp2p-webrtc-star/node_modules/varint/index.js","./node_modules/libp2p-webrtc-star/node_modules/varint/encode.js","./node_modules/libp2p-webrtc-star/node_modules/varint/decode.js","./node_modules/libp2p-webrtc-star/node_modules/varint/length.js","./node_modules/libp2p-webrtc-star/node_modules/uint8arrays/from-string.js","./node_modules/libp2p-webrtc-star/node_modules/uint8arrays/concat.js","./node_modules/libp2p-webrtc-star/node_modules/uint8arrays/equals.js","./node_modules/libp2p-webrtc-star/node_modules/mafmt/src/index.js","./node_modules/libp2p-webrtc-star/node_modules/peer-id/src/index.js","./node_modules/libp2p-webrtc-star/node_modules/multihashes/src/index.js","./node_modules/libp2p-webrtc-star/node_modules/multihashes/node_modules/varint/index.js","./node_modules/libp2p-webrtc-star/node_modules/multihashes/node_modules/varint/encode.js","./node_modules/libp2p-webrtc-star/node_modules/multihashes/node_modules/varint/decode.js","./node_modules/libp2p-webrtc-star/node_modules/multihashes/node_modules/varint/length.js","./node_modules/libp2p-webrtc-star/node_modules/multihashes/src/constants.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/index.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/keys.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/minimal.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/index-minimal.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/writer.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/util/minimal.js","./node_modules/@protobufjs/aspromise/index.js","./node_modules/@protobufjs/base64/index.js","./node_modules/@protobufjs/eventemitter/index.js","./node_modules/@protobufjs/float/index.js","./node_modules/@protobufjs/inquire/index.js","./node_modules/@protobufjs/utf8/index.js","./node_modules/@protobufjs/pool/index.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/util/longbits.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/writer_buffer.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/reader.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/reader_buffer.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/rpc.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/rpc/service.js","./node_modules/libp2p-webrtc-star/node_modules/protobufjs/src/roots.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/asn1.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/forge.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/util.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/baseN.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/oids.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/pbe.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/aes.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/cipher.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/cipherModes.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/des.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/md.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/pbkdf2.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/hmac.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/pem.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/random.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/sha256.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/prng.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/rc2.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/rsa.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/jsbn.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/pkcs1.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/sha1.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/prime.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/importer.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/ciphers/aes-gcm.browser.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/webcrypto.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/rsa-class.js","./node_modules/libp2p-webrtc-star/node_modules/multihashing-async/src/sha.browser.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/sha512.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/ed25519.js","./node_modules/libp2p-webrtc-star/node_modules/node-forge/lib/asn1-validator.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/rsa-browser.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/random-bytes.js","./node_modules/iso-random-stream/src/random.browser.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/rsa-utils.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/util.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/jwk2pem.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/exporter.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/ed25519-class.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/ed25519.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/secp256k1-class.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/secp256k1.js","./node_modules/secp256k1/elliptic.js","./node_modules/secp256k1/lib/index.js","./node_modules/secp256k1/lib/elliptic.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/key-stretcher.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/hmac/index-browser.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/hmac/lengths.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/ecdh-browser.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-crypto/src/keys/validate-curve-type.js","./node_modules/libp2p-webrtc-star/node_modules/peer-id/src/proto.js","./node_modules/libp2p-webrtc-star/src/constants.js","./node_modules/libp2p-webrtc-star/src/listener.js","./node_modules/socket.io-client-next/build/index.js","./node_modules/socket.io-client-next/build/url.js","./node_modules/parseuri/index.js","./node_modules/socket.io-client-next/build/manager.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/index.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/socket.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transports/index.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/xmlhttprequest.js","./node_modules/has-cors/index.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/globalThis.browser.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transports/polling-xhr.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transports/polling.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transport.js","./node_modules/socket.io-client-next/node_modules/engine.io-parser/lib/index.js","./node_modules/socket.io-client-next/node_modules/engine.io-parser/lib/encodePacket.browser.js","./node_modules/socket.io-client-next/node_modules/engine.io-parser/lib/commons.js","./node_modules/socket.io-client-next/node_modules/engine.io-parser/lib/decodePacket.browser.js","./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","./node_modules/component-emitter/index.js","./node_modules/parseqs/index.js","./node_modules/yeast/index.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/util.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transports/polling-jsonp.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transports/websocket.js","./node_modules/socket.io-client-next/node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","./node_modules/socket.io-client-next/build/socket.js","./node_modules/socket.io-client-next/node_modules/socket.io-parser/dist/index.js","./node_modules/socket.io-client-next/node_modules/socket.io-parser/dist/binary.js","./node_modules/socket.io-client-next/node_modules/socket.io-parser/dist/is-binary.js","./node_modules/socket.io-client-next/build/on.js","./node_modules/backo2/index.js","./node_modules/libp2p-webrtc-star/node_modules/p-defer/index.js","./node_modules/libp2p-webrtc-star/src/socket-to-conn.js","./node_modules/libp2p-webrtc-star/node_modules/stream-to-it/index.js","./node_modules/libp2p-webrtc-star/node_modules/stream-to-it/source.js","./node_modules/libp2p-webrtc-star/node_modules/stream-to-it/sink.js","./node_modules/libp2p-webrtc-star/node_modules/stream-to-it/transform.js","./node_modules/libp2p-webrtc-star/node_modules/stream-to-it/duplex.js","./node_modules/libp2p-webrtc-star/node_modules/libp2p-utils/src/ip-port-to-multiaddr.js","./node_modules/libp2p-webrtc-star/src/utils.js","./node_modules/libp2p-noise/src/index.ts","./node_modules/libp2p-noise/src/noise.ts","./node_modules/bcrypto/lib/js/x25519.js","./node_modules/bcrypto/lib/js/ecdh.js","./node_modules/bcrypto/lib/internal/assert.js","./node_modules/bcrypto/lib/bn-browser.js","./node_modules/bcrypto/lib/js/bn.js","./node_modules/bcrypto/lib/internal/custom-browser.js","./node_modules/bcrypto/lib/js/elliptic.js","./node_modules/bcrypto/lib/random-browser.js","./node_modules/bcrypto/lib/js/random.js","./node_modules/bcrypto/lib/js/precomputed/ed25519.json","./node_modules/it-pb-rpc/src/index.js","./node_modules/is-buffer/index.js","./node_modules/it-handshake/src/index.js","./node_modules/it-reader/index.js","./node_modules/it-reader/node_modules/bl/BufferList.js","./node_modules/it-pushable/index.js","./node_modules/fast-fifo/index.js","./node_modules/fast-fifo/fixed-size.js","./node_modules/it-handshake/node_modules/p-defer/index.js","./node_modules/it-length-prefixed/src/index.js","./node_modules/it-length-prefixed/src/encode.js","./node_modules/it-length-prefixed/node_modules/bl/BufferList.js","./node_modules/it-length-prefixed/src/varint-encode.js","./node_modules/it-length-prefixed/node_modules/varint/index.js","./node_modules/it-length-prefixed/node_modules/varint/encode.js","./node_modules/it-length-prefixed/node_modules/varint/decode.js","./node_modules/it-length-prefixed/node_modules/varint/length.js","./node_modules/it-length-prefixed/src/decode.js","./node_modules/it-length-prefixed/src/varint-decode.js","./node_modules/it-length-prefixed/src/int32BE-encode.js","./node_modules/it-length-prefixed/src/int32BE-decode.js","./node_modules/it-pair/duplex.js","./node_modules/it-pair/index.js","./node_modules/it-buffer/index.js","./node_modules/bl/BufferList.js","./node_modules/it-pipe/index.js","./node_modules/libp2p-noise/src/handshake-xx.ts","./node_modules/libp2p-noise/src/handshakes/xx.ts","./node_modules/libp2p-noise/src/utils.ts","./node_modules/bcrypto/lib/hkdf-browser.js","./node_modules/bcrypto/lib/js/hkdf.js","./node_modules/bcrypto/lib/js/sha256.js","./node_modules/bcrypto/lib/internal/hmac.js","./node_modules/libp2p-noise/node_modules/peer-id/src/index.js","./node_modules/libp2p-noise/node_modules/multihashes/src/index.js","./node_modules/libp2p-noise/node_modules/multibase/src/index.js","./node_modules/libp2p-noise/node_modules/multibase/src/constants.js","./node_modules/libp2p-noise/node_modules/multibase/src/base.js","./node_modules/libp2p-noise/node_modules/multibase/src/util.js","./node_modules/libp2p-noise/node_modules/multibase/src/rfc4648.js","./node_modules/libp2p-noise/node_modules/varint/index.js","./node_modules/libp2p-noise/node_modules/varint/encode.js","./node_modules/libp2p-noise/node_modules/varint/decode.js","./node_modules/libp2p-noise/node_modules/varint/length.js","./node_modules/libp2p-noise/node_modules/multihashes/src/constants.js","./node_modules/libp2p-noise/node_modules/uint8arrays/to-string.js","./node_modules/libp2p-noise/node_modules/uint8arrays/from-string.js","./node_modules/libp2p-noise/node_modules/uint8arrays/concat.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/index.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/keys.js","./node_modules/libp2p-noise/node_modules/protobufjs/minimal.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/index-minimal.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/writer.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/util/minimal.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/util/longbits.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/writer_buffer.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/reader.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/reader_buffer.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/rpc.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/rpc/service.js","./node_modules/libp2p-noise/node_modules/protobufjs/src/roots.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/asn1.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/forge.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/util.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/baseN.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/oids.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/pbe.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/aes.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/cipher.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/cipherModes.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/des.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/md.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/pbkdf2.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/hmac.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/pem.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/random.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/sha256.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/prng.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/rc2.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/rsa.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/jsbn.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/pkcs1.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/sha1.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/prime.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/importer.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/ciphers/aes-gcm.browser.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/webcrypto.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/rsa-class.js","./node_modules/libp2p-noise/node_modules/multihashing-async/src/sha.browser.js","./node_modules/libp2p-noise/node_modules/uint8arrays/equals.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/sha512.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/ed25519.js","./node_modules/libp2p-noise/node_modules/node-forge/lib/asn1-validator.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/rsa-browser.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/random-bytes.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/rsa-utils.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/util.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/jwk2pem.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/exporter.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/ed25519-class.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/ed25519.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/secp256k1-class.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/secp256k1.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/key-stretcher.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/hmac/index-browser.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/hmac/lengths.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/ecdh-browser.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/keys/validate-curve-type.js","./node_modules/libp2p-noise/node_modules/peer-id/src/proto.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/index.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/aes/index.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/aes/ciphers-browser.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/aes/cipher-mode.js","./node_modules/libp2p-noise/node_modules/libp2p-crypto/src/pbkdf2.js","./node_modules/libp2p-noise/dist/src/proto/payload.js","./node_modules/libp2p-noise/src/proto/payload.js","./node_modules/libp2p-noise/src/handshakes/abstract-handshake.ts","./node_modules/bcrypto/lib/js/aead.js","./node_modules/bcrypto/lib/js/chacha20.js","./node_modules/bcrypto/lib/js/poly1305.js","./node_modules/libp2p-noise/src/logger.ts","./node_modules/libp2p-noise/dist/src/constants.js","./node_modules/libp2p-noise/src/constants.ts","./node_modules/libp2p-noise/src/encoder.ts","./node_modules/libp2p-noise/src/handshake-ik.ts","./node_modules/libp2p-noise/src/handshakes/ik.ts","./node_modules/libp2p-noise/src/errors.ts","./node_modules/libp2p-noise/src/handshake-xx-fallback.ts","./node_modules/libp2p-noise/src/crypto.ts","./node_modules/libp2p-noise/src/keycache.ts","./node_modules/libp2p-mplex/src/index.js","./node_modules/libp2p-mplex/src/mplex.js","./node_modules/libp2p-mplex/src/coder/index.js","./node_modules/libp2p-mplex/src/coder/encode.browser.js","./node_modules/libp2p-mplex/node_modules/varint/index.js","./node_modules/libp2p-mplex/node_modules/varint/encode.js","./node_modules/libp2p-mplex/node_modules/varint/decode.js","./node_modules/libp2p-mplex/node_modules/varint/length.js","./node_modules/libp2p-mplex/src/coder/decode.js","./node_modules/libp2p-mplex/src/restrict-size.js","./node_modules/libp2p-mplex/src/message-types.js","./node_modules/libp2p-mplex/src/stream.js","./node_modules/abort-controller/browser.js","./node_modules/libp2p-bootstrap/src/index.js","./node_modules/libp2p-bootstrap/node_modules/peer-id/src/index.js","./node_modules/libp2p-bootstrap/node_modules/multihashes/src/index.js","./node_modules/libp2p-bootstrap/node_modules/multibase/src/index.js","./node_modules/libp2p-bootstrap/node_modules/multibase/src/constants.js","./node_modules/libp2p-bootstrap/node_modules/multibase/src/base.js","./node_modules/libp2p-bootstrap/node_modules/multibase/src/util.js","./node_modules/libp2p-bootstrap/node_modules/multibase/src/rfc4648.js","./node_modules/libp2p-bootstrap/node_modules/multihashes/node_modules/varint/index.js","./node_modules/libp2p-bootstrap/node_modules/multihashes/node_modules/varint/encode.js","./node_modules/libp2p-bootstrap/node_modules/multihashes/node_modules/varint/decode.js","./node_modules/libp2p-bootstrap/node_modules/multihashes/node_modules/varint/length.js","./node_modules/libp2p-bootstrap/node_modules/multihashes/src/constants.js","./node_modules/libp2p-bootstrap/node_modules/uint8arrays/to-string.js","./node_modules/libp2p-bootstrap/node_modules/uint8arrays/from-string.js","./node_modules/libp2p-bootstrap/node_modules/uint8arrays/concat.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/index.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/keys.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/minimal.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/index-minimal.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/writer.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/util/minimal.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/util/longbits.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/writer_buffer.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/reader.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/reader_buffer.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/rpc.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/rpc/service.js","./node_modules/libp2p-bootstrap/node_modules/protobufjs/src/roots.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/asn1.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/forge.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/util.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/baseN.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/oids.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/pbe.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/aes.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/cipher.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/cipherModes.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/des.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/md.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/pbkdf2.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/hmac.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/pem.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/random.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/sha256.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/prng.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/rc2.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/rsa.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/jsbn.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/pkcs1.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/sha1.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/prime.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/importer.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/ciphers/aes-gcm.browser.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/webcrypto.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/rsa-class.js","./node_modules/libp2p-bootstrap/node_modules/multihashing-async/src/sha.browser.js","./node_modules/libp2p-bootstrap/node_modules/uint8arrays/equals.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/sha512.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/ed25519.js","./node_modules/libp2p-bootstrap/node_modules/node-forge/lib/asn1-validator.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/rsa-browser.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/random-bytes.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/rsa-utils.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/util.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/jwk2pem.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/exporter.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/ed25519-class.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/ed25519.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/secp256k1-class.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/secp256k1.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/key-stretcher.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/hmac/index-browser.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/hmac/lengths.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/ecdh-browser.js","./node_modules/libp2p-bootstrap/node_modules/libp2p-crypto/src/keys/validate-curve-type.js","./node_modules/libp2p-bootstrap/node_modules/peer-id/src/proto.js","./node_modules/libp2p-bootstrap/node_modules/multiaddr/src/index.js","./node_modules/libp2p-bootstrap/node_modules/multiaddr/src/codec.js","./node_modules/libp2p-bootstrap/node_modules/multiaddr/src/convert.js","./node_modules/libp2p-bootstrap/node_modules/multiaddr/src/ip.js","./node_modules/libp2p-bootstrap/node_modules/multiaddr/src/protocols-table.js","./node_modules/libp2p-bootstrap/node_modules/varint/index.js","./node_modules/libp2p-bootstrap/node_modules/varint/encode.js","./node_modules/libp2p-bootstrap/node_modules/varint/decode.js","./node_modules/libp2p-bootstrap/node_modules/varint/length.js","./node_modules/libp2p-bootstrap/node_modules/mafmt/src/index.js"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p'), {\n  error: debug('libp2p:err')\n})\nconst EventEmitter = require('events')\n\nconst errCode = require('err-code')\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\n\nconst PeerRouting = require('./peer-routing')\nconst ContentRouting = require('./content-routing')\nconst getPeer = require('./get-peer')\nconst { validate: validateConfig } = require('./config')\nconst { codes, messages } = require('./errors')\n\nconst AddressManager = require('./address-manager')\nconst ConnectionManager = require('./connection-manager')\nconst Circuit = require('./circuit/transport')\nconst Relay = require('./circuit')\nconst Dialer = require('./dialer')\nconst Keychain = require('./keychain')\nconst Metrics = require('./metrics')\nconst TransportManager = require('./transport-manager')\nconst Upgrader = require('./upgrader')\nconst PeerStore = require('./peer-store')\nconst PubsubAdapter = require('./pubsub-adapter')\nconst PersistentPeerStore = require('./peer-store/persistent')\nconst Registrar = require('./registrar')\nconst ping = require('./ping')\nconst IdentifyService = require('./identify')\nconst IDENTIFY_PROTOCOLS = IdentifyService.multicodecs\nconst NatManager = require('./nat-manager')\nconst { updateSelfPeerRecord } = require('./record/utils')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('libp2p-interfaces/src/transport/types').TransportFactory<any, any>} TransportFactory\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxerFactory} MuxerFactory\n * @typedef {import('libp2p-interfaces/src/content-routing/types')} ContentRoutingModule\n * @typedef {import('libp2p-interfaces/src/peer-discovery/types')} PeerDiscoveryModule\n * @typedef {import('libp2p-interfaces/src/peer-routing/types')} PeerRoutingModule\n * @typedef {import('libp2p-interfaces/src/crypto/types').Crypto} Crypto\n * @typedef {import('libp2p-interfaces/src/pubsub')} Pubsub\n * @typedef {import('libp2p-interfaces/src/pubsub').PubsubOptions} PubsubOptions\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./pnet')} Protector\n */\n\n/**\n * @typedef {Object} HandlerProps\n * @property {Connection} connection\n * @property {MuxedStream} stream\n * @property {string} protocol\n *\n * @typedef {Object} RandomWalkOptions\n * @property {boolean} [enabled = false]\n * @property {number} [queriesPerPeriod = 1]\n * @property {number} [interval = 300e3]\n * @property {number} [timeout = 10e3]\n *\n * @typedef {Object} DhtOptions\n * @property {boolean} [enabled = false]\n * @property {number} [kBucketSize = 20]\n * @property {RandomWalkOptions} [randomWalk]\n *\n * @typedef {Object} KeychainOptions\n * @property {Datastore} [datastore]\n *\n * @typedef {Object} PeerStoreOptions\n * @property {boolean} persistence\n *\n * @typedef {Object} PubsubLocalOptions\n * @property {boolean} enabled\n *\n * @typedef {Object} MetricsOptions\n * @property {boolean} enabled\n *\n * @typedef {Object} RelayOptions\n * @property {boolean} [enabled = true]\n * @property {import('./circuit').RelayAdvertiseOptions} [advertise]\n * @property {import('./circuit').HopOptions} [hop]\n * @property {import('./circuit').AutoRelayOptions} [autoRelay]\n *\n * @typedef {Object} Libp2pConfig\n * @property {DhtOptions} [dht] dht module options\n * @property {import('./nat-manager').NatManagerOptions} [nat]\n * @property {Record<string, Object|boolean>} [peerDiscovery]\n * @property {PubsubLocalOptions & PubsubOptions} [pubsub] pubsub module options\n * @property {RelayOptions} [relay]\n * @property {Record<string, Object>} [transport] transport options indexed by transport key\n *\n * @typedef {Object} Libp2pModules\n * @property {TransportFactory[]} transport\n * @property {MuxerFactory[]} streamMuxer\n * @property {Crypto[]} connEncryption\n * @property {PeerDiscoveryModule[]} [peerDiscovery]\n * @property {PeerRoutingModule[]} [peerRouting]\n * @property {ContentRoutingModule[]} [contentRouting]\n * @property {Object} [dht]\n * @property {Pubsub} [pubsub]\n * @property {Protector} [connProtector]\n *\n * @typedef {Object} Libp2pOptions\n * @property {Libp2pModules} modules libp2p modules to use\n * @property {import('./address-manager').AddressManagerOptions} [addresses]\n * @property {import('./connection-manager').ConnectionManagerOptions} [connectionManager]\n * @property {Datastore} [datastore]\n * @property {import('./dialer').DialerOptions} [dialer]\n * @property {import('./identify/index').HostProperties} [host] libp2p host\n * @property {KeychainOptions & import('./keychain/index').KeychainOptions} [keychain]\n * @property {MetricsOptions & import('./metrics').MetricsOptions} [metrics]\n * @property {import('./peer-routing').PeerRoutingOptions} [peerRouting]\n * @property {PeerStoreOptions & import('./peer-store/persistent').PersistentPeerStoreOptions} [peerStore]\n * @property {import('./transport-manager').TransportManagerOptions} [transportManager]\n * @property {Libp2pConfig} [config]\n *\n * @typedef {Object} constructorOptions\n * @property {PeerId} peerId\n *\n * @typedef {Object} CreateOptions\n * @property {PeerId} [peerId]\n *\n * @extends {EventEmitter}\n * @fires Libp2p#error Emitted when an error occurs\n * @fires Libp2p#peer:discovery Emitted when a peer is discovered\n */\nclass Libp2p extends EventEmitter {\n  /**\n   * Like `new Libp2p(options)` except it will create a `PeerId`\n   * instance if one is not provided in options.\n   *\n   * @param {Libp2pOptions & CreateOptions} options - Libp2p configuration options\n   * @returns {Promise<Libp2p>}\n   */\n  static async create (options) {\n    if (options.peerId) {\n      // @ts-ignore 'Libp2pOptions & CreateOptions' is not assignable to 'Libp2pOptions & constructorOptions'\n      return new Libp2p(options)\n    }\n\n    const peerId = await PeerId.create()\n\n    options.peerId = peerId\n    // @ts-ignore 'Libp2pOptions & CreateOptions' is not assignable to 'Libp2pOptions & constructorOptions'\n    return new Libp2p(options)\n  }\n\n  /**\n   * Libp2p node.\n   *\n   * @class\n   * @param {Libp2pOptions & constructorOptions} _options\n   */\n  constructor (_options) {\n    super()\n    // validateConfig will ensure the config is correct,\n    // and add default values where appropriate\n    this._options = validateConfig(_options)\n\n    /** @type {PeerId} */\n    this.peerId = this._options.peerId\n    this.datastore = this._options.datastore\n\n    this.peerStore = (this.datastore && this._options.peerStore.persistence)\n      ? new PersistentPeerStore({\n        peerId: this.peerId,\n        datastore: this.datastore,\n        ...this._options.peerStore\n      })\n      : new PeerStore({ peerId: this.peerId })\n\n    // Addresses {listen, announce, noAnnounce}\n    this.addresses = this._options.addresses\n    this.addressManager = new AddressManager(this.peerId, this._options.addresses)\n\n    // when addresses change, update our peer record\n    this.addressManager.on('change:addresses', () => {\n      updateSelfPeerRecord(this).catch(err => {\n        log.error('Error updating self peer record', err)\n      })\n    })\n\n    this._modules = this._options.modules\n    this._config = this._options.config\n    this._transport = [] // Transport instances/references\n    this._discovery = new Map() // Discovery service instances/references\n\n    // Create the Connection Manager\n    this.connectionManager = new ConnectionManager(this, {\n      autoDial: this._config.peerDiscovery.autoDial,\n      ...this._options.connectionManager\n    })\n\n    // Create Metrics\n    if (this._options.metrics.enabled) {\n      this.metrics = new Metrics({\n        ...this._options.metrics,\n        connectionManager: this.connectionManager\n      })\n    }\n\n    // Create keychain\n    if (this._options.keychain && this._options.keychain.datastore) {\n      log('creating keychain')\n\n      const keychainOpts = Keychain.generateOptions()\n\n      this.keychain = new Keychain(this._options.keychain.datastore, {\n        ...keychainOpts,\n        ...this._options.keychain\n      })\n\n      log('keychain constructed')\n    }\n\n    // Setup the Upgrader\n    this.upgrader = new Upgrader({\n      localPeer: this.peerId,\n      metrics: this.metrics,\n      onConnection: (connection) => this.connectionManager.onConnect(connection),\n      onConnectionEnd: (connection) => this.connectionManager.onDisconnect(connection)\n    })\n\n    // Setup the transport manager\n    this.transportManager = new TransportManager({\n      libp2p: this,\n      upgrader: this.upgrader,\n      faultTolerance: this._options.transportManager.faultTolerance\n    })\n\n    // Create the Nat Manager\n    this.natManager = new NatManager({\n      peerId: this.peerId,\n      addressManager: this.addressManager,\n      transportManager: this.transportManager,\n      // @ts-ignore Nat typedef is not understood as Object\n      ...this._options.config.nat\n    })\n\n    // Create the Registrar\n    this.registrar = new Registrar({\n      peerStore: this.peerStore,\n      connectionManager: this.connectionManager\n    })\n\n    this.handle = this.handle.bind(this)\n    this.registrar.handle = this.handle\n\n    // Attach crypto channels\n    if (!this._modules.connEncryption || !this._modules.connEncryption.length) {\n      throw errCode(new Error(messages.CONN_ENCRYPTION_REQUIRED), codes.CONN_ENCRYPTION_REQUIRED)\n    }\n    const cryptos = this._modules.connEncryption\n    cryptos.forEach((crypto) => {\n      this.upgrader.cryptos.set(crypto.protocol, crypto)\n    })\n\n    this.dialer = new Dialer({\n      transportManager: this.transportManager,\n      peerStore: this.peerStore,\n      ...this._options.dialer\n    })\n\n    this._modules.transport.forEach((Transport) => {\n      const key = Transport.prototype[Symbol.toStringTag]\n      const transportOptions = this._config.transport[key]\n      this.transportManager.add(key, Transport, transportOptions)\n    })\n\n    if (this._config.relay.enabled) {\n      // @ts-ignore Circuit prototype\n      this.transportManager.add(Circuit.prototype[Symbol.toStringTag], Circuit)\n      this.relay = new Relay(this)\n    }\n\n    // Attach stream multiplexers\n    if (this._modules.streamMuxer) {\n      const muxers = this._modules.streamMuxer\n      muxers.forEach((muxer) => {\n        this.upgrader.muxers.set(muxer.multicodec, muxer)\n      })\n\n      // Add the identify service since we can multiplex\n      this.identifyService = new IdentifyService({ libp2p: this })\n      this.handle(Object.values(IDENTIFY_PROTOCOLS), this.identifyService.handleMessage)\n    }\n\n    // Attach private network protector\n    if (this._modules.connProtector) {\n      this.upgrader.protector = this._modules.connProtector\n    } else if (globalThis.process !== undefined && globalThis.process.env && globalThis.process.env.LIBP2P_FORCE_PNET) { // eslint-disable-line no-undef\n      throw new Error('Private network is enforced, but no protector was provided')\n    }\n\n    // dht provided components (peerRouting, contentRouting, dht)\n    if (this._modules.dht) {\n      const DHT = this._modules.dht\n      // @ts-ignore Object is not constructable\n      this._dht = new DHT({\n        libp2p: this,\n        dialer: this.dialer,\n        peerId: this.peerId,\n        peerStore: this.peerStore,\n        registrar: this.registrar,\n        datastore: this.datastore,\n        ...this._config.dht\n      })\n    }\n\n    // Create pubsub if provided\n    if (this._modules.pubsub) {\n      const Pubsub = this._modules.pubsub\n      // using pubsub adapter with *DEPRECATED* handlers functionality\n      /** @type {Pubsub} */\n      this.pubsub = PubsubAdapter(Pubsub, this, this._config.pubsub)\n    }\n\n    // Attach remaining APIs\n    // peer and content routing will automatically get modules from _modules and _dht\n    this.peerRouting = new PeerRouting(this)\n    this.contentRouting = new ContentRouting(this)\n\n    // Mount default protocols\n    ping.mount(this)\n\n    this._onDiscoveryPeer = this._onDiscoveryPeer.bind(this)\n  }\n\n  /**\n   * Overrides EventEmitter.emit to conditionally emit errors\n   * if there is a handler. If not, errors will be logged.\n   *\n   * @param {string} eventName\n   * @param  {...any} args\n   * @returns {boolean}\n   */\n  emit (eventName, ...args) {\n    // TODO: do we still need this?\n    // @ts-ignore _events does not exist in libp2p\n    if (eventName === 'error' && !this._events.error) {\n      log.error(args)\n      return false\n    } else {\n      return super.emit(eventName, ...args)\n    }\n  }\n\n  /**\n   * Starts the libp2p node and all its subsystems\n   *\n   * @returns {Promise<void>}\n   */\n  async start () {\n    log('libp2p is starting')\n\n    try {\n      await this._onStarting()\n      await this._onDidStart()\n      log('libp2p has started')\n    } catch (err) {\n      this.emit('error', err)\n      log.error('An error occurred starting libp2p', err)\n      await this.stop()\n      throw err\n    }\n  }\n\n  /**\n   * Stop the libp2p node by closing its listeners and open connections\n   *\n   * @async\n   * @returns {Promise<void>}\n   */\n  async stop () {\n    log('libp2p is stopping')\n\n    try {\n      this._isStarted = false\n\n      this.relay && this.relay.stop()\n      this.peerRouting.stop()\n\n      for (const service of this._discovery.values()) {\n        service.removeListener('peer', this._onDiscoveryPeer)\n      }\n\n      await Promise.all(Array.from(this._discovery.values(), s => s.stop()))\n\n      this._discovery = new Map()\n\n      await this.peerStore.stop()\n      await this.connectionManager.stop()\n\n      await Promise.all([\n        this.pubsub && this.pubsub.stop(),\n        this._dht && this._dht.stop(),\n        this.metrics && this.metrics.stop()\n      ])\n\n      await this.natManager.stop()\n      await this.transportManager.close()\n\n      ping.unmount(this)\n      this.dialer.destroy()\n    } catch (err) {\n      if (err) {\n        log.error(err)\n        this.emit('error', err)\n      }\n    }\n    log('libp2p has stopped')\n  }\n\n  /**\n   * Load keychain keys from the datastore.\n   * Imports the private key as 'self', if needed.\n   *\n   * @async\n   * @returns {Promise<void>}\n   */\n  async loadKeychain () {\n    if (!this.keychain) {\n      return\n    }\n\n    try {\n      await this.keychain.findKeyByName('self')\n    } catch (err) {\n      await this.keychain.importPeer('self', this.peerId)\n    }\n  }\n\n  isStarted () {\n    return this._isStarted\n  }\n\n  /**\n   * Gets a Map of the current connections. The keys are the stringified\n   * `PeerId` of the peer. The value is an array of Connections to that peer.\n   *\n   * @returns {Map<string, Connection[]>}\n   */\n  get connections () {\n    return this.connectionManager.connections\n  }\n\n  /**\n   * Dials to the provided peer. If successful, the known metadata of the\n   * peer will be added to the nodes `peerStore`\n   *\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Connection>}\n   */\n  dial (peer, options) {\n    return this._dial(peer, options)\n  }\n\n  /**\n   * Dials to the provided peer and handshakes with the given protocol.\n   * If successful, the known metadata of the peer will be added to the nodes `peerStore`,\n   * and the `Connection` will be returned\n   *\n   * @async\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {string[]|string} protocols\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Connection|{ stream: MuxedStream; protocol: string; }>}\n   */\n  async dialProtocol (peer, protocols, options) {\n    const connection = await this._dial(peer, options)\n\n    // If a protocol was provided, create a new stream\n    if (protocols && protocols.length) {\n      return connection.newStream(protocols)\n    }\n\n    return connection\n  }\n\n  /**\n   * @async\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {object} [options]\n   * @returns {Promise<Connection>}\n   */\n  async _dial (peer, options) {\n    const { id, multiaddrs } = getPeer(peer)\n\n    if (id.equals(this.peerId)) {\n      throw errCode(new Error('Cannot dial self'), codes.ERR_DIALED_SELF)\n    }\n\n    let connection = this.connectionManager.get(id)\n\n    if (!connection) {\n      connection = await this.dialer.connectToPeer(peer, options)\n    } else if (multiaddrs) {\n      this.peerStore.addressBook.add(id, multiaddrs)\n    }\n\n    return connection\n  }\n\n  /**\n   * Get a deduplicated list of peer advertising multiaddrs by concatenating\n   * the listen addresses used by transports with any configured\n   * announce addresses as well as observed addresses reported by peers.\n   *\n   * If Announce addrs are specified, configured listen addresses will be\n   * ignored though observed addresses will still be included.\n   *\n   * @returns {Multiaddr[]}\n   */\n  get multiaddrs () {\n    let addrs = this.addressManager.getAnnounceAddrs().map(ma => ma.toString())\n\n    if (!addrs.length) {\n      // no configured announce addrs, add configured listen addresses\n      addrs = this.transportManager.getAddrs().map(ma => ma.toString())\n    }\n\n    addrs = addrs.concat(this.addressManager.getObservedAddrs().map(ma => ma.toString()))\n\n    const announceFilter = this._options.addresses.announceFilter\n\n    // dedupe multiaddrs\n    const addrSet = new Set(addrs)\n\n    // Create advertising list\n    return announceFilter(Array.from(addrSet).map(str => new Multiaddr(str)))\n  }\n\n  /**\n   * Disconnects all connections to the given `peer`\n   *\n   * @param {PeerId|Multiaddr|string} peer - the peer to close connections to\n   * @returns {Promise<void>}\n   */\n  async hangUp (peer) {\n    const { id } = getPeer(peer)\n\n    const connections = this.connectionManager.connections.get(id.toB58String())\n\n    if (!connections) {\n      return\n    }\n\n    await Promise.all(\n      connections.map(connection => {\n        return connection.close()\n      })\n    )\n  }\n\n  /**\n   * Pings the given peer in order to obtain the operation latency.\n   *\n   * @param {PeerId|Multiaddr|string} peer - The peer to ping\n   * @returns {Promise<number>}\n   */\n  ping (peer) {\n    const { id, multiaddrs } = getPeer(peer)\n\n    // If received multiaddr, ping it\n    if (multiaddrs) {\n      return ping(this, multiaddrs[0])\n    }\n\n    return ping(this, id)\n  }\n\n  /**\n   * Registers the `handler` for each protocol\n   *\n   * @param {string[]|string} protocols\n   * @param {(props: HandlerProps) => void} handler\n   */\n  handle (protocols, handler) {\n    protocols = Array.isArray(protocols) ? protocols : [protocols]\n    protocols.forEach(protocol => {\n      this.upgrader.protocols.set(protocol, handler)\n    })\n\n    // Add new protocols to self protocols in the Protobook\n    this.peerStore.protoBook.add(this.peerId, protocols)\n  }\n\n  /**\n   * Removes the handler for each protocol. The protocol\n   * will no longer be supported on streams.\n   *\n   * @param {string[]|string} protocols\n   */\n  unhandle (protocols) {\n    protocols = Array.isArray(protocols) ? protocols : [protocols]\n    protocols.forEach(protocol => {\n      this.upgrader.protocols.delete(protocol)\n    })\n\n    // Remove protocols from self protocols in the Protobook\n    this.peerStore.protoBook.remove(this.peerId, protocols)\n  }\n\n  async _onStarting () {\n    // Listen on the provided transports for the provided addresses\n    const addrs = this.addressManager.getListenAddrs()\n    await this.transportManager.listen(addrs)\n\n    // Manage your NATs\n    this.natManager.start()\n\n    // Start PeerStore\n    await this.peerStore.start()\n\n    if (this._config.pubsub.enabled) {\n      this.pubsub && this.pubsub.start()\n    }\n\n    // DHT subsystem\n    if (this._config.dht.enabled) {\n      this._dht && this._dht.start()\n\n      // TODO: this should be modified once random-walk is used as\n      // the other discovery modules\n      this._dht.on('peer', this._onDiscoveryPeer)\n    }\n\n    // Start metrics if present\n    this.metrics && this.metrics.start()\n  }\n\n  /**\n   * Called when libp2p has started and before it returns\n   *\n   * @private\n   */\n  async _onDidStart () {\n    this._isStarted = true\n\n    this.peerStore.on('peer', peerId => {\n      this.emit('peer:discovery', peerId)\n      this._maybeConnect(peerId)\n    })\n\n    // Once we start, emit any peers we may have already discovered\n    // TODO: this should be removed, as we already discovered these peers in the past\n    for (const peer of this.peerStore.peers.values()) {\n      this.emit('peer:discovery', peer.id)\n    }\n\n    this.connectionManager.start()\n\n    // Peer discovery\n    await this._setupPeerDiscovery()\n\n    // Relay\n    this.relay && this.relay.start()\n\n    this.peerRouting.start()\n  }\n\n  /**\n   * Called whenever peer discovery services emit `peer` events.\n   * Known peers may be emitted.\n   *\n   * @private\n   * @param {{ id: PeerId, multiaddrs: Multiaddr[], protocols: string[] }} peer\n   */\n  _onDiscoveryPeer (peer) {\n    if (peer.id.toB58String() === this.peerId.toB58String()) {\n      log.error(new Error(codes.ERR_DISCOVERED_SELF))\n      return\n    }\n\n    peer.multiaddrs && this.peerStore.addressBook.add(peer.id, peer.multiaddrs)\n    peer.protocols && this.peerStore.protoBook.set(peer.id, peer.protocols)\n  }\n\n  /**\n   * Will dial to the given `peerId` if the current number of\n   * connected peers is less than the configured `ConnectionManager`\n   * minConnections.\n   *\n   * @private\n   * @param {PeerId} peerId\n   */\n  async _maybeConnect (peerId) {\n    // If auto dialing is on and we have no connection to the peer, check if we should dial\n    if (this._config.peerDiscovery.autoDial === true && !this.connectionManager.get(peerId)) {\n      const minConnections = this._options.connectionManager.minConnections || 0\n      if (minConnections > this.connectionManager.size) {\n        log('connecting to discovered peer %s', peerId.toB58String())\n        try {\n          await this.dialer.connectToPeer(peerId)\n        } catch (err) {\n          log.error('could not connect to discovered peer', err)\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes and starts peer discovery services\n   *\n   * @async\n   * @private\n   */\n  async _setupPeerDiscovery () {\n    /**\n     * @param {PeerDiscoveryModule} DiscoveryService\n     */\n    const setupService = (DiscoveryService) => {\n      let config = {\n        enabled: true // on by default\n      }\n\n      if (DiscoveryService.tag &&\n        this._config.peerDiscovery &&\n        this._config.peerDiscovery[DiscoveryService.tag]) {\n        // @ts-ignore PeerDiscovery not understood as an Object for spread\n        config = { ...config, ...this._config.peerDiscovery[DiscoveryService.tag] }\n      }\n\n      if (config.enabled &&\n        !this._discovery.has(DiscoveryService.tag)) { // not already added\n        let discoveryService\n\n        if (typeof DiscoveryService === 'function') {\n          // @ts-ignore DiscoveryService has no constructor type inferred\n          discoveryService = new DiscoveryService(Object.assign({}, config, {\n            peerId: this.peerId,\n            libp2p: this\n          }))\n        } else {\n          discoveryService = DiscoveryService\n        }\n\n        discoveryService.on('peer', this._onDiscoveryPeer)\n        this._discovery.set(DiscoveryService.tag, discoveryService)\n      }\n    }\n\n    // Discovery modules\n    for (const DiscoveryService of this._modules.peerDiscovery || []) {\n      setupService(DiscoveryService)\n    }\n\n    // Transport modules with discovery\n    for (const Transport of this.transportManager.getTransports()) {\n      // @ts-ignore Transport interface does not include discovery\n      if (Transport.discovery) {\n        // @ts-ignore Transport interface does not include discovery\n        setupService(Transport.discovery)\n      }\n    }\n\n    await Promise.all(Array.from(this._discovery.values(), d => d.start()))\n  }\n}\n\nmodule.exports = Libp2p\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n",null,"\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n",null,"'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","/*\n * Id is an object representation of a peer Id. a peer Id is a multihash\n */\n\n'use strict'\n\nconst mh = require('multihashes')\nconst CID = require('cids')\nconst cryptoKeys = require('libp2p-crypto/src/keys')\nconst withIs = require('class-is')\nconst { PeerIdProto } = require('./proto')\nconst uint8ArrayEquals = require('uint8arrays/equals')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nclass PeerId {\n  constructor (id, privKey, pubKey) {\n    if (!(id instanceof Uint8Array)) {\n      throw new Error('invalid id provided')\n    }\n\n    if (privKey && pubKey && !uint8ArrayEquals(privKey.public.bytes, pubKey.bytes)) {\n      throw new Error('inconsistent arguments')\n    }\n\n    this._id = id\n    this._idB58String = mh.toB58String(this.id)\n    this._privKey = privKey\n    this._pubKey = pubKey\n  }\n\n  get id () {\n    return this._id\n  }\n\n  set id (val) {\n    throw new Error('Id is immutable')\n  }\n\n  get privKey () {\n    return this._privKey\n  }\n\n  set privKey (privKey) {\n    this._privKey = privKey\n  }\n\n  get pubKey () {\n    if (this._pubKey) {\n      return this._pubKey\n    }\n\n    if (this._privKey) {\n      return this._privKey.public\n    }\n\n    try {\n      const decoded = mh.decode(this.id)\n\n      if (decoded.name === 'identity') {\n        this._pubKey = cryptoKeys.unmarshalPublicKey(decoded.digest)\n      }\n    } catch (_) {\n      // Ignore, there is no valid public key\n    }\n\n    return this._pubKey\n  }\n\n  set pubKey (pubKey) {\n    this._pubKey = pubKey\n  }\n\n  // Return the protobuf version of the public key, matching go ipfs formatting\n  marshalPubKey () {\n    if (this.pubKey) {\n      return cryptoKeys.marshalPublicKey(this.pubKey)\n    }\n  }\n\n  // Return the protobuf version of the private key, matching go ipfs formatting\n  marshalPrivKey () {\n    if (this.privKey) {\n      return cryptoKeys.marshalPrivateKey(this.privKey)\n    }\n  }\n\n  // Return the protobuf version of the peer-id\n  marshal (excludePriv) {\n    return PeerIdProto.encode({\n      id: this.toBytes(),\n      pubKey: this.marshalPubKey(),\n      privKey: excludePriv ? null : this.marshalPrivKey()\n    }).finish()\n  }\n\n  toPrint () {\n    let pid = this.toB58String()\n    // All sha256 nodes start with Qm\n    // We can skip the Qm to make the peer.ID more useful\n    if (pid.startsWith('Qm')) {\n      pid = pid.slice(2)\n    }\n    let maxRunes = 6\n    if (pid.length < maxRunes) {\n      maxRunes = pid.length\n    }\n\n    return '<peer.ID ' + pid.substr(0, maxRunes) + '>'\n  }\n\n  // return the jsonified version of the key, matching the formatting\n  // of go-ipfs for its config file\n  toJSON () {\n    return {\n      id: this.toB58String(),\n      privKey: toB64Opt(this.marshalPrivKey()),\n      pubKey: toB64Opt(this.marshalPubKey())\n    }\n  }\n\n  // encode/decode functions\n  toHexString () {\n    return mh.toHexString(this.id)\n  }\n\n  toBytes () {\n    return this.id\n  }\n\n  toB58String () {\n    return this._idB58String\n  }\n\n  // return self-describing String representation\n  // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n  toString () {\n    if (!this._idCIDString) {\n      const cid = new CID(1, 'libp2p-key', this.id, 'base32')\n\n      Object.defineProperty(this, '_idCIDString', {\n        value: cid.toBaseEncodedString('base32'),\n        enumerable: false\n      })\n    }\n    return this._idCIDString\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId.\n   *\n   * @param {Uint8Array|PeerId} id\n   * @returns {boolean}\n   */\n  equals (id) {\n    if (id instanceof Uint8Array) {\n      return uint8ArrayEquals(this.id, id)\n    } else if (id.id) {\n      return uint8ArrayEquals(this.id, id.id)\n    } else {\n      throw new Error('not valid Id')\n    }\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId.\n   *\n   * @deprecated Use `.equals`\n   * @param {Uint8Array|PeerId} id\n   * @returns {boolean}\n   */\n  isEqual (id) {\n    return this.equals(id)\n  }\n\n  /*\n   * Check if this PeerId instance is valid (privKey -> pubKey -> Id)\n   */\n  isValid () {\n    // TODO: needs better checking\n    return Boolean(this.privKey &&\n      this.privKey.public &&\n      this.privKey.public.bytes &&\n      this.pubKey.bytes instanceof Uint8Array &&\n        uint8ArrayEquals(this.privKey.public.bytes, this.pubKey.bytes))\n  }\n\n  /**\n   * Check if the PeerId has an inline public key.\n   *\n   * @returns {boolean}\n   */\n  hasInlinePublicKey () {\n    try {\n      const decoded = mh.decode(this.id)\n      if (decoded.name === 'identity') {\n        return true\n      }\n    } catch (_) {\n      // Ignore, there is no valid public key\n    }\n\n    return false\n  }\n}\n\nconst PeerIdWithIs = withIs(PeerId, {\n  className: 'PeerId',\n  symbolName: '@libp2p/js-peer-id/PeerId'\n})\n\nexports = module.exports = PeerIdWithIs\n\nconst computeDigest = (pubKey) => {\n  if (pubKey.bytes.length <= 42) {\n    return mh.encode(pubKey.bytes, 'identity')\n  } else {\n    return pubKey.hash()\n  }\n}\n\nconst computePeerId = async (privKey, pubKey) => {\n  const digest = await computeDigest(pubKey)\n  return new PeerIdWithIs(digest, privKey, pubKey)\n}\n\n// generation\nexports.create = async (opts) => {\n  opts = opts || {}\n  opts.bits = opts.bits || 2048\n  opts.keyType = opts.keyType || 'RSA'\n\n  const key = await cryptoKeys.generateKeyPair(opts.keyType, opts.bits)\n  return computePeerId(key, key.public)\n}\n\nexports.createFromHexString = (str) => {\n  return new PeerIdWithIs(mh.fromHexString(str))\n}\n\nexports.createFromBytes = (buf) => {\n  return new PeerIdWithIs(buf)\n}\n\nexports.createFromB58String = (str) => {\n  return exports.createFromCID(str) // B58String is CIDv0\n}\n\nconst validMulticodec = (cid) => {\n  // supported: 'libp2p-key' (CIDv1) and 'dag-pb' (CIDv0 converted to CIDv1)\n  return cid.codec === 'libp2p-key' || cid.codec === 'dag-pb'\n}\n\nexports.createFromCID = (cid) => {\n  cid = CID.isCID(cid) ? cid : new CID(cid)\n  if (!validMulticodec(cid)) throw new Error('Supplied PeerID CID has invalid multicodec: ' + cid.codec)\n  return new PeerIdWithIs(cid.multihash)\n}\n\n// Public Key input will be a Uint8Array\nexports.createFromPubKey = async (key) => {\n  let buf = key\n\n  if (typeof buf === 'string') {\n    buf = uint8ArrayFromString(key, 'base64pad')\n  }\n\n  if (!(buf instanceof Uint8Array)) {\n    throw new Error('Supplied key is neither a base64 string nor a Uint8Array')\n  }\n\n  const pubKey = await cryptoKeys.unmarshalPublicKey(buf)\n  return computePeerId(null, pubKey)\n}\n\n// Private key input will be a string\nexports.createFromPrivKey = async (key) => {\n  if (typeof key === 'string') {\n    key = uint8ArrayFromString(key, 'base64pad')\n  }\n\n  if (!(key instanceof Uint8Array)) {\n    throw new Error('Supplied key is neither a base64 string nor a Uint8Array')\n  }\n\n  const privKey = await cryptoKeys.unmarshalPrivateKey(key)\n  return computePeerId(privKey, privKey.public)\n}\n\nexports.createFromJSON = async (obj) => {\n  const id = mh.fromB58String(obj.id)\n  const rawPrivKey = obj.privKey && uint8ArrayFromString(obj.privKey, 'base64pad')\n  const rawPubKey = obj.pubKey && uint8ArrayFromString(obj.pubKey, 'base64pad')\n  const pub = rawPubKey && await cryptoKeys.unmarshalPublicKey(rawPubKey)\n\n  if (!rawPrivKey) {\n    return new PeerIdWithIs(id, null, pub)\n  }\n\n  const privKey = await cryptoKeys.unmarshalPrivateKey(rawPrivKey)\n  const privDigest = await computeDigest(privKey.public)\n\n  let pubDigest\n\n  if (pub) {\n    pubDigest = await computeDigest(pub)\n  }\n\n  if (pub && !uint8ArrayEquals(privDigest, pubDigest)) {\n    throw new Error('Public and private key do not match')\n  }\n\n  if (id && !uint8ArrayEquals(privDigest, id)) {\n    throw new Error('Id and private key do not match')\n  }\n\n  return new PeerIdWithIs(id, privKey, pub)\n}\n\nexports.createFromProtobuf = async (buf) => {\n  if (typeof buf === 'string') {\n    buf = uint8ArrayFromString(buf, 'base16')\n  }\n\n  let { id, privKey, pubKey } = PeerIdProto.decode(buf)\n\n  privKey = privKey ? await cryptoKeys.unmarshalPrivateKey(privKey) : false\n  pubKey = pubKey ? await cryptoKeys.unmarshalPublicKey(pubKey) : false\n\n  let pubDigest\n  let privDigest\n\n  if (privKey) {\n    privDigest = await computeDigest(privKey.public)\n  }\n\n  if (pubKey) {\n    pubDigest = await computeDigest(pubKey)\n  }\n\n  if (privKey) {\n    if (pubKey) {\n      if (!uint8ArrayEquals(privDigest, pubDigest)) {\n        throw new Error('Public and private key do not match')\n      }\n    }\n    return new PeerIdWithIs(privDigest, privKey, privKey.public)\n  }\n\n  // TODO: val id and pubDigest\n\n  if (pubKey) {\n    return new PeerIdWithIs(pubDigest, null, pubKey)\n  }\n\n  if (id) {\n    return new PeerIdWithIs(id)\n  }\n\n  throw new Error('Protobuf did not contain any usable key material')\n}\n\nexports.isPeerId = (peerId) => {\n  return Boolean(typeof peerId === 'object' &&\n    peerId._id &&\n    peerId._idB58String)\n}\n\nfunction toB64Opt (val) {\n  if (val) {\n    return uint8ArrayToString(val, 'base64pad')\n  }\n}\n","/**\n * Multihash implementation in JavaScript.\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\nObject.freeze(codes)\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes,\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nconst names = Object.freeze(constants.names)\nconst codes = Object.freeze(constants.codes)\nexports.names = names\nexports.codes = codes\n","'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n","'use strict'\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n","'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n","'use strict'\n\nconst { encoding: getCodec } = require('multibase')\nconst utf8Decoder = new TextDecoder('utf8')\n\n/**\n * @typedef {import('multibase/src/types').BaseName | 'utf8' | 'utf-8' | 'ascii' | undefined} SupportedEncodings\n */\n\n/**\n * Turns a Uint8Array of bytes into a string with each\n * character being the char code of the corresponding byte\n *\n * @param {Uint8Array} array - The array to turn into a string\n */\nfunction uint8ArrayToAsciiString (array) {\n  let string = ''\n\n  for (let i = 0; i < array.length; i++) {\n    string += String.fromCharCode(array[i])\n  }\n  return string\n}\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array - The array to turn into a string\n * @param {SupportedEncodings} [encoding=utf8] - The encoding to use\n * @returns {string}\n */\nfunction toString (array, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(array)\n  }\n\n  if (encoding === 'ascii') {\n    return uint8ArrayToAsciiString(array)\n  }\n\n  return getCodec(encoding).encode(array)\n}\n\nmodule.exports = toString\n","'use strict'\n\nconst { encoding: getCodec } = require('multibase')\nconst utf8Encoder = new TextEncoder()\n\n/**\n * @typedef {import('multibase/src/types').BaseName | 'utf8' | 'utf-8' | 'ascii' | undefined} SupportedEncodings\n */\n\n/**\n * Interprets each character in a string as a byte and\n * returns a Uint8Array of those bytes.\n *\n * @param {string} string - The string to turn into an array\n */\nfunction asciiStringToUint8Array (string) {\n  const array = new Uint8Array(string.length)\n\n  for (let i = 0; i < string.length; i++) {\n    array[i] = string.charCodeAt(i)\n  }\n\n  return array\n}\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {string} string\n * @param {SupportedEncodings} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\n * @returns {Uint8Array}\n */\nfunction fromString (string, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Encoder.encode(string)\n  }\n\n  if (encoding === 'ascii') {\n    return asciiStringToUint8Array(string)\n  }\n\n  return getCodec(encoding).decode(string)\n}\n\nmodule.exports = fromString\n","'use strict'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat (arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = concat\n","'use strict'\n\nconst mh = require('multihashes')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst CIDUtil = require('./cid-util')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\nconst codecs = multicodec.nameToCode\nconst codecInts = /** @type {CodecName[]} */(Object.keys(codecs)).reduce((p, name) => {\n  p[codecs[name]] = name\n  return p\n}, /** @type {Record<CodecCode, CodecName>} */({}))\n\nconst symbol = Symbol.for('@ipld/js-cid/CID')\n\n/**\n * @typedef {Object} SerializedCID\n * @property {string} codec\n * @property {number} version\n * @property {Uint8Array} hash\n */\n/**\n * @typedef {0|1} CIDVersion\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\n * @typedef {import('multicodec').CodecName} CodecName\n * @typedef {import('multicodec').CodecCode} CodecCode\n */\n\n/**\n * Class representing a CID `<mbase><version><mcodec><mhash>`\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\n *\n * @class CID\n */\nclass CID {\n  /**\n   * Create a new CID.\n   *\n   * The algorithm for argument input is roughly:\n   * ```\n   * if (cid)\n   *   -> create a copy\n   * else if (str)\n   *   if (1st char is on multibase table) -> CID String\n   *   else -> bs58 encoded multihash\n   * else if (Uint8Array)\n   *   if (1st byte is 0 or 1) -> CID\n   *   else -> multihash\n   * else if (Number)\n   *   -> construct CID by parts\n   * ```\n   *\n   * @param {CIDVersion | string | Uint8Array | CID} version\n   * @param {string|number} [codec]\n   * @param {Uint8Array} [multihash]\n   * @param {string} [multibaseName]\n   *\n   * @example\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\n   * new CID(<cidStr>)\n   * new CID(<cid.bytes>)\n   * new CID(<multihash>)\n   * new CID(<bs58 encoded multihash>)\n   * new CID(<cid>)\n   */\n  constructor (version, codec, multihash, multibaseName) {\n    // We have below three blank field accessors only because\n    // otherwise TS will not pick them up if done after assignemnts\n\n    /**\n     * The version of the CID.\n     *\n     * @type {CIDVersion}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.version\n\n    /**\n     * The codec of the CID.\n     *\n     * @deprecated\n     * @type {CodecName}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.codec\n\n    /**\n     * The multihash of the CID.\n     *\n     * @type {Uint8Array}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.multihash\n\n    Object.defineProperty(this, symbol, { value: true })\n    if (CID.isCID(version)) {\n      // version is an exising CID instance\n      const cid = /** @type {CID} */(version)\n      this.version = cid.version\n      this.codec = cid.codec\n      this.multihash = cid.multihash\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\n      // @ts-ignore\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\n      return\n    }\n\n    if (typeof version === 'string') {\n      // e.g. 'base32' or false\n      const baseName = multibase.isEncoded(version)\n      if (baseName) {\n        // version is a CID String encoded with multibase, so v1\n        const cid = multibase.decode(version)\n        this.version = /** @type {CIDVersion} */(parseInt(cid[0].toString(), 16))\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = baseName\n      } else {\n        // version is a base58btc string multihash, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = mh.fromB58String(version)\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      Object.defineProperty(this, 'string', { value: version })\n      return\n    }\n\n    if (version instanceof Uint8Array) {\n      const v = parseInt(version[0].toString(), 16)\n      if (v === 1) {\n        // version is a CID Uint8Array\n        const cid = version\n        this.version = v\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = 'base32'\n      } else {\n        // version is a raw multihash Uint8Array, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = version\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      return\n    }\n\n    // otherwise, assemble the CID from the parameters\n\n    this.version = version\n\n    if (typeof codec === 'number') {\n      // @ts-ignore\n      codec = codecInts[codec]\n    }\n\n    this.codec = /** @type {CodecName} */ (codec)\n\n    this.multihash = /** @type {Uint8Array} */ (multihash)\n\n    /**\n     * Multibase name as string.\n     *\n     * @deprecated\n     * @type {string}\n     */\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\n\n    CID.validateCID(this)\n  }\n\n  /**\n   * The CID as a `Uint8Array`\n   *\n   * @returns {Uint8Array}\n   *\n   */\n  get bytes () {\n    // @ts-ignore\n    let bytes = this._bytes\n\n    if (!bytes) {\n      if (this.version === 0) {\n        bytes = this.multihash\n      } else if (this.version === 1) {\n        const codec = multicodec.getCodeVarint(this.codec)\n        bytes = uint8ArrayConcat([\n          [1], codec, this.multihash\n        ], 1 + codec.byteLength + this.multihash.byteLength)\n      } else {\n        throw new Error('unsupported version')\n      }\n\n      // Cache this Uint8Array so it doesn't have to be recreated\n      Object.defineProperty(this, '_bytes', { value: bytes })\n    }\n\n    return bytes\n  }\n\n  /**\n   * The prefix of the CID.\n   *\n   * @returns {Uint8Array}\n   */\n  get prefix () {\n    const codec = multicodec.getCodeVarint(this.codec)\n    const multihash = mh.prefix(this.multihash)\n    const prefix = uint8ArrayConcat([\n      [this.version], codec, multihash\n    ], 1 + codec.byteLength + multihash.byteLength)\n\n    return prefix\n  }\n\n  /**\n   * The codec of the CID in its number form.\n   *\n   * @returns {CodecCode}\n   */\n  get code () {\n    return codecs[this.codec]\n  }\n\n  /**\n   * Convert to a CID of version `0`.\n   *\n   * @returns {CID}\n   */\n  toV0 () {\n    if (this.codec !== 'dag-pb') {\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n    }\n\n    const { name, length } = mh.decode(this.multihash)\n\n    if (name !== 'sha2-256') {\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n    }\n\n    if (length !== 32) {\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\n    }\n\n    return new CID(0, this.codec, this.multihash)\n  }\n\n  /**\n   * Convert to a CID of version `1`.\n   *\n   * @returns {CID}\n   */\n  toV1 () {\n    return new CID(1, this.codec, this.multihash)\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toBaseEncodedString (base = this.multibaseName) {\n    // @ts-ignore non enumerable cache property\n    if (this.string && this.string.length !== 0 && base === this.multibaseName) {\n      // @ts-ignore non enumerable cache property\n      return this.string\n    }\n    let str\n    if (this.version === 0) {\n      if (base !== 'base58btc') {\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\n      }\n      str = mh.toB58String(this.multihash)\n    } else if (this.version === 1) {\n      str = uint8ArrayToString(multibase.encode(base, this.bytes))\n    } else {\n      throw new Error('unsupported version')\n    }\n    if (base === this.multibaseName) {\n      // cache the string value\n      Object.defineProperty(this, 'string', { value: str })\n    }\n    return str\n  }\n\n  /**\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\n   *\n   * @returns {string}\n   */\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return 'CID(' + this.toString() + ')'\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toString (base) {\n    return this.toBaseEncodedString(base)\n  }\n\n  /**\n   * Serialize to a plain object.\n   *\n   * @returns {SerializedCID}\n   */\n  toJSON () {\n    return {\n      codec: this.codec,\n      version: this.version,\n      hash: this.multihash\n    }\n  }\n\n  /**\n   * Compare equality with another CID.\n   *\n   * @param {CID} other\n   * @returns {boolean}\n   */\n  equals (other) {\n    return this.codec === other.codec &&\n      this.version === other.version &&\n      uint8ArrayEquals(this.multihash, other.multihash)\n  }\n\n  /**\n   * Test if the given input is a valid CID object.\n   * Throws if it is not.\n   *\n   * @param {any} other - The other CID.\n   * @returns {void}\n   */\n  static validateCID (other) {\n    const errorMsg = CIDUtil.checkCIDComponents(other)\n    if (errorMsg) {\n      throw new Error(errorMsg)\n    }\n  }\n\n  /**\n   * Check if object is a CID instance\n   *\n   * @param {any} value\n   * @returns {value is CID}\n   */\n  static isCID (value) {\n    return value instanceof CID || Boolean(value && value[symbol])\n  }\n}\n\nCID.codecs = codecs\n\nmodule.exports = CID\n","/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').CodecCode} CodecCode */\n\nconst varint = require('varint')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst util = require('./util')\nconst { nameToVarint, constantToCode, nameToCode, codeToName } = require('./maps')\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {CodecName|Uint8Array} multicodecStrOrCode\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction addPrefix (multicodecStrOrCode, data) {\n  let prefix\n\n  if (multicodecStrOrCode instanceof Uint8Array) {\n    prefix = util.varintUint8ArrayEncode(multicodecStrOrCode)\n  } else {\n    if (nameToVarint[multicodecStrOrCode]) {\n      prefix = nameToVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n\n  return uint8ArrayConcat([prefix, data], prefix.length + data.length)\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction rmPrefix (data) {\n  varint.decode(/** @type {Buffer} */(data))\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec name of the prefixed data.\n *\n * @param {Uint8Array} prefixedData\n * @returns {CodecName}\n */\nfunction getNameFromData (prefixedData) {\n  const code = /** @type {CodecCode} */(varint.decode(/** @type {Buffer} */(prefixedData)))\n  const name = codeToName[code]\n  if (name === undefined) {\n    throw new Error(`Code \"${code}\" not found`)\n  }\n  return name\n}\n\n/**\n * Get the codec name from a code.\n *\n * @param {CodecCode} codec\n * @returns {CodecName}\n */\nfunction getNameFromCode (codec) {\n  return codeToName[codec]\n}\n\n/**\n * Get the code of the codec\n *\n * @param {CodecName} name\n * @returns {CodecCode}\n */\nfunction getCodeFromName (name) {\n  const code = nameToCode[name]\n  if (code === undefined) {\n    throw new Error(`Codec \"${name}\" not found`)\n  }\n  return code\n}\n\n/**\n * Get the code of the prefixed data.\n *\n * @param {Uint8Array} prefixedData\n * @returns {CodecCode}\n */\nfunction getCodeFromData (prefixedData) {\n  return /** @type {CodecCode} */(varint.decode(/** @type {Buffer} */(prefixedData)))\n}\n\n/**\n * Get the code as varint of a codec name.\n *\n * @param {CodecName} name\n * @returns {Uint8Array}\n */\nfunction getVarintFromName (name) {\n  const code = nameToVarint[name]\n  if (code === undefined) {\n    throw new Error(`Codec \"${name}\" not found`)\n  }\n  return code\n}\n\n/**\n * Get the varint of a code.\n *\n * @param {CodecCode} code\n * @returns {Uint8Array}\n */\nfunction getVarintFromCode (code) {\n  return util.varintEncode(code)\n}\n\n/**\n * Get the codec name of the prefixed data.\n *\n * @deprecated use getNameFromData instead.\n * @param {Uint8Array} prefixedData\n * @returns {CodecName}\n */\nfunction getCodec (prefixedData) {\n  return getNameFromData(prefixedData)\n}\n\n/**\n * Get the codec name from a code.\n *\n * @deprecated use getNameFromCode instead.\n * @param {CodecCode} codec\n * @returns {CodecName}\n */\nfunction getName (codec) {\n  return getNameFromCode(codec)\n}\n\n/**\n * Get the code of the codec\n *\n * @deprecated use getCodeFromName instead.\n * @param {CodecName} name\n * @returns {CodecCode}\n */\nfunction getNumber (name) {\n  return getCodeFromName(name)\n}\n\n/**\n * Get the code of the prefixed data.\n *\n * @deprecated use getCodeFromData instead.\n * @param {Uint8Array} prefixedData\n * @returns {CodecCode}\n */\nfunction getCode (prefixedData) {\n  return getCodeFromData(prefixedData)\n}\n\n/**\n * Get the code as varint of a codec name.\n *\n * @deprecated use getVarintFromName instead.\n * @param {CodecName} name\n * @returns {Uint8Array}\n */\nfunction getCodeVarint (name) {\n  return getVarintFromName(name)\n}\n\n/**\n * Get the varint of a code.\n *\n * @deprecated use getVarintFromCode instead.\n * @param {CodecCode} code\n * @returns {Array.<number>}\n */\nfunction getVarint (code) {\n  return Array.from(getVarintFromCode(code))\n}\n\nmodule.exports = {\n  addPrefix,\n  rmPrefix,\n  getNameFromData,\n  getNameFromCode,\n  getCodeFromName,\n  getCodeFromData,\n  getVarintFromName,\n  getVarintFromCode,\n  // Deprecated\n  getCodec,\n  getName,\n  getNumber,\n  getCode,\n  getCodeVarint,\n  getVarint,\n  // Make the constants top-level constants\n  ...constantToCode,\n  // Export the maps\n  nameToVarint,\n  nameToCode,\n  codeToName\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","'use strict'\n\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nmodule.exports = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintEncode\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction uint8ArrayToNumber (buf) {\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\n}\n\n/**\n * @param {number} num\n */\nfunction numberToUint8Array (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return uint8ArrayFromString(hexString, 'base16')\n}\n\n/**\n * @param {Uint8Array} input\n */\nfunction varintUint8ArrayEncode (input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\n}\n\n/**\n * @param {number} num\n */\nfunction varintEncode (num) {\n  return Uint8Array.from(varint.encode(num))\n}\n","'use strict'\n\n/** @typedef {import('./generated-types').ConstantCodeMap} ConstantCodeMap */\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\n/** @typedef {import('./generated-types').CodeNameMap} CodeNameMap */\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').CodecConstant} CodecConstant */\n\nconst { baseTable } = require('./generated-table')\nconst varintEncode = require('./util').varintEncode\n\nconst nameToVarint = /** @type {NameUint8ArrayMap} */ ({})\nconst constantToCode = /** @type {ConstantCodeMap} */({})\nconst codeToName = /** @type {CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const name in baseTable) {\n  const codecName = /** @type {CodecName} */(name)\n  const code = baseTable[codecName]\n  nameToVarint[codecName] = varintEncode(code)\n\n  const constant = /** @type {CodecConstant} */(codecName.toUpperCase().replace(/-/g, '_'))\n  constantToCode[constant] = code\n\n  if (!codeToName[code]) {\n    codeToName[code] = codecName\n  }\n}\n\nObject.freeze(nameToVarint)\nObject.freeze(constantToCode)\nObject.freeze(codeToName)\nconst nameToCode = Object.freeze(baseTable)\nmodule.exports = {\n  nameToVarint,\n  constantToCode,\n  nameToCode,\n  codeToName\n}\n","// DO NOT CHANGE THIS FILE. IT IS GENERATED BY tools/update-table.js\n/* eslint quote-props: off */\n'use strict'\n\n/**\n * @type {import('./generated-types').NameCodeMap}\n */\nconst baseTable = Object.freeze({\n  'identity': 0x00,\n  'cidv1': 0x01,\n  'cidv2': 0x02,\n  'cidv3': 0x03,\n  'ip4': 0x04,\n  'tcp': 0x06,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'dccp': 0x21,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'ip6': 0x29,\n  'ip6zone': 0x2a,\n  'path': 0x2f,\n  'multicodec': 0x30,\n  'multihash': 0x31,\n  'multiaddr': 0x32,\n  'multibase': 0x33,\n  'dns': 0x35,\n  'dns4': 0x36,\n  'dns6': 0x37,\n  'dnsaddr': 0x38,\n  'protobuf': 0x50,\n  'cbor': 0x51,\n  'raw': 0x55,\n  'dbl-sha2-256': 0x56,\n  'rlp': 0x60,\n  'bencode': 0x63,\n  'dag-pb': 0x70,\n  'dag-cbor': 0x71,\n  'libp2p-key': 0x72,\n  'git-raw': 0x78,\n  'torrent-info': 0x7b,\n  'torrent-file': 0x7c,\n  'leofcoin-block': 0x81,\n  'leofcoin-tx': 0x82,\n  'leofcoin-pr': 0x83,\n  'sctp': 0x84,\n  'dag-jose': 0x85,\n  'dag-cose': 0x86,\n  'eth-block': 0x90,\n  'eth-block-list': 0x91,\n  'eth-tx-trie': 0x92,\n  'eth-tx': 0x93,\n  'eth-tx-receipt-trie': 0x94,\n  'eth-tx-receipt': 0x95,\n  'eth-state-trie': 0x96,\n  'eth-account-snapshot': 0x97,\n  'eth-storage-trie': 0x98,\n  'bitcoin-block': 0xb0,\n  'bitcoin-tx': 0xb1,\n  'bitcoin-witness-commitment': 0xb2,\n  'zcash-block': 0xc0,\n  'zcash-tx': 0xc1,\n  'docid': 0xce,\n  'stellar-block': 0xd0,\n  'stellar-tx': 0xd1,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'decred-block': 0xe0,\n  'decred-tx': 0xe1,\n  'ipld-ns': 0xe2,\n  'ipfs-ns': 0xe3,\n  'swarm-ns': 0xe4,\n  'ipns-ns': 0xe5,\n  'zeronet': 0xe6,\n  'secp256k1-pub': 0xe7,\n  'bls12_381-g1-pub': 0xea,\n  'bls12_381-g2-pub': 0xeb,\n  'x25519-pub': 0xec,\n  'ed25519-pub': 0xed,\n  'bls12_381-g1g2-pub': 0xee,\n  'dash-block': 0xf0,\n  'dash-tx': 0xf1,\n  'swarm-manifest': 0xfa,\n  'swarm-feed': 0xfb,\n  'udp': 0x0111,\n  'p2p-webrtc-star': 0x0113,\n  'p2p-webrtc-direct': 0x0114,\n  'p2p-stardust': 0x0115,\n  'p2p-circuit': 0x0122,\n  'dag-json': 0x0129,\n  'udt': 0x012d,\n  'utp': 0x012e,\n  'unix': 0x0190,\n  'thread': 0x0196,\n  'p2p': 0x01a5,\n  'ipfs': 0x01a5,\n  'https': 0x01bb,\n  'onion': 0x01bc,\n  'onion3': 0x01bd,\n  'garlic64': 0x01be,\n  'garlic32': 0x01bf,\n  'tls': 0x01c0,\n  'quic': 0x01cc,\n  'ws': 0x01dd,\n  'wss': 0x01de,\n  'p2p-websocket-star': 0x01df,\n  'http': 0x01e0,\n  'json': 0x0200,\n  'messagepack': 0x0201,\n  'libp2p-peer-record': 0x0301,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'p256-pub': 0x1200,\n  'p384-pub': 0x1201,\n  'p521-pub': 0x1202,\n  'ed448-pub': 0x1203,\n  'x448-pub': 0x1204,\n  'ed25519-priv': 0x1300,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402,\n  'zeroxcert-imprint-256': 0xce11,\n  'fil-commitment-unsealed': 0xf101,\n  'fil-commitment-sealed': 0xf102,\n  'holochain-adr-v0': 0x807124,\n  'holochain-adr-v1': 0x817124,\n  'holochain-key-v0': 0x947124,\n  'holochain-key-v1': 0x957124,\n  'holochain-sig-v0': 0xa27124,\n  'holochain-sig-v1': 0xa37124,\n  'skynet-ns': 0xb19910\n})\n\nmodule.exports = { baseTable }\n","'use strict'\n\nconst mh = require('multihashes')\n\nconst CIDUtil = {\n  /**\n   * Test if the given input is a valid CID object.\n   * Returns an error message if it is not.\n   * Returns undefined if it is a valid CID.\n   *\n   * @param {any} other\n   * @returns {string|undefined}\n   */\n  checkCIDComponents: function (other) {\n    if (other == null) {\n      return 'null values are not valid CIDs'\n    }\n\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0'\n    }\n\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string'\n    }\n\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\"\n      }\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\"\n      }\n    }\n\n    if (!(other.multihash instanceof Uint8Array)) {\n      return 'multihash must be a Uint8Array'\n    }\n\n    try {\n      mh.validate(other.multihash)\n    } catch (err) {\n      let errorMsg = err.message\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed'\n      }\n      return errorMsg\n    }\n  }\n}\n\nmodule.exports = CIDUtil\n","'use strict'\n\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction equals (a, b) {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = equals\n","'use strict'\n\nconst keysPBM = require('./keys')\nrequire('node-forge/lib/asn1')\nrequire('node-forge/lib/pbe')\nconst forge = require('node-forge/lib/forge')\nconst errcode = require('err-code')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst importer = require('./importer')\n\nconst supportedKeys = {\n  rsa: require('./rsa-class'),\n  ed25519: require('./ed25519-class'),\n  secp256k1: require('./secp256k1-class')(keysPBM, require('../random-bytes'))\n}\n\nconst ErrMissingSecp256K1 = {\n  message: 'secp256k1 support requires libp2p-crypto-secp256k1 package',\n  code: 'ERR_MISSING_PACKAGE'\n}\n\nfunction typeToKey (type) {\n  const key = supportedKeys[type.toLowerCase()]\n  if (!key) {\n    const supported = Object.keys(supportedKeys).join(' / ')\n    throw errcode(new Error(`invalid or unsupported key type ${type}. Must be ${supported}`), 'ERR_UNSUPPORTED_KEY_TYPE')\n  }\n  return key\n}\n\n// Generates a keypair of the given type and bitsize\nconst generateKeyPair = async (type, bits) => { // eslint-disable-line require-await\n  return typeToKey(type).generateKeyPair(bits)\n}\n\n// Generates a keypair of the given type and bitsize\n// seed is a 32 byte uint8array\nconst generateKeyPairFromSeed = async (type, seed, bits) => { // eslint-disable-line require-await\n  const key = typeToKey(type)\n  if (type.toLowerCase() !== 'ed25519') {\n    throw errcode(new Error('Seed key derivation is unimplemented for RSA or secp256k1'), 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE')\n  }\n  return key.generateKeyPairFromSeed(seed, bits)\n}\n\n// Converts a protobuf serialized public key into its\n// representative object\nconst unmarshalPublicKey = (buf) => {\n  const decoded = keysPBM.PublicKey.decode(buf)\n  const data = decoded.Data\n\n  switch (decoded.Type) {\n    case keysPBM.KeyType.RSA:\n      return supportedKeys.rsa.unmarshalRsaPublicKey(data)\n    case keysPBM.KeyType.Ed25519:\n      return supportedKeys.ed25519.unmarshalEd25519PublicKey(data)\n    case keysPBM.KeyType.Secp256k1:\n      if (supportedKeys.secp256k1) {\n        return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data)\n      } else {\n        throw errcode(new Error(ErrMissingSecp256K1.message), ErrMissingSecp256K1.code)\n      }\n    default:\n      typeToKey(decoded.Type) // throws because type is not supported\n  }\n}\n\n// Converts a public key object into a protobuf serialized public key\nconst marshalPublicKey = (key, type) => {\n  type = (type || 'rsa').toLowerCase()\n  typeToKey(type) // check type\n  return key.bytes\n}\n\n// Converts a protobuf serialized private key into its\n// representative object\nconst unmarshalPrivateKey = async (buf) => { // eslint-disable-line require-await\n  const decoded = keysPBM.PrivateKey.decode(buf)\n  const data = decoded.Data\n\n  switch (decoded.Type) {\n    case keysPBM.KeyType.RSA:\n      return supportedKeys.rsa.unmarshalRsaPrivateKey(data)\n    case keysPBM.KeyType.Ed25519:\n      return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data)\n    case keysPBM.KeyType.Secp256k1:\n      if (supportedKeys.secp256k1) {\n        return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data)\n      } else {\n        throw errcode(new Error(ErrMissingSecp256K1.message), ErrMissingSecp256K1.code)\n      }\n    default:\n      typeToKey(decoded.Type) // throws because type is not supported\n  }\n}\n\n// Converts a private key object into a protobuf serialized private key\nconst marshalPrivateKey = (key, type) => {\n  type = (type || 'rsa').toLowerCase()\n  typeToKey(type) // check type\n  return key.bytes\n}\n\n/**\n *\n * @param {string} encryptedKey\n * @param {string} password\n */\nconst importKey = async (encryptedKey, password) => { // eslint-disable-line require-await\n  try {\n    const key = await importer.import(encryptedKey, password)\n    return unmarshalPrivateKey(key)\n  } catch (_) {\n    // Ignore and try the old pem decrypt\n  }\n\n  // Only rsa supports pem right now\n  const key = forge.pki.decryptRsaPrivateKey(encryptedKey, password)\n  if (key === null) {\n    throw errcode(new Error('Cannot read the key, most likely the password is wrong or not a RSA key'), 'ERR_CANNOT_DECRYPT_PEM')\n  }\n  let der = forge.asn1.toDer(forge.pki.privateKeyToAsn1(key))\n  der = uint8ArrayFromString(der.getBytes(), 'ascii')\n  return supportedKeys.rsa.unmarshalRsaPrivateKey(der)\n}\n\nmodule.exports = {\n  supportedKeys,\n  keysPBM,\n  keyStretcher: require('./key-stretcher'),\n  generateEphemeralKeyPair: require('./ephemeral-keys'),\n  generateKeyPair,\n  generateKeyPairFromSeed,\n  unmarshalPublicKey,\n  marshalPublicKey,\n  unmarshalPrivateKey,\n  marshalPrivateKey,\n  import: importKey\n}\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n/**\n * KeyType enum.\n * @exports KeyType\n * @enum {number}\n * @property {number} RSA=0 RSA value\n * @property {number} Ed25519=1 Ed25519 value\n * @property {number} Secp256k1=2 Secp256k1 value\n */\n$root.KeyType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"RSA\"] = 0;\n    values[valuesById[1] = \"Ed25519\"] = 1;\n    values[valuesById[2] = \"Secp256k1\"] = 2;\n    return values;\n})();\n\n$root.PublicKey = (function() {\n\n    /**\n     * Properties of a PublicKey.\n     * @exports IPublicKey\n     * @interface IPublicKey\n     * @property {KeyType} Type PublicKey Type\n     * @property {Uint8Array} Data PublicKey Data\n     */\n\n    /**\n     * Constructs a new PublicKey.\n     * @exports PublicKey\n     * @classdesc Represents a PublicKey.\n     * @implements IPublicKey\n     * @constructor\n     * @param {IPublicKey=} [p] Properties to set\n     */\n    function PublicKey(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PublicKey Type.\n     * @member {KeyType} Type\n     * @memberof PublicKey\n     * @instance\n     */\n    PublicKey.prototype.Type = 0;\n\n    /**\n     * PublicKey Data.\n     * @member {Uint8Array} Data\n     * @memberof PublicKey\n     * @instance\n     */\n    PublicKey.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified PublicKey message. Does not implicitly {@link PublicKey.verify|verify} messages.\n     * @function encode\n     * @memberof PublicKey\n     * @static\n     * @param {IPublicKey} m PublicKey message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PublicKey.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        w.uint32(18).bytes(m.Data);\n        return w;\n    };\n\n    /**\n     * Decodes a PublicKey message from the specified reader or buffer.\n     * @function decode\n     * @memberof PublicKey\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PublicKey} PublicKey\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PublicKey.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PublicKey();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        if (!m.hasOwnProperty(\"Data\"))\n            throw $util.ProtocolError(\"missing required 'Data'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a PublicKey message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PublicKey\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PublicKey} PublicKey\n     */\n    PublicKey.fromObject = function fromObject(d) {\n        if (d instanceof $root.PublicKey)\n            return d;\n        var m = new $root.PublicKey();\n        switch (d.Type) {\n        case \"RSA\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Ed25519\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"Secp256k1\":\n        case 2:\n            m.Type = 2;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PublicKey message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PublicKey\n     * @static\n     * @param {PublicKey} m PublicKey\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PublicKey.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"RSA\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.KeyType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PublicKey to JSON.\n     * @function toJSON\n     * @memberof PublicKey\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PublicKey.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PublicKey;\n})();\n\n$root.PrivateKey = (function() {\n\n    /**\n     * Properties of a PrivateKey.\n     * @exports IPrivateKey\n     * @interface IPrivateKey\n     * @property {KeyType} Type PrivateKey Type\n     * @property {Uint8Array} Data PrivateKey Data\n     */\n\n    /**\n     * Constructs a new PrivateKey.\n     * @exports PrivateKey\n     * @classdesc Represents a PrivateKey.\n     * @implements IPrivateKey\n     * @constructor\n     * @param {IPrivateKey=} [p] Properties to set\n     */\n    function PrivateKey(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PrivateKey Type.\n     * @member {KeyType} Type\n     * @memberof PrivateKey\n     * @instance\n     */\n    PrivateKey.prototype.Type = 0;\n\n    /**\n     * PrivateKey Data.\n     * @member {Uint8Array} Data\n     * @memberof PrivateKey\n     * @instance\n     */\n    PrivateKey.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified PrivateKey message. Does not implicitly {@link PrivateKey.verify|verify} messages.\n     * @function encode\n     * @memberof PrivateKey\n     * @static\n     * @param {IPrivateKey} m PrivateKey message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PrivateKey.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        w.uint32(18).bytes(m.Data);\n        return w;\n    };\n\n    /**\n     * Decodes a PrivateKey message from the specified reader or buffer.\n     * @function decode\n     * @memberof PrivateKey\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PrivateKey} PrivateKey\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PrivateKey.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PrivateKey();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        if (!m.hasOwnProperty(\"Data\"))\n            throw $util.ProtocolError(\"missing required 'Data'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a PrivateKey message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PrivateKey\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PrivateKey} PrivateKey\n     */\n    PrivateKey.fromObject = function fromObject(d) {\n        if (d instanceof $root.PrivateKey)\n            return d;\n        var m = new $root.PrivateKey();\n        switch (d.Type) {\n        case \"RSA\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Ed25519\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"Secp256k1\":\n        case 2:\n            m.Type = 2;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PrivateKey message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PrivateKey\n     * @static\n     * @param {PrivateKey} m PrivateKey\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PrivateKey.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"RSA\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.KeyType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PrivateKey to JSON.\n     * @function toJSON\n     * @memberof PrivateKey\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PrivateKey.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PrivateKey;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  return _fromDer(bytes, bytes.length(), 0, options);\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          verbose: options.verbose,\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      rval += forge.util.decodeUtf8(obj.value);\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Parses the scheme, host, and port from an http(s) url.\n *\n * @param str the url string.\n *\n * @return the parsed url object or null if the url is invalid.\n */\nutil.parseUrl = function(str) {\n  // FIXME: this regex looks a bit broken\n  var regex = /^(https?):\\/\\/([^:&^\\/]*):?(\\d*)(.*)$/g;\n  regex.lastIndex = 0;\n  var m = regex.exec(str);\n  var url = (m === null) ? null : {\n    full: str,\n    scheme: m[1],\n    host: m[2],\n    port: m[3],\n    path: m[4]\n  };\n  if(url) {\n    url.fullHost = url.host;\n    if(url.port) {\n      if(url.port !== 80 && url.scheme === 'http') {\n        url.fullHost += ':' + url.port;\n      } else if(url.port !== 443 && url.scheme === 'https') {\n        url.fullHost += ':' + url.port;\n      }\n    } else if(url.scheme === 'http') {\n      url.port = 80;\n    } else if(url.scheme === 'https') {\n      url.port = 443;\n    }\n    url.full = url.scheme + '://' + url.fullHost;\n  }\n  return url;\n};\n\n/* Storage for query variables */\nvar _queryVariables = null;\n\n/**\n * Returns the window location query variables. Query is parsed on the first\n * call and the same object is returned on subsequent calls. The mapping\n * is from keys to an array of values. Parameters without values will have\n * an object key set but no value added to the value array. Values are\n * unescaped.\n *\n * ...?k1=v1&k2=v2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": [\"v2\"]\n * }\n *\n * ...?k1=v1&k1=v2:\n * {\n *   \"k1\": [\"v1\", \"v2\"]\n * }\n *\n * ...?k1=v1&k2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": []\n * }\n *\n * ...?k1=v1&k1:\n * {\n *   \"k1\": [\"v1\"]\n * }\n *\n * ...?k1&k1:\n * {\n *   \"k1\": []\n * }\n *\n * @param query the query string to parse (optional, default to cached\n *          results from parsing window location search query).\n *\n * @return object mapping keys to variables.\n */\nutil.getQueryVariables = function(query) {\n  var parse = function(q) {\n    var rval = {};\n    var kvpairs = q.split('&');\n    for(var i = 0; i < kvpairs.length; i++) {\n      var pos = kvpairs[i].indexOf('=');\n      var key;\n      var val;\n      if(pos > 0) {\n        key = kvpairs[i].substring(0, pos);\n        val = kvpairs[i].substring(pos + 1);\n      } else {\n        key = kvpairs[i];\n        val = null;\n      }\n      if(!(key in rval)) {\n        rval[key] = [];\n      }\n      // disallow overriding object prototype keys\n      if(!(key in Object.prototype) && val !== null) {\n        rval[key].push(unescape(val));\n      }\n    }\n    return rval;\n  };\n\n   var rval;\n   if(typeof(query) === 'undefined') {\n     // set cached variables if needed\n     if(_queryVariables === null) {\n       if(typeof(window) !== 'undefined' && window.location && window.location.search) {\n          // parse window search query\n          _queryVariables = parse(window.location.search.substring(1));\n       } else {\n          // no query variables available\n          _queryVariables = {};\n       }\n     }\n     rval = _queryVariables;\n   } else {\n     // parse given query\n     rval = parse(query);\n   }\n   return rval;\n};\n\n/**\n * Parses a fragment into a path and query. This method will take a URI\n * fragment and break it up as if it were the main URI. For example:\n *    /bar/baz?a=1&b=2\n * results in:\n *    {\n *       path: [\"bar\", \"baz\"],\n *       query: {\"k1\": [\"v1\"], \"k2\": [\"v2\"]}\n *    }\n *\n * @return object with a path array and query object.\n */\nutil.parseFragment = function(fragment) {\n  // default to whole fragment\n  var fp = fragment;\n  var fq = '';\n  // split into path and query if possible at the first '?'\n  var pos = fragment.indexOf('?');\n  if(pos > 0) {\n    fp = fragment.substring(0, pos);\n    fq = fragment.substring(pos + 1);\n  }\n  // split path based on '/' and ignore first element if empty\n  var path = fp.split('/');\n  if(path.length > 0 && path[0] === '') {\n    path.shift();\n  }\n  // convert query into object\n  var query = (fq === '') ? {} : util.getQueryVariables(fq);\n\n  return {\n    pathString: fp,\n    queryString: fq,\n    path: path,\n    query: query\n  };\n};\n\n/**\n * Makes a request out of a URI-like request string. This is intended to\n * be used where a fragment id (after a URI '#') is parsed as a URI with\n * path and query parts. The string should have a path beginning and\n * delimited by '/' and optional query parameters following a '?'. The\n * query should be a standard URL set of key value pairs delimited by\n * '&'. For backwards compatibility the initial '/' on the path is not\n * required. The request object has the following API, (fully described\n * in the method code):\n *    {\n *       path: <the path string part>.\n *       query: <the query string part>,\n *       getPath(i): get part or all of the split path array,\n *       getQuery(k, i): get part or all of a query key array,\n *       getQueryLast(k, _default): get last element of a query key array.\n *    }\n *\n * @return object with request parameters.\n */\nutil.makeRequest = function(reqString) {\n  var frag = util.parseFragment(reqString);\n  var req = {\n    // full path string\n    path: frag.pathString,\n    // full query string\n    query: frag.queryString,\n    /**\n     * Get path or element in path.\n     *\n     * @param i optional path index.\n     *\n     * @return path or part of path if i provided.\n     */\n    getPath: function(i) {\n      return (typeof(i) === 'undefined') ? frag.path : frag.path[i];\n    },\n    /**\n     * Get query, values for a key, or value for a key index.\n     *\n     * @param k optional query key.\n     * @param i optional query key index.\n     *\n     * @return query, values for a key, or value for a key index.\n     */\n    getQuery: function(k, i) {\n      var rval;\n      if(typeof(k) === 'undefined') {\n        rval = frag.query;\n      } else {\n        rval = frag.query[k];\n        if(rval && typeof(i) !== 'undefined') {\n           rval = rval[i];\n        }\n      }\n      return rval;\n    },\n    getQueryLast: function(k, _default) {\n      var rval;\n      var vals = req.getQuery(k);\n      if(vals) {\n        rval = vals[vals.length - 1];\n      } else {\n        rval = _default;\n      }\n      return rval;\n    }\n  };\n  return req;\n};\n\n/**\n * Makes a URI out of a path, an object with query parameters, and a\n * fragment. Uses jQuery.param() internally for query string creation.\n * If the path is an array, it will be joined with '/'.\n *\n * @param path string path or array of strings.\n * @param query object with query parameters. (optional)\n * @param fragment fragment string. (optional)\n *\n * @return string object with request parameters.\n */\nutil.makeLink = function(path, query, fragment) {\n  // join path parts if needed\n  path = jQuery.isArray(path) ? path.join('/') : path;\n\n  var qstr = jQuery.param(query || {});\n  fragment = fragment || '';\n  return path +\n    ((qstr.length > 0) ? ('?' + qstr) : '') +\n    ((fragment.length > 0) ? ('#' + fragment) : '');\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n",null,"/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.5', 'serialName');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    var msg = {\n      type: match[1],\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(String.fromCharCode(next & 0xFF));\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d);\n          // compare the given digest to the decrypted one\n          return digest === obj.value[1].value;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","'use strict'\n\nconst multibase = require('multibase')\nconst ciphers = require('../ciphers/aes-gcm')\n\nmodule.exports = {\n  /**\n   * Attempts to decrypt a base64 encoded PrivateKey string\n   * with the given password. The privateKey must have been exported\n   * using the same password and underlying cipher (aes-gcm)\n   *\n   * @param {string} privateKey - A base64 encoded encrypted key\n   * @param {string} password\n   * @returns {Promise<Uint8Array>} The private key protobuf\n   */\n  import: async function (privateKey, password) {\n    const base64 = multibase.names.base64\n    const encryptedKey = base64.decode(privateKey)\n    const cipher = ciphers.create()\n    return await cipher.decrypt(encryptedKey, password)\n  }\n}\n","'use strict'\n\nconst concat = require('uint8arrays/concat')\nconst fromString = require('uint8arrays/from-string')\n\nconst webcrypto = require('../webcrypto')\n\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\n\n/**\n *\n * @param {object} [options]\n * @param {string} [options.algorithm=AES-GCM]\n * @param {number} [options.nonceLength=12]\n * @param {number} [options.keyLength=16]\n * @param {string} [options.digest=sha256]\n * @param {number} [options.saltLength=16]\n * @param {number} [options.iterations=32767]\n * @returns {*}\n */\nfunction create ({\n  algorithm = 'AES-GCM',\n  nonceLength = 12,\n  keyLength = 16,\n  digest = 'SHA-256',\n  saltLength = 16,\n  iterations = 32767\n} = {}) {\n  const crypto = webcrypto.get()\n  keyLength *= 8 // Browser crypto uses bits instead of bytes\n\n  /**\n   * Uses the provided password to derive a pbkdf2 key. The key\n   * will then be used to encrypt the data.\n   *\n   * @param {Uint8Array} data - The data to decrypt\n   * @param {string} password - A plain password\n   * @returns {Promise<Uint8Array>}\n   */\n  async function encrypt (data, password) { // eslint-disable-line require-await\n    const salt = crypto.getRandomValues(new Uint8Array(saltLength))\n    const nonce = crypto.getRandomValues(new Uint8Array(nonceLength))\n    const aesGcm = { name: algorithm, iv: nonce }\n\n    // Derive a key using PBKDF2.\n    const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } }\n    const rawKey = await crypto.subtle.importKey('raw', fromString(password), { name: 'PBKDF2' }, false, ['deriveKey', 'deriveBits'])\n    const cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['encrypt'])\n\n    // Encrypt the string.\n    const ciphertext = await crypto.subtle.encrypt(aesGcm, cryptoKey, data)\n    return concat([salt, aesGcm.iv, new Uint8Array(ciphertext)])\n  }\n\n  /**\n   * Uses the provided password to derive a pbkdf2 key. The key\n   * will then be used to decrypt the data. The options used to create\n   * this decryption cipher must be the same as those used to create\n   * the encryption cipher.\n   *\n   * @param {Uint8Array} data - The data to decrypt\n   * @param {string} password - A plain password\n   * @returns {Promise<Uint8Array>}\n   */\n  async function decrypt (data, password) {\n    const salt = data.slice(0, saltLength)\n    const nonce = data.slice(saltLength, saltLength + nonceLength)\n    const ciphertext = data.slice(saltLength + nonceLength)\n    const aesGcm = { name: algorithm, iv: nonce }\n\n    // Derive the key using PBKDF2.\n    const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } }\n    const rawKey = await crypto.subtle.importKey('raw', fromString(password), { name: 'PBKDF2' }, false, ['deriveKey', 'deriveBits'])\n    const cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['decrypt'])\n\n    // Decrypt the string.\n    const plaintext = await crypto.subtle.decrypt(aesGcm, cryptoKey, ciphertext)\n    return new Uint8Array(plaintext)\n  }\n\n  return {\n    encrypt,\n    decrypt\n  }\n}\n\nmodule.exports = {\n  create\n}\n","/* eslint-env browser */\n\n'use strict'\n\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexports.get = (win = self) => {\n  const nativeCrypto = win.crypto || win.msCrypto\n\n  if (!nativeCrypto || !nativeCrypto.subtle) {\n    throw Object.assign(\n      new Error(\n        'Missing Web Crypto API. ' +\n        'The most likely cause of this error is that this page is being accessed ' +\n        'from an insecure context (i.e. not HTTPS). For more information and ' +\n        'possible resolutions see ' +\n        'https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api'\n      ),\n      { code: 'ERR_MISSING_WEB_CRYPTO' }\n    )\n  }\n\n  return nativeCrypto\n}\n","'use strict'\n\nconst sha = require('multihashing-async/src/sha')\nconst errcode = require('err-code')\nconst uint8ArrayEquals = require('uint8arrays/equals')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nrequire('node-forge/lib/sha512')\nrequire('node-forge/lib/ed25519')\nconst forge = require('node-forge/lib/forge')\n\nconst crypto = require('./rsa')\nconst pbm = require('./keys')\nconst exporter = require('./exporter')\n\nclass RsaPublicKey {\n  constructor (key) {\n    this._key = key\n  }\n\n  async verify (data, sig) { // eslint-disable-line require-await\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal () {\n    return crypto.utils.jwkToPkix(this._key)\n  }\n\n  get bytes () {\n    return pbm.PublicKey.encode({\n      Type: pbm.KeyType.RSA,\n      Data: this.marshal()\n    }).finish()\n  }\n\n  encrypt (bytes) {\n    return crypto.encrypt(this._key, bytes)\n  }\n\n  equals (key) {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash () { // eslint-disable-line require-await\n    return sha.multihashing(this.bytes, 'sha2-256')\n  }\n}\n\nclass RsaPrivateKey {\n  // key       - Object of the jwk format\n  // publicKey - Uint8Array of the spki format\n  constructor (key, publicKey) {\n    this._key = key\n    this._publicKey = publicKey\n  }\n\n  genSecret () {\n    return crypto.getRandomValues(16)\n  }\n\n  async sign (message) { // eslint-disable-line require-await\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public () {\n    if (!this._publicKey) {\n      throw errcode(new Error('public key not provided'), 'ERR_PUBKEY_NOT_PROVIDED')\n    }\n\n    return new RsaPublicKey(this._publicKey)\n  }\n\n  decrypt (bytes) {\n    return crypto.decrypt(this._key, bytes)\n  }\n\n  marshal () {\n    return crypto.utils.jwkToPkcs1(this._key)\n  }\n\n  get bytes () {\n    return pbm.PrivateKey.encode({\n      Type: pbm.KeyType.RSA,\n      Data: this.marshal()\n    }).finish()\n  }\n\n  equals (key) {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash () { // eslint-disable-line require-await\n    return sha.multihashing(this.bytes, 'sha2-256')\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   *\n   * @returns {Promise<string>}\n   */\n  async id () {\n    const hash = await this.public.hash()\n    return uint8ArrayToString(hash, 'base58btc')\n  }\n\n  /**\n   * Exports the key into a password protected PEM format\n   *\n   * @param {string} password - The password to read the encrypted PEM\n   * @param {string} [format=pkcs-8] - The format in which to export as\n   */\n  async export (password, format = 'pkcs-8') { // eslint-disable-line require-await\n    if (format === 'pkcs-8') {\n      const buffer = new forge.util.ByteBuffer(this.marshal())\n      const asn1 = forge.asn1.fromDer(buffer)\n      const privateKey = forge.pki.privateKeyFromAsn1(asn1)\n\n      const options = {\n        algorithm: 'aes256',\n        count: 10000,\n        saltSize: 128 / 8,\n        prfAlgorithm: 'sha512'\n      }\n      return forge.pki.encryptRsaPrivateKey(privateKey, password, options)\n    } else if (format === 'libp2p-key') {\n      return exporter.export(this.bytes, password)\n    } else {\n      throw errcode(new Error(`export format '${format}' is not supported`), 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nasync function unmarshalRsaPrivateKey (bytes) {\n  const jwk = crypto.utils.pkcs1ToJwk(bytes)\n  const keys = await crypto.unmarshalPrivateKey(jwk)\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nfunction unmarshalRsaPublicKey (bytes) {\n  const jwk = crypto.utils.pkixToJwk(bytes)\n  return new RsaPublicKey(jwk)\n}\n\nasync function fromJwk (jwk) {\n  const keys = await crypto.unmarshalPrivateKey(jwk)\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nasync function generateKeyPair (bits) {\n  const keys = await crypto.generateKey(bits)\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nmodule.exports = {\n  RsaPublicKey,\n  RsaPrivateKey,\n  unmarshalRsaPublicKey,\n  unmarshalRsaPrivateKey,\n  generateKeyPair,\n  fromJwk\n}\n","/* eslint-disable require-await */\n'use strict'\n\nconst multihash = require('multihashes')\n/**\n * @typedef {import('multihashes').HashName} HashName\n * @typedef {import('./types').Digest} Digest\n */\n\n/**\n * @type {Crypto}\n */\nconst crypto =\n  self.crypto ||\n  /** @type {typeof window.crypto} */\n  // @ts-ignore - unknown property\n  (self.msCrypto)\n\n/**\n *\n * @param {Uint8Array} data\n * @param {HashName} alg\n * @returns {Promise<Uint8Array>}\n */\nconst digest = async (data, alg) => {\n  if (typeof self === 'undefined' || !crypto) {\n    throw new Error(\n      'Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context'\n    )\n  }\n  switch (alg) {\n    case 'sha1':\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-1' }, data))\n    case 'sha2-256':\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, data))\n    case 'sha2-512':\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-512' }, data))\n    case 'dbl-sha2-256': {\n      const d = await crypto.subtle.digest({ name: 'SHA-256' }, data)\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, d))\n    }\n    default:\n      throw new Error(`${alg} is not a supported algorithm`)\n  }\n}\n\nmodule.exports = {\n  /**\n   * @param {HashName} alg\n   * @returns {Digest}\n   */\n  factory: (alg) => async (data) => {\n    return digest(data, alg)\n  },\n  digest,\n  /**\n   * @param {Uint8Array} buf\n   * @param {HashName} alg\n   * @param {number} [length]\n   */\n  multihashing: async (buf, alg, length) => {\n    const h = await digest(buf, alg)\n    return multihash.encode(h, alg, length)\n  }\n}\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2019 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = require('./forge');\nrequire('./jsbn');\nrequire('./random');\nrequire('./sha512');\nrequire('./util');\nvar asn1Validator = require('./asn1-validator');\nvar publicKeyValidator = asn1Validator.publicKeyValidator;\nvar privateKeyValidator = asn1Validator.privateKeyValidator;\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\n/**\n * Converts a private key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a private key.\n *\n * @returns {Object} keyInfo - The key information.\n * @returns {Buffer|Uint8Array} keyInfo.privateKeyBytes - 32 private key bytes.\n */\ned25519.privateKeyFromAsn1 = function(obj) {\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, privateKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.privateKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var privateKey = capture.privateKey;\n  // manually extract the private key bytes from nested octet string, see FIXME:\n  // https://github.com/digitalbazaar/forge/blob/master/lib/asn1.js#L542\n  var privateKeyBytes = messageToNativeBuffer({\n    message: forge.asn1.fromDer(privateKey).value,\n    encoding: 'binary'\n  });\n  // TODO: RFC8410 specifies a format for encoding the public key bytes along\n  // with the private key bytes. `publicKeyBytes` can be returned in the\n  // future. https://tools.ietf.org/html/rfc8410#section-10.3\n  return {privateKeyBytes: privateKeyBytes};\n};\n\n/**\n * Converts a public key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a public key.\n *\n * @return {Buffer|Uint8Array} - 32 public key bytes.\n */\ned25519.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, publicKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.publicKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var publicKeyBytes = capture.ed25519PublicKey;\n  if(publicKeyBytes.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new Error('Key length is invalid.');\n  }\n  return messageToNativeBuffer({\n    message: publicKeyBytes,\n    encoding: 'binary'\n  });\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length === ed25519.constants.SEED_BYTE_LENGTH) {\n    var keyPair = ed25519.generateKeyPair({seed: privateKey});\n    privateKey = keyPair.privateKey;\n  } else if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.SEED_BYTE_LENGTH + ' or ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array || message instanceof NativeBuffer) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n","/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n","'use strict'\n\nconst webcrypto = require('../webcrypto')\nconst randomBytes = require('../random-bytes')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nexports.utils = require('./rsa-utils')\n\nexports.generateKey = async function (bits) {\n  const pair = await webcrypto.get().subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign', 'verify']\n  )\n\n  const keys = await exportKey(pair)\n\n  return {\n    privateKey: keys[0],\n    publicKey: keys[1]\n  }\n}\n\n// Takes a jwk key\nexports.unmarshalPrivateKey = async function (key) {\n  const privateKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign']\n  )\n\n  const pair = [\n    privateKey,\n    await derivePublicFromPrivate(key)\n  ]\n\n  const keys = await exportKey({\n    privateKey: pair[0],\n    publicKey: pair[1]\n  })\n\n  return {\n    privateKey: keys[0],\n    publicKey: keys[1]\n  }\n}\n\nexports.getRandomValues = randomBytes\n\nexports.hashAndSign = async function (key, msg) {\n  const privateKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['sign']\n  )\n\n  const sig = await webcrypto.get().subtle.sign(\n    { name: 'RSASSA-PKCS1-v1_5' },\n    privateKey,\n    Uint8Array.from(msg)\n  )\n\n  return new Uint8Array(sig, sig.byteOffset, sig.byteLength)\n}\n\nexports.hashAndVerify = async function (key, sig, msg) {\n  const publicKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['verify']\n  )\n\n  return webcrypto.get().subtle.verify(\n    { name: 'RSASSA-PKCS1-v1_5' },\n    publicKey,\n    sig,\n    msg\n  )\n}\n\nfunction exportKey (pair) {\n  return Promise.all([\n    webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n    webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n  ])\n}\n\nfunction derivePublicFromPrivate (jwKey) {\n  return webcrypto.get().subtle.importKey(\n    'jwk',\n    {\n      kty: jwKey.kty,\n      n: jwKey.n,\n      e: jwKey.e\n    },\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['verify']\n  )\n}\n\n/*\n\nRSA encryption/decryption for the browser with webcrypto workarround\n\"bloody dark magic. webcrypto's why.\"\n\nExplanation:\n  - Convert JWK to nodeForge\n  - Convert msg Uint8Array to nodeForge buffer: ByteBuffer is a \"binary-string backed buffer\", so let's make our Uint8Array a binary string\n  - Convert resulting nodeForge buffer to Uint8Array: it returns a binary string, turn that into a Uint8Array\n\n*/\n\nconst { jwk2pub, jwk2priv } = require('./jwk2pem')\n\nfunction convertKey (key, pub, msg, handle) {\n  const fkey = pub ? jwk2pub(key) : jwk2priv(key)\n  const fmsg = uint8ArrayToString(Uint8Array.from(msg), 'ascii')\n  const fomsg = handle(fmsg, fkey)\n  return uint8ArrayFromString(fomsg, 'ascii')\n}\n\nexports.encrypt = function (key, msg) {\n  return convertKey(key, true, msg, (msg, key) => key.encrypt(msg))\n}\n\nexports.decrypt = function (key, msg) {\n  return convertKey(key, false, msg, (msg, key) => key.decrypt(msg))\n}\n","'use strict'\nconst randomBytes = require('iso-random-stream/src/random')\nconst errcode = require('err-code')\n\nmodule.exports = function (length) {\n  if (isNaN(length) || length <= 0) {\n    throw errcode(new Error('random bytes length must be a Number bigger than 0'), 'ERR_INVALID_LENGTH')\n  }\n  return randomBytes(length)\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nconst MAX_BYTES = 65536\n\n/**\n * @param {number} size\n */\nfunction randomBytes(size) {\n  const bytes = new Uint8Array(size)\n  let generated = 0\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      while (generated < size) {\n        if (generated + MAX_BYTES > size) {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + (size - generated))\n          )\n          generated += size - generated\n        } else {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + MAX_BYTES)\n          )\n          generated += MAX_BYTES\n        }\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  return bytes\n}\n\nmodule.exports = randomBytes\n","'use strict'\n\nrequire('node-forge/lib/asn1')\nrequire('node-forge/lib/rsa')\nconst forge = require('node-forge/lib/forge')\nconst { bigIntegerToUintBase64url, base64urlToBigInteger } = require('./../util')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\n// Convert a PKCS#1 in ASN1 DER format to a JWK key\nexports.pkcs1ToJwk = function (bytes) {\n  const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'))\n  const privateKey = forge.pki.privateKeyFromAsn1(asn1)\n\n  // https://tools.ietf.org/html/rfc7518#section-6.3.1\n  return {\n    kty: 'RSA',\n    n: bigIntegerToUintBase64url(privateKey.n),\n    e: bigIntegerToUintBase64url(privateKey.e),\n    d: bigIntegerToUintBase64url(privateKey.d),\n    p: bigIntegerToUintBase64url(privateKey.p),\n    q: bigIntegerToUintBase64url(privateKey.q),\n    dp: bigIntegerToUintBase64url(privateKey.dP),\n    dq: bigIntegerToUintBase64url(privateKey.dQ),\n    qi: bigIntegerToUintBase64url(privateKey.qInv),\n    alg: 'RS256',\n    kid: '2011-04-29'\n  }\n}\n\n// Convert a JWK key into PKCS#1 in ASN1 DER format\nexports.jwkToPkcs1 = function (jwk) {\n  const asn1 = forge.pki.privateKeyToAsn1({\n    n: base64urlToBigInteger(jwk.n),\n    e: base64urlToBigInteger(jwk.e),\n    d: base64urlToBigInteger(jwk.d),\n    p: base64urlToBigInteger(jwk.p),\n    q: base64urlToBigInteger(jwk.q),\n    dP: base64urlToBigInteger(jwk.dp),\n    dQ: base64urlToBigInteger(jwk.dq),\n    qInv: base64urlToBigInteger(jwk.qi)\n  })\n\n  return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii')\n}\n\n// Convert a PKCIX in ASN1 DER format to a JWK key\nexports.pkixToJwk = function (bytes) {\n  const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'))\n  const publicKey = forge.pki.publicKeyFromAsn1(asn1)\n\n  return {\n    kty: 'RSA',\n    n: bigIntegerToUintBase64url(publicKey.n),\n    e: bigIntegerToUintBase64url(publicKey.e),\n    alg: 'RS256',\n    kid: '2011-04-29'\n  }\n}\n\n// Convert a JWK key to PKCIX in ASN1 DER format\nexports.jwkToPkix = function (jwk) {\n  const asn1 = forge.pki.publicKeyToAsn1({\n    n: base64urlToBigInteger(jwk.n),\n    e: base64urlToBigInteger(jwk.e)\n  })\n\n  return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii')\n}\n","'use strict'\n\nrequire('node-forge/lib/util')\nrequire('node-forge/lib/jsbn')\nconst forge = require('node-forge/lib/forge')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nexports.bigIntegerToUintBase64url = (num, len) => {\n  // Call `.abs()` to convert to unsigned\n  let buf = Uint8Array.from(num.abs().toByteArray()) // toByteArray converts to big endian\n\n  // toByteArray() gives us back a signed array, which will include a leading 0\n  // byte if the most significant bit of the number is 1:\n  // https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-integer\n  // Our number will always be positive so we should remove the leading padding.\n  buf = buf[0] === 0 ? buf.slice(1) : buf\n\n  if (len != null) {\n    if (buf.length > len) throw new Error('byte array longer than desired length')\n    buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf])\n  }\n\n  return uint8ArrayToString(buf, 'base64url')\n}\n\n// Convert a base64url encoded string to a BigInteger\nexports.base64urlToBigInteger = str => {\n  const buf = exports.base64urlToBuffer(str)\n  return new forge.jsbn.BigInteger(uint8ArrayToString(buf, 'base16'), 16)\n}\n\nexports.base64urlToBuffer = (str, len) => {\n  let buf = uint8ArrayFromString(str, 'base64urlpad')\n\n  if (len != null) {\n    if (buf.length > len) throw new Error('byte array longer than desired length')\n    buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf])\n  }\n\n  return buf\n}\n","'use strict'\n\nrequire('node-forge/lib/rsa')\nconst forge = require('node-forge/lib/forge')\nconst { base64urlToBigInteger } = require('../util')\n\nfunction convert (key, types) {\n  return types.map(t => base64urlToBigInteger(key[t]))\n}\n\nfunction jwk2priv (key) {\n  return forge.pki.setRsaPrivateKey(...convert(key, ['n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi']))\n}\n\nfunction jwk2pub (key) {\n  return forge.pki.setRsaPublicKey(...convert(key, ['n', 'e']))\n}\n\nmodule.exports = {\n  jwk2pub,\n  jwk2priv\n}\n","'use strict'\n\nconst multibase = require('multibase')\nconst ciphers = require('../ciphers/aes-gcm')\n\nmodule.exports = {\n  /**\n   * Exports the given PrivateKey as a base64 encoded string.\n   * The PrivateKey is encrypted via a password derived PBKDF2 key\n   * leveraging the aes-gcm cipher algorithm.\n   *\n   * @param {Uint8Array} privateKey - The PrivateKey protobuf\n   * @param {string} password\n   * @returns {Promise<string>} A base64 encoded string\n   */\n  export: async function (privateKey, password) {\n    const cipher = ciphers.create()\n    const encryptedKey = await cipher.encrypt(privateKey, password)\n    const base64 = multibase.names.base64\n    return base64.encode(encryptedKey)\n  }\n}\n","'use strict'\n\nconst sha = require('multihashing-async/src/sha')\nconst errcode = require('err-code')\nconst uint8ArrayEquals = require('uint8arrays/equals')\nconst mh = require('multihashes')\nconst crypto = require('./ed25519')\nconst pbm = require('./keys')\nconst exporter = require('./exporter')\n\nclass Ed25519PublicKey {\n  constructor (key) {\n    this._key = ensureKey(key, crypto.publicKeyLength)\n  }\n\n  async verify (data, sig) { // eslint-disable-line require-await\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal () {\n    return this._key\n  }\n\n  get bytes () {\n    return pbm.PublicKey.encode({\n      Type: pbm.KeyType.Ed25519,\n      Data: this.marshal()\n    }).finish()\n  }\n\n  equals (key) {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash () { // eslint-disable-line require-await\n    return sha.multihashing(this.bytes, 'sha2-256')\n  }\n}\n\nclass Ed25519PrivateKey {\n  // key       - 64 byte Uint8Array containing private key\n  // publicKey - 32 byte Uint8Array containing public key\n  constructor (key, publicKey) {\n    this._key = ensureKey(key, crypto.privateKeyLength)\n    this._publicKey = ensureKey(publicKey, crypto.publicKeyLength)\n  }\n\n  async sign (message) { // eslint-disable-line require-await\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public () {\n    return new Ed25519PublicKey(this._publicKey)\n  }\n\n  marshal () {\n    return this._key\n  }\n\n  get bytes () {\n    return pbm.PrivateKey.encode({\n      Type: pbm.KeyType.Ed25519,\n      Data: this.marshal()\n    }).finish()\n  }\n\n  equals (key) {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash () { // eslint-disable-line require-await\n    return sha.multihashing(this.bytes, 'sha2-256')\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   *\n   * @returns {Promise<string>}\n   */\n  async id () {\n    const encoding = mh.encode(this.public.bytes, 'identity')\n    return await mh.toB58String(encoding)\n  }\n\n  /**\n   * Exports the key into a password protected `format`\n   *\n   * @param {string} password - The password to encrypt the key\n   * @param {string} [format=libp2p-key] - The format in which to export as\n   * @returns {Promise<Uint8Array>} The encrypted private key\n   */\n  async export (password, format = 'libp2p-key') { // eslint-disable-line require-await\n    if (format === 'libp2p-key') {\n      return exporter.export(this.bytes, password)\n    } else {\n      throw errcode(new Error(`export format '${format}' is not supported`), 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nfunction unmarshalEd25519PrivateKey (bytes) {\n  // Try the old, redundant public key version\n  if (bytes.length > crypto.privateKeyLength) {\n    bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength)\n    const privateKeyBytes = bytes.slice(0, crypto.privateKeyLength)\n    const publicKeyBytes = bytes.slice(crypto.privateKeyLength, bytes.length)\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes)\n  }\n\n  bytes = ensureKey(bytes, crypto.privateKeyLength)\n  const privateKeyBytes = bytes.slice(0, crypto.privateKeyLength)\n  const publicKeyBytes = bytes.slice(crypto.publicKeyLength)\n  return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes)\n}\n\nfunction unmarshalEd25519PublicKey (bytes) {\n  bytes = ensureKey(bytes, crypto.publicKeyLength)\n  return new Ed25519PublicKey(bytes)\n}\n\nasync function generateKeyPair () {\n  const { privateKey, publicKey } = await crypto.generateKey()\n  return new Ed25519PrivateKey(privateKey, publicKey)\n}\n\nasync function generateKeyPairFromSeed (seed) {\n  const { privateKey, publicKey } = await crypto.generateKeyFromSeed(seed)\n  return new Ed25519PrivateKey(privateKey, publicKey)\n}\n\nfunction ensureKey (key, length) {\n  key = Uint8Array.from(key || [])\n  if (key.length !== length) {\n    throw errcode(new Error(`Key must be a Uint8Array of length ${length}, got ${key.length}`), 'ERR_INVALID_KEY_TYPE')\n  }\n  return key\n}\n\nmodule.exports = {\n  Ed25519PublicKey,\n  Ed25519PrivateKey,\n  unmarshalEd25519PrivateKey,\n  unmarshalEd25519PublicKey,\n  generateKeyPair,\n  generateKeyPairFromSeed\n}\n","'use strict'\n\nrequire('node-forge/lib/ed25519')\nconst forge = require('node-forge/lib/forge')\nexports.publicKeyLength = forge.pki.ed25519.constants.PUBLIC_KEY_BYTE_LENGTH\nexports.privateKeyLength = forge.pki.ed25519.constants.PRIVATE_KEY_BYTE_LENGTH\n\nexports.generateKey = async function () { // eslint-disable-line require-await\n  return forge.pki.ed25519.generateKeyPair()\n}\n\n// seed should be a 32 byte uint8array\nexports.generateKeyFromSeed = async function (seed) { // eslint-disable-line require-await\n  return forge.pki.ed25519.generateKeyPair({ seed })\n}\n\nexports.hashAndSign = async function (key, msg) { // eslint-disable-line require-await\n  return forge.pki.ed25519.sign({ message: msg, privateKey: key })\n  // return Uint8Array.from(nacl.sign.detached(msg, key))\n}\n\nexports.hashAndVerify = async function (key, sig, msg) { // eslint-disable-line require-await\n  return forge.pki.ed25519.verify({ signature: sig, message: msg, publicKey: key })\n}\n","'use strict'\n\nconst sha = require('multihashing-async/src/sha')\nconst errcode = require('err-code')\nconst uint8ArrayEquals = require('uint8arrays/equals')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nconst exporter = require('./exporter')\n\nmodule.exports = (keysProtobuf, randomBytes, crypto) => {\n  crypto = crypto || require('./secp256k1')(randomBytes)\n\n  class Secp256k1PublicKey {\n    constructor (key) {\n      crypto.validatePublicKey(key)\n      this._key = key\n    }\n\n    verify (data, sig) {\n      return crypto.hashAndVerify(this._key, sig, data)\n    }\n\n    marshal () {\n      return crypto.compressPublicKey(this._key)\n    }\n\n    get bytes () {\n      return keysProtobuf.PublicKey.encode({\n        Type: keysProtobuf.KeyType.Secp256k1,\n        Data: this.marshal()\n      }).finish()\n    }\n\n    equals (key) {\n      return uint8ArrayEquals(this.bytes, key.bytes)\n    }\n\n    hash () {\n      return sha.multihashing(this.bytes, 'sha2-256')\n    }\n  }\n\n  class Secp256k1PrivateKey {\n    constructor (key, publicKey) {\n      this._key = key\n      this._publicKey = publicKey || crypto.computePublicKey(key)\n      crypto.validatePrivateKey(this._key)\n      crypto.validatePublicKey(this._publicKey)\n    }\n\n    sign (message) {\n      return crypto.hashAndSign(this._key, message)\n    }\n\n    get public () {\n      return new Secp256k1PublicKey(this._publicKey)\n    }\n\n    marshal () {\n      return this._key\n    }\n\n    get bytes () {\n      return keysProtobuf.PrivateKey.encode({\n        Type: keysProtobuf.KeyType.Secp256k1,\n        Data: this.marshal()\n      }).finish()\n    }\n\n    equals (key) {\n      return uint8ArrayEquals(this.bytes, key.bytes)\n    }\n\n    hash () {\n      return sha.multihashing(this.bytes, 'sha2-256')\n    }\n\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     *\n     * @returns {Promise<string>}\n     */\n    async id () {\n      const hash = await this.public.hash()\n      return uint8ArrayToString(hash, 'base58btc')\n    }\n\n    /**\n     * Exports the key into a password protected `format`\n     *\n     * @param {string} password - The password to encrypt the key\n     * @param {string} [format=libp2p-key] - The format in which to export as\n     * @returns {Promise<string>} The encrypted private key\n     */\n    async export (password, format = 'libp2p-key') { // eslint-disable-line require-await\n      if (format === 'libp2p-key') {\n        return exporter.export(this.bytes, password)\n      } else {\n        throw errcode(new Error(`export format '${format}' is not supported`), 'ERR_INVALID_EXPORT_FORMAT')\n      }\n    }\n  }\n\n  function unmarshalSecp256k1PrivateKey (bytes) {\n    return new Secp256k1PrivateKey(bytes)\n  }\n\n  function unmarshalSecp256k1PublicKey (bytes) {\n    return new Secp256k1PublicKey(bytes)\n  }\n\n  async function generateKeyPair () {\n    const privateKeyBytes = await crypto.generateKey()\n    return new Secp256k1PrivateKey(privateKeyBytes)\n  }\n\n  return {\n    Secp256k1PublicKey,\n    Secp256k1PrivateKey,\n    unmarshalSecp256k1PrivateKey,\n    unmarshalSecp256k1PublicKey,\n    generateKeyPair\n  }\n}\n","'use strict'\n\nconst secp256k1 = require('secp256k1')\nconst sha = require('multihashing-async/src/sha')\nconst HASH_ALGORITHM = 'sha2-256'\n\nmodule.exports = (randomBytes) => {\n  const privateKeyLength = 32\n\n  function generateKey () {\n    let privateKey\n    do {\n      privateKey = randomBytes(32)\n    } while (!secp256k1.privateKeyVerify(privateKey))\n    return privateKey\n  }\n\n  async function hashAndSign (key, msg) {\n    const digest = await sha.digest(msg, HASH_ALGORITHM)\n    const sig = secp256k1.ecdsaSign(digest, key)\n    return secp256k1.signatureExport(sig.signature)\n  }\n\n  async function hashAndVerify (key, sig, msg) {\n    const digest = await sha.digest(msg, HASH_ALGORITHM)\n    sig = secp256k1.signatureImport(sig)\n    return secp256k1.ecdsaVerify(sig, digest, key)\n  }\n\n  function compressPublicKey (key) {\n    if (!secp256k1.publicKeyVerify(key)) {\n      throw new Error('Invalid public key')\n    }\n    return secp256k1.publicKeyConvert(key, true)\n  }\n\n  function decompressPublicKey (key) {\n    return secp256k1.publicKeyConvert(key, false)\n  }\n\n  function validatePrivateKey (key) {\n    if (!secp256k1.privateKeyVerify(key)) {\n      throw new Error('Invalid private key')\n    }\n  }\n\n  function validatePublicKey (key) {\n    if (!secp256k1.publicKeyVerify(key)) {\n      throw new Error('Invalid public key')\n    }\n  }\n\n  function computePublicKey (privateKey) {\n    validatePrivateKey(privateKey)\n    return secp256k1.publicKeyCreate(privateKey)\n  }\n\n  return {\n    generateKey,\n    privateKeyLength,\n    hashAndSign,\n    hashAndVerify,\n    compressPublicKey,\n    decompressPublicKey,\n    validatePrivateKey,\n    validatePublicKey,\n    computePublicKey\n  }\n}\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","{\n  \"_from\": \"elliptic@^6.5.2\",\n  \"_id\": \"elliptic@6.5.4\",\n  \"_inBundle\": false,\n  \"_integrity\": \"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==\",\n  \"_location\": \"/elliptic\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"type\": \"range\",\n    \"registry\": true,\n    \"raw\": \"elliptic@^6.5.2\",\n    \"name\": \"elliptic\",\n    \"escapedName\": \"elliptic\",\n    \"rawSpec\": \"^6.5.2\",\n    \"saveSpec\": null,\n    \"fetchSpec\": \"^6.5.2\"\n  },\n  \"_requiredBy\": [\n    \"/secp256k1\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz\",\n  \"_shasum\": \"da37cebd31e79a1367e941b592ed1fbebd58abbb\",\n  \"_spec\": \"elliptic@^6.5.2\",\n  \"_where\": \"/Users/vsantos/work/pl/gh/libp2p/js-libp2p/node_modules/secp256k1\",\n  \"author\": {\n    \"name\": \"Fedor Indutny\",\n    \"email\": \"fedor@indutny.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"bundleDependencies\": false,\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  },\n  \"deprecated\": false,\n  \"description\": \"EC cryptography\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"lib/elliptic.js\",\n  \"name\": \"elliptic\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"version\": \"6.5.4\"\n}\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict'\n\nconst errcode = require('err-code')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst hmac = require('../hmac')\n\nconst cipherMap = {\n  'AES-128': {\n    ivSize: 16,\n    keySize: 16\n  },\n  'AES-256': {\n    ivSize: 16,\n    keySize: 32\n  },\n  Blowfish: {\n    ivSize: 8,\n    cipherKeySize: 32\n  }\n}\n\n// Generates a set of keys for each party by stretching the shared key.\n// (myIV, theirIV, myCipherKey, theirCipherKey, myMACKey, theirMACKey)\nmodule.exports = async (cipherType, hash, secret) => {\n  const cipher = cipherMap[cipherType]\n\n  if (!cipher) {\n    const allowed = Object.keys(cipherMap).join(' / ')\n    throw errcode(new Error(`unknown cipher type '${cipherType}'. Must be ${allowed}`), 'ERR_INVALID_CIPHER_TYPE')\n  }\n\n  if (!hash) {\n    throw errcode(new Error('missing hash type'), 'ERR_MISSING_HASH_TYPE')\n  }\n\n  const cipherKeySize = cipher.keySize\n  const ivSize = cipher.ivSize\n  const hmacKeySize = 20\n  const seed = uint8ArrayFromString('key expansion')\n  const resultLength = 2 * (ivSize + cipherKeySize + hmacKeySize)\n\n  const m = await hmac.create(hash, secret)\n  let a = await m.digest(seed)\n\n  const result = []\n  let j = 0\n\n  while (j < resultLength) {\n    const b = await m.digest(uint8ArrayConcat([a, seed]))\n    let todo = b.length\n\n    if (j + todo > resultLength) {\n      todo = resultLength - j\n    }\n\n    result.push(b)\n    j += todo\n    a = await m.digest(a)\n  }\n\n  const half = resultLength / 2\n  const resultBuffer = uint8ArrayConcat(result)\n  const r1 = resultBuffer.slice(0, half)\n  const r2 = resultBuffer.slice(half, resultLength)\n\n  const createKey = (res) => ({\n    iv: res.slice(0, ivSize),\n    cipherKey: res.slice(ivSize, ivSize + cipherKeySize),\n    macKey: res.slice(ivSize + cipherKeySize)\n  })\n\n  return {\n    k1: createKey(r1),\n    k2: createKey(r2)\n  }\n}\n","'use strict'\n\nconst webcrypto = require('../webcrypto')\nconst lengths = require('./lengths')\n\nconst hashTypes = {\n  SHA1: 'SHA-1',\n  SHA256: 'SHA-256',\n  SHA512: 'SHA-512'\n}\n\nconst sign = async (key, data) => {\n  const buf = await webcrypto.get().subtle.sign({ name: 'HMAC' }, key, data)\n  return new Uint8Array(buf, buf.byteOffset, buf.byteLength)\n}\n\nexports.create = async function (hashType, secret) {\n  const hash = hashTypes[hashType]\n\n  const key = await webcrypto.get().subtle.importKey(\n    'raw',\n    secret,\n    {\n      name: 'HMAC',\n      hash: { name: hash }\n    },\n    false,\n    ['sign']\n  )\n\n  return {\n    async digest (data) { // eslint-disable-line require-await\n      return sign(key, data)\n    },\n    length: lengths[hashType]\n  }\n}\n","'use strict'\n\nmodule.exports = {\n  SHA1: 20,\n  SHA256: 32,\n  SHA512: 64\n}\n","'use strict'\n\nconst ecdh = require('./ecdh')\n\n// Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\nmodule.exports = async (curve) => ecdh.generateEphmeralKeyPair(curve) // eslint-disable-line require-await\n","'use strict'\n\nconst errcode = require('err-code')\nconst webcrypto = require('../webcrypto')\nconst { base64urlToBuffer } = require('../util')\nconst validateCurveType = require('./validate-curve-type')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\nconst bits = {\n  'P-256': 256,\n  'P-384': 384,\n  'P-521': 521\n}\n\nexports.generateEphmeralKeyPair = async function (curve) {\n  validateCurveType(Object.keys(bits), curve)\n  const pair = await webcrypto.get().subtle.generateKey(\n    {\n      name: 'ECDH',\n      namedCurve: curve\n    },\n    true,\n    ['deriveBits']\n  )\n\n  // forcePrivate is used for testing only\n  const genSharedKey = async (theirPub, forcePrivate) => {\n    let privateKey\n\n    if (forcePrivate) {\n      privateKey = await webcrypto.get().subtle.importKey(\n        'jwk',\n        unmarshalPrivateKey(curve, forcePrivate),\n        {\n          name: 'ECDH',\n          namedCurve: curve\n        },\n        false,\n        ['deriveBits']\n      )\n    } else {\n      privateKey = pair.privateKey\n    }\n\n    const keys = [\n      await webcrypto.get().subtle.importKey(\n        'jwk',\n        unmarshalPublicKey(curve, theirPub),\n        {\n          name: 'ECDH',\n          namedCurve: curve\n        },\n        false,\n        []\n      ),\n      privateKey\n    ]\n\n    const buffer = await webcrypto.get().subtle.deriveBits(\n      {\n        name: 'ECDH',\n        namedCurve: curve,\n        public: keys[0]\n      },\n      keys[1],\n      bits[curve]\n    )\n\n    return new Uint8Array(buffer, buffer.byteOffset, buffer.byteLength)\n  }\n\n  const publicKey = await webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n\n  return {\n    key: marshalPublicKey(publicKey),\n    genSharedKey\n  }\n}\n\nconst curveLengths = {\n  'P-256': 32,\n  'P-384': 48,\n  'P-521': 66\n}\n\n// Marshal converts a jwk encodec ECDH public key into the\n// form specified in section 4.3.6 of ANSI X9.62. (This is the format\n// go-ipfs uses)\nfunction marshalPublicKey (jwk) {\n  const byteLen = curveLengths[jwk.crv]\n\n  return uint8ArrayConcat([\n    Uint8Array.from([4]), // uncompressed point\n    base64urlToBuffer(jwk.x, byteLen),\n    base64urlToBuffer(jwk.y, byteLen)\n  ], 1 + byteLen * 2)\n}\n\n// Unmarshal converts a point, serialized by Marshal, into an jwk encoded key\nfunction unmarshalPublicKey (curve, key) {\n  const byteLen = curveLengths[curve]\n\n  if (uint8ArrayEquals(!key.slice(0, 1), Uint8Array.from([4]))) {\n    throw errcode(new Error('Cannot unmarshal public key - invalid key format'), 'ERR_INVALID_KEY_FORMAT')\n  }\n\n  return {\n    kty: 'EC',\n    crv: curve,\n    x: uint8ArrayToString(key.slice(1, byteLen + 1), 'base64url'),\n    y: uint8ArrayToString(key.slice(1 + byteLen), 'base64url'),\n    ext: true\n  }\n}\n\nconst unmarshalPrivateKey = (curve, key) => ({\n  ...unmarshalPublicKey(curve, key.public),\n  d: uint8ArrayToString(key.private, 'base64url')\n})\n","'use strict'\n\nconst errcode = require('err-code')\n\nmodule.exports = function (curveTypes, type) {\n  if (!curveTypes.includes(type)) {\n    const names = curveTypes.join(' / ')\n    throw errcode(new Error(`Unknown curve: ${type}. Must be ${names}`), 'ERR_INVALID_CURVE')\n  }\n}\n","'use strict';\n\nfunction withIs(Class, { className, symbolName }) {\n    const symbol = Symbol.for(symbolName);\n\n    const ClassIsWrapper = {\n        // The code below assigns the class wrapper to an object to trick\n        // JavaScript engines to show the name of the extended class when\n        // logging an instances.\n        // We are assigning an anonymous class (class wrapper) to the object\n        // with key `className` to keep the correct name.\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\n        [className]: class extends Class {\n            constructor(...args) {\n                super(...args);\n                Object.defineProperty(this, symbol, { value: true });\n            }\n\n            get [Symbol.toStringTag]() {\n                return className;\n            }\n        },\n    }[className];\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\n    const symbol = Symbol.for(symbolName);\n\n    /* eslint-disable object-shorthand */\n    const ClassIsWrapper = {\n        [className]: function (...args) {\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\n                return new ClassIsWrapper(...args);\n            }\n\n            const _this = Class.call(this, ...args) || this;\n\n            if (_this && !_this[symbol]) {\n                Object.defineProperty(_this, symbol, { value: true });\n            }\n\n            return _this;\n        },\n    }[className];\n    /* eslint-enable object-shorthand */\n\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n        get() {\n            return className;\n        },\n    });\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.PeerIdProto = (function() {\n\n    /**\n     * Properties of a PeerIdProto.\n     * @exports IPeerIdProto\n     * @interface IPeerIdProto\n     * @property {Uint8Array} id PeerIdProto id\n     * @property {Uint8Array|null} [pubKey] PeerIdProto pubKey\n     * @property {Uint8Array|null} [privKey] PeerIdProto privKey\n     */\n\n    /**\n     * Constructs a new PeerIdProto.\n     * @exports PeerIdProto\n     * @classdesc Represents a PeerIdProto.\n     * @implements IPeerIdProto\n     * @constructor\n     * @param {IPeerIdProto=} [p] Properties to set\n     */\n    function PeerIdProto(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PeerIdProto id.\n     * @member {Uint8Array} id\n     * @memberof PeerIdProto\n     * @instance\n     */\n    PeerIdProto.prototype.id = $util.newBuffer([]);\n\n    /**\n     * PeerIdProto pubKey.\n     * @member {Uint8Array} pubKey\n     * @memberof PeerIdProto\n     * @instance\n     */\n    PeerIdProto.prototype.pubKey = $util.newBuffer([]);\n\n    /**\n     * PeerIdProto privKey.\n     * @member {Uint8Array} privKey\n     * @memberof PeerIdProto\n     * @instance\n     */\n    PeerIdProto.prototype.privKey = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified PeerIdProto message. Does not implicitly {@link PeerIdProto.verify|verify} messages.\n     * @function encode\n     * @memberof PeerIdProto\n     * @static\n     * @param {IPeerIdProto} m PeerIdProto message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PeerIdProto.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(10).bytes(m.id);\n        if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\"))\n            w.uint32(18).bytes(m.pubKey);\n        if (m.privKey != null && Object.hasOwnProperty.call(m, \"privKey\"))\n            w.uint32(26).bytes(m.privKey);\n        return w;\n    };\n\n    /**\n     * Decodes a PeerIdProto message from the specified reader or buffer.\n     * @function decode\n     * @memberof PeerIdProto\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PeerIdProto} PeerIdProto\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PeerIdProto.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerIdProto();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.id = r.bytes();\n                break;\n            case 2:\n                m.pubKey = r.bytes();\n                break;\n            case 3:\n                m.privKey = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"id\"))\n            throw $util.ProtocolError(\"missing required 'id'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a PeerIdProto message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PeerIdProto\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PeerIdProto} PeerIdProto\n     */\n    PeerIdProto.fromObject = function fromObject(d) {\n        if (d instanceof $root.PeerIdProto)\n            return d;\n        var m = new $root.PeerIdProto();\n        if (d.id != null) {\n            if (typeof d.id === \"string\")\n                $util.base64.decode(d.id, m.id = $util.newBuffer($util.base64.length(d.id)), 0);\n            else if (d.id.length)\n                m.id = d.id;\n        }\n        if (d.pubKey != null) {\n            if (typeof d.pubKey === \"string\")\n                $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);\n            else if (d.pubKey.length)\n                m.pubKey = d.pubKey;\n        }\n        if (d.privKey != null) {\n            if (typeof d.privKey === \"string\")\n                $util.base64.decode(d.privKey, m.privKey = $util.newBuffer($util.base64.length(d.privKey)), 0);\n            else if (d.privKey.length)\n                m.privKey = d.privKey;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PeerIdProto message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PeerIdProto\n     * @static\n     * @param {PeerIdProto} m PeerIdProto\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PeerIdProto.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.id = \"\";\n            else {\n                d.id = [];\n                if (o.bytes !== Array)\n                    d.id = $util.newBuffer(d.id);\n            }\n            if (o.bytes === String)\n                d.pubKey = \"\";\n            else {\n                d.pubKey = [];\n                if (o.bytes !== Array)\n                    d.pubKey = $util.newBuffer(d.pubKey);\n            }\n            if (o.bytes === String)\n                d.privKey = \"\";\n            else {\n                d.privKey = [];\n                if (o.bytes !== Array)\n                    d.privKey = $util.newBuffer(d.privKey);\n            }\n        }\n        if (m.id != null && m.hasOwnProperty(\"id\")) {\n            d.id = o.bytes === String ? $util.base64.encode(m.id, 0, m.id.length) : o.bytes === Array ? Array.prototype.slice.call(m.id) : m.id;\n        }\n        if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n            d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n        }\n        if (m.privKey != null && m.hasOwnProperty(\"privKey\")) {\n            d.privKey = o.bytes === String ? $util.base64.encode(m.privKey, 0, m.privKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.privKey) : m.privKey;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PeerIdProto to JSON.\n     * @function toJSON\n     * @memberof PeerIdProto\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PeerIdProto.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PeerIdProto;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst codec = require('./codec')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\n/**\n * @typedef {(addr: Multiaddr) => Promise<string[]>} Resolver\n * @typedef {string | Multiaddr | Uint8Array | null} MultiaddrInput\n * @typedef {import('./types').MultiaddrObject} MultiaddrObject\n * @typedef {import('./types').Protocol} Protocol\n */\n\n/** @type {Map<string, Resolver>} */\nconst resolvers = new Map()\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr')\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Uint8Array, String or another Multiaddr instance\n * public key.\n *\n */\nclass Multiaddr {\n  /**\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * ```\n   *\n   * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n   */\n  constructor (addr) {\n    // default\n    if (addr == null) {\n      addr = ''\n    }\n\n    // Define symbol\n    Object.defineProperty(this, symbol, { value: true })\n\n    if (addr instanceof Uint8Array) {\n      /** @type {Uint8Array} - The raw bytes representing this multiaddress */\n      this.bytes = codec.fromBytes(addr)\n    } else if (typeof addr === 'string') {\n      if (addr.length > 0 && addr.charAt(0) !== '/') {\n        throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n      }\n      this.bytes = codec.fromString(addr)\n    } else if (Multiaddr.isMultiaddr(addr)) { // Multiaddr\n      this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\n    } else {\n      throw new Error('addr must be a string, Buffer, or another Multiaddr')\n    }\n  }\n\n  /**\n   * Returns Multiaddr as a String\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toString () {\n    return codec.bytesToString(this.bytes)\n  }\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   *\n   * @example\n   * ```js\n   * JSON.stringify(new Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Returns Multiaddr as a convinient options object to be used with net.createConnection\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n   * // { family: 4, host: '127.0.0.1', transport: 'tcp', port: 4001 }\n   * ```\n   */\n  toOptions () {\n    /** @type {MultiaddrObject} */\n    const opts = {}\n    const parsed = this.toString().split('/')\n    opts.family = parsed[1] === 'ip4' ? 4 : 6\n    opts.host = parsed[2]\n    opts.transport = parsed[3]\n    opts.port = parseInt(parsed[4])\n    return opts\n  }\n\n  /**\n   * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n   * left-to-right order. Each object contains the protocol code, protocol name,\n   * and the size of its address space in bits.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n   * // [ { code: 4, size: 32, name: 'ip4' },\n   * //   { code: 6, size: 16, name: 'tcp' } ]\n   * ```\n   *\n   * @returns {Protocol[]} protocols - All the protocols the address is composed of\n   */\n  protos () {\n    return this.protoCodes().map(code => Object.assign({}, protocols(code)))\n  }\n\n  /**\n   * Returns the codes of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n   * // [ 4, 6 ]\n   * ```\n   *\n   * @returns {number[]} protocol codes\n   */\n  protoCodes () {\n    const codes = []\n    const buf = this.bytes\n    let i = 0\n    while (i < buf.length) {\n      const code = varint.decode(buf, i)\n      const n = varint.decode.bytes\n\n      const p = protocols(code)\n      const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n      i += (size + n)\n      codes.push(code)\n    }\n\n    return codes\n  }\n\n  /**\n   * Returns the names of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n   * // [ 'ip4', 'tcp' ]\n   * ```\n   *\n   * @returns {string[]} protocol names\n   */\n  protoNames () {\n    return this.protos().map(proto => proto.name)\n  }\n\n  /**\n   * Returns a tuple of parts\n   *\n   * @example\n   * ```js\n   * new Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n   * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n   * ```\n   */\n  tuples () {\n    return codec.bytesToTuples(this.bytes)\n  }\n\n  /**\n   * Returns a tuple of string/number parts\n   * - tuples[][0] = code of protocol\n   * - tuples[][1] = contents of address\n   *\n   * @example\n   * ```js\n   * new Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n   * // [ [ 4, '127.0.0.1' ], [ 6, '4001' ] ]\n   * ```\n   */\n  stringTuples () {\n    const t = codec.bytesToTuples(this.bytes)\n    return codec.tuplesToStringTuples(t)\n  }\n\n  /**\n   * Encapsulates a Multiaddr in another Multiaddr\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n   *\n   * mh3.toString()\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n   * ```\n   *\n   * @param {MultiaddrInput} addr - Multiaddr to add into this Multiaddr\n   */\n  encapsulate (addr) {\n    addr = new Multiaddr(addr)\n    return new Multiaddr(this.toString() + addr.toString())\n  }\n\n  /**\n   * Decapsulates a Multiaddr from another Multiaddr\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n   *\n   * mh3.decapsulate(mh2).toString()\n   * // '/ip4/8.8.8.8/tcp/1080'\n   * ```\n   *\n   * @param {Multiaddr | string} addr - Multiaddr to remove from this Multiaddr\n   * @returns {Multiaddr}\n   */\n  decapsulate (addr) {\n    const addrString = addr.toString()\n    const s = this.toString()\n    const i = s.lastIndexOf(addrString)\n    if (i < 0) {\n      throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\n    }\n    return new Multiaddr(s.slice(0, i))\n  }\n\n  /**\n   * A more reliable version of `decapsulate` if you are targeting a\n   * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\n   * If the code is not present, the original `Multiaddr` is returned.\n   *\n   * @example\n   * ```js\n   * const addr = new Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n   * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n   *\n   * addr.decapsulateCode(421).toString()\n   * // '/ip4/0.0.0.0/tcp/8080'\n   *\n   * new Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n   * // '/ip4/127.0.0.1/tcp/8080'\n   * ```\n   *\n   * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\n   * @returns {Multiaddr}\n   */\n  decapsulateCode (code) {\n    const tuples = this.tuples()\n    for (let i = tuples.length - 1; i >= 0; i--) {\n      if (tuples[i][0] === code) {\n        return new Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\n      }\n    }\n    return this\n  }\n\n  /**\n   * Extract the peerId if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n   *\n   * // should return QmValidBase58string or null if the id is missing or invalid\n   * const peerId = mh1.getPeerId()\n   * ```\n   *\n   * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\n   */\n  getPeerId () {\n    try {\n      const tuples = this.stringTuples().filter((tuple) => {\n        if (tuple[0] === protocols.names.ipfs.code) {\n          return true\n        }\n        return false\n      })\n\n      // Get the last ipfs tuple ['ipfs', 'peerid string']\n      const tuple = tuples.pop()\n      if (tuple && tuple[1]) {\n        // Get multihash, unwrap from CID if needed\n        return uint8ArrayToString(new CID(tuple[1]).multihash, 'base58btc')\n      } else {\n        return null\n      }\n    } catch (e) {\n      return null\n    }\n  }\n\n  /**\n   * Extract the path if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n   *\n   * // should return utf8 string or null if the id is missing or invalid\n   * const path = mh1.getPath()\n   * ```js\n   *\n   * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\n   */\n  getPath () {\n    let path = null\n    try {\n      path = this.stringTuples().filter((tuple) => {\n        const proto = protocols(tuple[0])\n        if (proto.path) {\n          return true\n        }\n        return false\n      })[0][1]\n\n      if (!path) {\n        path = null\n      }\n    } catch (e) {\n      path = null\n    }\n    return path\n  }\n\n  /**\n   * Checks if two Multiaddrs are the same\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * mh1.equals(mh1)\n   * // true\n   *\n   * mh1.equals(mh2)\n   * // false\n   * ```\n   *\n   * @param {Multiaddr} addr\n   * @returns {boolean}\n   */\n  equals (addr) {\n    return uint8ArrayEquals(this.bytes, addr.bytes)\n  }\n\n  /**\n   * Resolve multiaddr if containing resolvable hostname.\n   *\n   * @example\n   * ```js\n   * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\n   * const mh1 = new Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n   * const resolvedMultiaddrs = await mh1.resolve()\n   * // [\n   * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n   * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n   * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\n   * // ]\n   * ```\n   *\n   * @returns {Promise<Array<Multiaddr>>}\n   */\n  async resolve () {\n    const resolvableProto = this.protos().find((p) => p.resolvable)\n\n    // Multiaddr is not resolvable?\n    if (!resolvableProto) {\n      return [this]\n    }\n\n    const resolver = resolvers.get(resolvableProto.name)\n    if (!resolver) {\n      throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\n    }\n\n    const addresses = await resolver(this)\n    return addresses.map((a) => new Multiaddr(a))\n  }\n\n  /**\n   * Gets a Multiaddrs node-friendly address object. Note that protocol information\n   * is left out: in Node (and most network systems) the protocol is unknowable\n   * given only the address.\n   *\n   * Has to be a ThinWaist Address, otherwise throws error\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n   * // {family: 4, address: '127.0.0.1', port: 4001}\n   * ```\n   *\n   * @returns {{family: 4 | 6, address: string, port: number}}\n   * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n   */\n  nodeAddress () {\n    const codes = this.protoCodes()\n    const names = this.protoNames()\n    const parts = this.toString().split('/').slice(1)\n\n    if (parts.length < 4) {\n      throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\n    } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n      throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\n    } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n      throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\n    }\n\n    return {\n      family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n      address: parts[1],\n      port: parseInt(parts[3]) // tcp or udp port\n    }\n  }\n\n  /**\n   * Returns if a Multiaddr is a Thin Waist address or not.\n   *\n   * Thin Waist is if a Multiaddr adheres to the standard combination of:\n   *\n   * `{IPv4, IPv6}/{TCP, UDP}`\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * const mh2 = new Multiaddr('/ip4/192.168.2.1/tcp/5001')\n   * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n   * const mh4 = new Multiaddr('/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n   * // <Multiaddr 047f0000010607d0de039302a503221220d52ebb89d85b02a284948203a62ff28389c57c9f42beec4ec20db76a64835843 - /ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a>\n   * mh1.isThinWaistAddress()\n   * // true\n   * mh2.isThinWaistAddress()\n   * // true\n   * mh3.isThinWaistAddress()\n   * // false\n   * mh4.isThinWaistAddress()\n   * // false\n   * ```\n   *\n   * @param {Multiaddr} [addr] - Defaults to using `this` instance\n   */\n  isThinWaistAddress (addr) {\n    const protos = (addr || this).protos()\n\n    if (protos.length !== 2) {\n      return false\n    }\n\n    if (protos[0].code !== 4 && protos[0].code !== 41) {\n      return false\n    }\n    if (protos[1].code !== 6 && protos[1].code !== 273) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Creates a Multiaddr from a node-friendly address object\n   *\n   * @example\n   * ```js\n   * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * ```\n   *\n   * @param {{family: 4 | 6, address: string, port: number}} addr\n   * @param {string} transport\n   */\n  static fromNodeAddress (addr, transport) {\n    if (!addr) { throw new Error('requires node address object') }\n    if (!transport) { throw new Error('requires transport protocol') }\n    let ip\n    switch (addr.family) {\n      case 4:\n        ip = 'ip4'\n        break\n      case 6:\n        ip = 'ip6'\n        break\n      default:\n        throw Error(`Invalid addr family. Got '${addr.family}' instead of 4 or 6`)\n    }\n    return new Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n  }\n\n  /**\n   * Returns if something is a Multiaddr that is a name\n   *\n   * @param {Multiaddr} addr\n   * @returns {boolean} isName\n   */\n  static isName (addr) {\n    if (!Multiaddr.isMultiaddr(addr)) {\n      return false\n    }\n\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable)\n  }\n\n  /**\n   * Check if object is a CID instance\n   *\n   * @param {any} value\n   * @returns {value is Multiaddr}\n   */\n  static isMultiaddr (value) {\n    return value instanceof Multiaddr || Boolean(value && value[symbol])\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string.\n   * For post Node.js v10.0.0.\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n   *\n   * @example\n   * ```js\n   * console.log(new Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n   * ```\n   *\n   * @returns {string}\n   */\n  [inspect] () {\n    return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string.\n   * Fallback for pre Node.js v10.0.0.\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n   * ```\n   *\n   * @returns {string}\n   */\n  inspect () {\n    return '<Multiaddr ' +\n      uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n      codec.bytesToString(this.bytes) + '>'\n  }\n}\n\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @returns {{table: Array, names: Object, codes: Object}}\n */\nMultiaddr.protocols = protocols\n\nMultiaddr.resolvers = resolvers\n\n/**\n * Static factory\n *\n * @param {MultiaddrInput} addr\n */\nfunction multiaddr (addr) {\n  return new Multiaddr(addr)\n}\n\nmodule.exports = { Multiaddr, multiaddr, protocols, resolvers }\n","'use strict'\n\nconst convert = require('./convert')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\n// export codec\nmodule.exports = {\n  stringToStringTuples,\n  stringTuplesToString,\n\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n\n  bytesToTuples,\n  tuplesToBytes,\n\n  bytesToString,\n  stringToBytes,\n\n  fromString,\n  fromBytes,\n  validateBytes,\n  isValidBytes,\n  cleanPath,\n\n  ParseError,\n  protoFromTuple,\n\n  sizeForAddr\n}\n\n// string -> [[str name, str addr]... ]\n/**\n * @param {string} str\n */\nfunction stringToStringTuples (str) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = protocols(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n// [[str name, str addr]... ] -> string\n/**\n * @param {[number, string?][]} tuples\n */\nfunction stringTuplesToString (tuples) {\n  /** @type {Array<string | undefined>} */\n  const parts = []\n  tuples.map((tup) => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1) {\n      parts.push(tup[1])\n    }\n    return null\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n/**\n * @param {Array<string[] | string >} tuples\n * @returns {[number , Uint8Array?][]}\n */\nfunction stringTuplesToTuples (tuples) {\n  return tuples.map((tup) => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toBytes(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n *\n * @param {Array<[number, Uint8Array?]>} tuples\n * @returns {Array<[number, string?]>}\n */\n\nfunction tuplesToStringTuples (tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup[1]) {\n      return [proto.code, convert.toString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Uint8Array ]... ] -> Uint8Array\n/**\n * @param {[number, Uint8Array?][]} tuples\n */\nfunction tuplesToBytes (tuples) {\n  return fromBytes(uint8ArrayConcat(tuples.map((/** @type {any[]} */ tup) => {\n    const proto = protoFromTuple(tup)\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\n/**\n * @param {import(\"./types\").Protocol} p\n * @param {Uint8Array | number[]} addr\n */\nfunction sizeForAddr (p, addr) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\n/**\n *\n * @param {Uint8Array} buf\n * @returns {Array<[number, Uint8Array?]>}\n */\nfunction bytesToTuples (buf) {\n  /** @type {Array<[number, Uint8Array?]>} */\n  const tuples = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n// Uint8Array -> String\n/**\n * @param {Uint8Array} buf\n */\nfunction bytesToString (buf) {\n  const a = bytesToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n// String -> Uint8Array\n/**\n * @param {string} str\n */\nfunction stringToBytes (str) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBytes(b)\n}\n\n// String -> Uint8Array\n/**\n * @param {string} str\n */\nfunction fromString (str) {\n  return stringToBytes(str)\n}\n\n// Uint8Array -> Uint8Array\n/**\n * @param {Uint8Array} buf\n */\nfunction fromBytes (buf) {\n  const err = validateBytes(buf)\n  if (err) throw err\n  return Uint8Array.from(buf) // copy\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction validateBytes (buf) {\n  try {\n    bytesToTuples(buf) // try to parse. will throw if breaks\n  } catch (err) {\n    return err\n  }\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction isValidBytes (buf) {\n  return validateBytes(buf) === undefined\n}\n\n/**\n * @param {string} str\n */\nfunction cleanPath (str) {\n  return '/' + str.trim().split('/').filter((/** @type {any} */ a) => a).join('/')\n}\n\n/**\n * @param {string} str\n */\nfunction ParseError (str) {\n  return new Error('Error parsing address: ' + str)\n}\n\n/**\n * @param {any[]} tup\n */\nfunction protoFromTuple (tup) {\n  const proto = protocols(tup[0])\n  return proto\n}\n","'use strict'\n\nconst ip = require('./ip')\nconst protocols = require('./protocols-table')\nconst CID = require('cids')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\n/**\n * @param {string} proto\n * @param {string | Uint8Array} a\n */\nfunction Convert (proto, a) {\n  if (a instanceof Uint8Array) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBytes(proto, a)\n  }\n}\n\n/**\n * Convert [code,Uint8Array] to string\n *\n * @param {number|string} proto\n * @param {Uint8Array} buf\n * @returns {string}\n */\nConvert.toString = function convertToString (proto, buf) {\n  const protocol = protocols(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf).toString()\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nConvert.toBytes = function convertToBytes (/** @type {string | number } */ proto, /** @type {string} */ str) {\n  const protocol = protocols(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\n/**\n * @param {string} ipString\n */\nfunction ip2bytes (ipString) {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\n/**\n * @param {Uint8Array} ipBuff\n */\nfunction bytes2ip (ipBuff) {\n  const ipString = ip.toString(ipBuff)\n  if (!ipString || !ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\n/**\n * @param {number} port\n */\nfunction port2bytes (port) {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction bytes2port (buf) {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(0)\n}\n\n/**\n * @param {string} str\n */\nfunction str2bytes (str) {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction bytes2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\n/**\n * @param {string | Uint8Array | CID} hash\n */\nfunction mh2bytes (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = new CID(hash).multihash\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\n/**\n * Converts bytes to bas58btc string\n *\n * @param {Uint8Array} buf\n * @returns {string} bas58btc string\n */\nfunction bytes2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\n/**\n * @param {string} str\n */\nfunction onion2bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\n/**\n * @param {string} str\n */\nfunction onion32bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction bytes2onion (buf) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return addr + ':' + port\n}\n","'use strict'\n\nconst isIp = require('is-ip')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nconst isIP = isIp\nconst isV4 = isIp.v4\nconst isV6 = isIp.v6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// @ts-ignore - this is copied from the link above better to keep it the same\nconst toBytes = function (ip, buff, offset) {\n  offset = ~~offset\n\n  let result\n\n  if (isV4(ip)) {\n    result = buff || new Uint8Array(offset + 4)\n    // @ts-ignore\n    // eslint-disable-next-line array-callback-return\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff\n    })\n  } else if (isV6(ip)) {\n    const sections = ip.split(':', 8)\n\n    let i\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = isV4(sections[i])\n      var v4Buffer\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i])\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv = [i, '1']\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    result = buff || new Uint8Array(offset + 16)\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16)\n      result[offset++] = (word >> 8) & 0xff\n      result[offset++] = word & 0xff\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip)\n  }\n\n  return result\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\n// @ts-ignore - this is copied from the link above better to keep it the same\nconst toString = function (buff, offset, length) {\n  offset = ~~offset\n  length = length || (buff.length - offset)\n\n  const result = []\n  let string\n  const view = new DataView(buff.buffer)\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i])\n    }\n    string = result.join('.')\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16))\n    }\n    string = result.join(':')\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n    string = string.replace(/:{3,4}/, '::')\n  }\n\n  return string\n}\n\nmodule.exports = {\n  isIP,\n  isV4,\n  isV6,\n  toBytes,\n  toString\n}\n","'use strict';\nconst ipRegex = require('ip-regex');\n\nconst isIp = string => ipRegex({exact: true}).test(string);\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\n\nmodule.exports = isIp;\n","'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n","'use strict'\n/** @typedef {import(\"./types\").Protocol} Protocol */\n\n/**\n * Protocols\n *\n * @param {number | string} proto\n * @returns {Protocol}\n */\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string') {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\n/** @type {Array<[number, number, string, (string|boolean)?, string?]>} */\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', 'resolvable'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, 'path'],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n/** @type {Record<string,Protocol>} */\nProtocols.names = {}\n/** @type {Record<number,Protocol>} */\nProtocols.codes = {}\n\n// populate tables\nProtocols.table.map(row => {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n  return null\n})\n\nProtocols.object = p\n\n/**\n *\n * Create a protocol\n *\n * @param {number} code\n * @param {number} size\n * @param {string} name\n * @param {any} [resolvable]\n * @param {any} [path]\n * @returns {Protocol}\n */\nfunction p (code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nmodule.exports = Protocols\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:peer-routing'), {\n  error: debug('libp2p:peer-routing:err')\n})\nconst errCode = require('err-code')\nconst {\n  storeAddresses,\n  uniquePeers,\n  requirePeers\n} = require('./content-routing/utils')\n\nconst merge = require('it-merge')\nconst { pipe } = require('it-pipe')\nconst first = require('it-first')\nconst drain = require('it-drain')\nconst filter = require('it-filter')\nconst {\n  setDelayedInterval,\n  clearDelayedInterval\n// @ts-ignore module with no types\n} = require('set-delayed-interval')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n * @typedef {import('libp2p-interfaces/src/peer-routing/types')} PeerRoutingModule\n */\n\n/**\n * @typedef {Object} RefreshManagerOptions\n * @property {boolean} [enabled = true] - Whether to enable the Refresh manager\n * @property {number} [bootDelay = 6e5] - Boot delay to start the Refresh Manager (in ms)\n * @property {number} [interval = 10e3] - Interval between each Refresh Manager run (in ms)\n *\n * @typedef {Object} PeerRoutingOptions\n * @property {RefreshManagerOptions} [refreshManager]\n */\n\nclass PeerRouting {\n  /**\n   * @class\n   * @param {import('./')} libp2p\n   */\n  constructor (libp2p) {\n    this._peerId = libp2p.peerId\n    this._peerStore = libp2p.peerStore\n    /** @type {PeerRoutingModule[]} */\n    this._routers = libp2p._modules.peerRouting || []\n\n    // If we have the dht, add it to the available peer routers\n    if (libp2p._dht && libp2p._config.dht.enabled) {\n      this._routers.push(libp2p._dht)\n    }\n\n    this._refreshManagerOptions = libp2p._options.peerRouting.refreshManager\n\n    this._findClosestPeersTask = this._findClosestPeersTask.bind(this)\n  }\n\n  /**\n   * Start peer routing service.\n   */\n  start () {\n    if (!this._routers.length || this._timeoutId || !this._refreshManagerOptions.enabled) {\n      return\n    }\n\n    this._timeoutId = setDelayedInterval(\n      this._findClosestPeersTask, this._refreshManagerOptions.interval, this._refreshManagerOptions.bootDelay\n    )\n  }\n\n  /**\n   * Recurrent task to find closest peers and add their addresses to the Address Book.\n   */\n  async _findClosestPeersTask () {\n    try {\n      // nb getClosestPeers adds the addresses to the address book\n      await drain(this.getClosestPeers(this._peerId.id))\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Stop peer routing service.\n   */\n  stop () {\n    clearDelayedInterval(this._timeoutId)\n  }\n\n  /**\n   * Iterates over all peer routers in parallel to find the given peer.\n   *\n   * @param {PeerId} id - The id of the peer to find\n   * @param {object} [options]\n   * @param {number} [options.timeout] - How long the query should run\n   * @returns {Promise<{ id: PeerId, multiaddrs: Multiaddr[] }>}\n   */\n  async findPeer (id, options) { // eslint-disable-line require-await\n    if (!this._routers.length) {\n      throw errCode(new Error('No peer routers available'), 'NO_ROUTERS_AVAILABLE')\n    }\n\n    const output = await pipe(\n      merge(\n        ...this._routers.map(router => [router.findPeer(id, options)])\n      ),\n      (source) => filter(source, Boolean),\n      // @ts-ignore findPeer resolves a Promise\n      (source) => storeAddresses(source, this._peerStore),\n      (source) => first(source)\n    )\n\n    if (output) {\n      return output\n    }\n\n    throw errCode(new Error('not found'), 'NOT_FOUND')\n  }\n\n  /**\n   * Attempt to find the closest peers on the network to the given key.\n   *\n   * @param {Uint8Array} key - A CID like key\n   * @param {Object} [options]\n   * @param {number} [options.timeout=30e3] - How long the query can take.\n   * @returns {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>}\n   */\n  async * getClosestPeers (key, options = { timeout: 30e3 }) {\n    if (!this._routers.length) {\n      throw errCode(new Error('No peer routers available'), 'NO_ROUTERS_AVAILABLE')\n    }\n\n    yield * pipe(\n      merge(\n        ...this._routers.map(router => router.getClosestPeers(key, options))\n      ),\n      (source) => storeAddresses(source, this._peerStore),\n      (source) => uniquePeers(source),\n      (source) => requirePeers(source)\n    )\n  }\n}\n\nmodule.exports = PeerRouting\n","'use strict'\n\nconst errCode = require('err-code')\nconst filter = require('it-filter')\nconst map = require('it-map')\nconst take = require('it-take')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Store the multiaddrs from every peer in the passed peer store\n *\n * @param {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>} source\n * @param {import('../peer-store')} peerStore\n */\nfunction storeAddresses (source, peerStore) {\n  return map(source, (peer) => {\n    // ensure we have the addresses for a given peer\n    peerStore.addressBook.add(peer.id, peer.multiaddrs)\n\n    return peer\n  })\n}\n\n/**\n * Filter peers by unique peer id\n *\n * @param {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>} source\n */\nfunction uniquePeers (source) {\n  /** @type Set<string> */\n  const seen = new Set()\n\n  return filter(source, (peer) => {\n    // dedupe by peer id\n    if (seen.has(peer.id.toString())) {\n      return false\n    }\n\n    seen.add(peer.id.toString())\n\n    return true\n  })\n}\n\n/**\n * Require at least `min` peers to be yielded from `source`\n *\n * @param {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>} source\n * @param {number} min\n */\nasync function * requirePeers (source, min = 1) {\n  let seen = 0\n\n  for await (const peer of source) {\n    seen++\n\n    yield peer\n  }\n\n  if (seen < min) {\n    throw errCode(new Error('not found'), 'NOT_FOUND')\n  }\n}\n\n/**\n * If `max` is passed, only take that number of peers from the source\n * otherwise take all the peers\n *\n * @param {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>} source\n * @param {number} [max]\n */\nfunction maybeLimitSource (source, max) {\n  if (max) {\n    return take(source, max)\n  }\n\n  return source\n}\n\nmodule.exports = {\n  storeAddresses,\n  uniquePeers,\n  requirePeers,\n  maybeLimitSource\n}\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n","'use strict'\n\nconst pushable = require('it-pushable')\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n *\n * @template T\n * @param {...AsyncIterable<T>|Iterable<T>} sources\n * @returns {AsyncIterable<T>}\n */\nconst merge = async function * (...sources) {\n  // @ts-ignore\n  const output = pushable()\n\n  setTimeout(async () => {\n    try {\n      await Promise.all(\n        sources.map(async (source) => {\n          for await (const item of source) {\n            output.push(item)\n          }\n        })\n      )\n\n      output.end()\n    } catch (err) {\n      output.end(err)\n    }\n  }, 0)\n\n  yield * output\n}\n\nmodule.exports = merge\n","const FIFO = require('fast-fifo')\n\nmodule.exports = (options) => {\n  options = options || {}\n  let onEnd\n\n  if (typeof options === 'function') {\n    onEnd = options\n    options = {}\n  } else {\n    onEnd = options.onEnd\n  }\n\n  let buffer = new FIFO()\n  let pushable, onNext, ended\n\n  const waitNext = () => {\n    if (!buffer.isEmpty()) {\n      if (options.writev) {\n        let next\n        const values = []\n        while (!buffer.isEmpty()) {\n          next = buffer.shift()\n          if (next.error) throw next.error\n          values.push(next.value)\n        }\n        return { done: next.done, value: values }\n      }\n\n      const next = buffer.shift()\n      if (next.error) throw next.error\n      return next\n    }\n\n    if (ended) return { done: true }\n\n    return new Promise((resolve, reject) => {\n      onNext = next => {\n        onNext = null\n        if (next.error) {\n          reject(next.error)\n        } else {\n          if (options.writev && !next.done) {\n            resolve({ done: next.done, value: [next.value] })\n          } else {\n            resolve(next)\n          }\n        }\n        return pushable\n      }\n    })\n  }\n\n  const bufferNext = next => {\n    if (onNext) return onNext(next)\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = err => {\n    buffer = new FIFO()\n    if (onNext) return onNext({ error: err })\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = value => {\n    if (ended) return pushable\n    return bufferNext({ done: false, value })\n  }\n  const end = err => {\n    if (ended) return pushable\n    ended = true\n    return err ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = () => {\n    buffer = new FIFO()\n    end()\n    return { done: true }\n  }\n  const _throw = err => {\n    end(err)\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end\n  }\n\n  if (!onEnd) return pushable\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err) {\n      _pushable.throw(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n      if (onEnd) {\n        onEnd()\n        onEnd = null\n      }\n      return { done: true }\n    },\n    push,\n    end (err) {\n      _pushable.end(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return pushable\n    }\n  }\n\n  return pushable\n}\n","const FixedFIFO = require('./fixed-size')\n\nmodule.exports = class FastFIFO {\n  constructor (hwm) {\n    this.hwm = hwm || 16\n    this.head = new FixedFIFO(this.hwm)\n    this.tail = this.head\n  }\n\n  push (val) {\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift () {\n    const val = this.tail.shift()\n    if (val === undefined && this.tail.next) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      return this.tail.shift()\n    }\n    return val\n  }\n\n  isEmpty () {\n    return this.head.isEmpty()\n  }\n}\n","module.exports = class FixedFIFO {\n  constructor (hwm) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data) {\n    if (this.buffer[this.top] !== undefined) return false\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n    return true\n  }\n\n  shift () {\n    const last = this.buffer[this.btm]\n    if (last === undefined) return undefined\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  isEmpty () {\n    return this.buffer[this.btm] === undefined\n  }\n}\n","const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n","'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\nconst intervals = new Map()\n\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically (task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task()\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => { throw err }, 1)\n      break\n    }\n\n    if (!intervals.get(id)) {\n      break\n    }\n\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval)\n\n      intervals.set(id, _timeout)\n    })\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval (task, interval, delay) {\n  delay = delay || interval\n\n  const id = _generateId()\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id)\n  }, delay)\n\n  intervals.set(id, _timeout)\n\n  return id\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval (id) {\n  const _timeout = intervals.get(id)\n\n  if (_timeout) {\n    clearTimeout(_timeout)\n    intervals.delete(id)\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst { messages, codes } = require('../errors')\nconst {\n  storeAddresses,\n  uniquePeers,\n  requirePeers,\n  maybeLimitSource\n} = require('./utils')\n\nconst merge = require('it-merge')\nconst { pipe } = require('it-pipe')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n * @typedef {import('cids')} CID\n * @typedef {import('libp2p-interfaces/src/content-routing/types')} ContentRoutingModule\n */\n\n/**\n * @typedef {Object} GetData\n * @property {PeerId} from\n * @property {Uint8Array} val\n */\n\nclass ContentRouting {\n  /**\n   * @class\n   * @param {import('..')} libp2p\n   */\n  constructor (libp2p) {\n    this.libp2p = libp2p\n    /** @type {ContentRoutingModule[]} */\n    this.routers = libp2p._modules.contentRouting || []\n    this.dht = libp2p._dht\n\n    // If we have the dht, add it to the available content routers\n    if (this.dht && libp2p._config.dht.enabled) {\n      this.routers.push(this.dht)\n    }\n  }\n\n  /**\n   * Iterates over all content routers in parallel to find providers of the given key.\n   *\n   * @param {CID} key - The CID key of the content to find\n   * @param {object} [options]\n   * @param {number} [options.timeout] - How long the query should run\n   * @param {number} [options.maxNumProviders] - maximum number of providers to find\n   * @returns {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>}\n   */\n  async * findProviders (key, options = {}) {\n    if (!this.routers.length) {\n      throw errCode(new Error('No content this.routers available'), 'NO_ROUTERS_AVAILABLE')\n    }\n\n    yield * pipe(\n      merge(\n        ...this.routers.map(router => router.findProviders(key, options))\n      ),\n      (source) => storeAddresses(source, this.libp2p.peerStore),\n      (source) => uniquePeers(source),\n      (source) => maybeLimitSource(source, options.maxNumProviders),\n      (source) => requirePeers(source)\n    )\n  }\n\n  /**\n   * Iterates over all content routers in parallel to notify it is\n   * a provider of the given key.\n   *\n   * @param {CID} key - The CID key of the content to find\n   * @returns {Promise<void>}\n   */\n  async provide (key) {\n    if (!this.routers.length) {\n      throw errCode(new Error('No content routers available'), 'NO_ROUTERS_AVAILABLE')\n    }\n\n    await Promise.all(this.routers.map((router) => router.provide(key)))\n  }\n\n  /**\n   * Store the given key/value pair in the DHT.\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} value\n   * @param {Object} [options] - put options\n   * @param {number} [options.minPeers] - minimum number of peers required to successfully put\n   * @returns {Promise<void>}\n   */\n  put (key, value, options) {\n    if (!this.libp2p.isStarted() || !this.dht.isStarted) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED)\n    }\n\n    return this.dht.put(key, value, options)\n  }\n\n  /**\n   * Get the value to the given key.\n   * Times out after 1 minute by default.\n   *\n   * @param {Uint8Array} key\n   * @param {Object} [options] - get options\n   * @param {number} [options.timeout] - optional timeout (default: 60000)\n   * @returns {Promise<GetData>}\n   */\n  get (key, options) {\n    if (!this.libp2p.isStarted() || !this.dht.isStarted) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED)\n    }\n\n    return this.dht.get(key, options)\n  }\n\n  /**\n   * Get the `n` values to the given key without sorting.\n   *\n   * @param {Uint8Array} key\n   * @param {number} nVals\n   * @param {Object} [options] - get options\n   * @param {number} [options.timeout] - optional timeout (default: 60000)\n   * @returns {Promise<GetData[]>}\n   */\n  async getMany (key, nVals, options) { // eslint-disable-line require-await\n    if (!this.libp2p.isStarted() || !this.dht.isStarted) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED)\n    }\n\n    return this.dht.getMany(key, nVals, options)\n  }\n}\n\nmodule.exports = ContentRouting\n","'use strict'\n\nexports.messages = {\n  NOT_STARTED_YET: 'The libp2p node is not started yet',\n  DHT_DISABLED: 'DHT is not available',\n  CONN_ENCRYPTION_REQUIRED: 'At least one connection encryption module is required'\n}\n\nexports.codes = {\n  DHT_DISABLED: 'ERR_DHT_DISABLED',\n  PUBSUB_NOT_STARTED: 'ERR_PUBSUB_NOT_STARTED',\n  DHT_NOT_STARTED: 'ERR_DHT_NOT_STARTED',\n  CONN_ENCRYPTION_REQUIRED: 'ERR_CONN_ENCRYPTION_REQUIRED',\n  ERR_CONNECTION_ENDED: 'ERR_CONNECTION_ENDED',\n  ERR_CONNECTION_FAILED: 'ERR_CONNECTION_FAILED',\n  ERR_NODE_NOT_STARTED: 'ERR_NODE_NOT_STARTED',\n  ERR_ALREADY_ABORTED: 'ERR_ALREADY_ABORTED',\n  ERR_NO_VALID_ADDRESSES: 'ERR_NO_VALID_ADDRESSES',\n  ERR_RELAYED_DIAL: 'ERR_RELAYED_DIAL',\n  ERR_DIALED_SELF: 'ERR_DIALED_SELF',\n  ERR_DISCOVERED_SELF: 'ERR_DISCOVERED_SELF',\n  ERR_DUPLICATE_TRANSPORT: 'ERR_DUPLICATE_TRANSPORT',\n  ERR_ENCRYPTION_FAILED: 'ERR_ENCRYPTION_FAILED',\n  ERR_HOP_REQUEST_FAILED: 'ERR_HOP_REQUEST_FAILED',\n  ERR_INVALID_KEY: 'ERR_INVALID_KEY',\n  ERR_INVALID_MESSAGE: 'ERR_INVALID_MESSAGE',\n  ERR_INVALID_PARAMETERS: 'ERR_INVALID_PARAMETERS',\n  ERR_INVALID_PEER: 'ERR_INVALID_PEER',\n  ERR_MUXER_UNAVAILABLE: 'ERR_MUXER_UNAVAILABLE',\n  ERR_TIMEOUT: 'ERR_TIMEOUT',\n  ERR_TRANSPORT_UNAVAILABLE: 'ERR_TRANSPORT_UNAVAILABLE',\n  ERR_TRANSPORT_DIAL_FAILED: 'ERR_TRANSPORT_DIAL_FAILED',\n  ERR_UNSUPPORTED_PROTOCOL: 'ERR_UNSUPPORTED_PROTOCOL',\n  ERR_INVALID_MULTIADDR: 'ERR_INVALID_MULTIADDR',\n  ERR_SIGNATURE_NOT_VALID: 'ERR_SIGNATURE_NOT_VALID'\n}\n","'use strict'\n\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\nconst errCode = require('err-code')\n\nconst { codes } = require('./errors')\n\n/**\n * Converts the given `peer` to a `Peer` object.\n * If a multiaddr is received, the addressBook is updated.\n *\n * @param {PeerId|Multiaddr|string} peer\n * @returns {{ id: PeerId, multiaddrs: Multiaddr[]|undefined }}\n */\nfunction getPeer (peer) {\n  if (typeof peer === 'string') {\n    peer = new Multiaddr(peer)\n  }\n\n  let addr\n  if (Multiaddr.isMultiaddr(peer)) {\n    addr = peer\n    const idStr = peer.getPeerId()\n\n    if (!idStr) {\n      throw errCode(\n        new Error(`${peer} does not have a valid peer type`),\n        codes.ERR_INVALID_MULTIADDR\n      )\n    }\n\n    try {\n      peer = PeerId.createFromB58String(idStr)\n    } catch (err) {\n      throw errCode(\n        new Error(`${peer} is not a valid peer type`),\n        codes.ERR_INVALID_MULTIADDR\n      )\n    }\n  }\n\n  return {\n    id: peer,\n    multiaddrs: addr ? [addr] : undefined\n  }\n}\n\nmodule.exports = getPeer\n","'use strict'\n\nconst mergeOptions = require('merge-options')\n// @ts-ignore no types in multiaddr path\nconst { dnsaddrResolver } = require('multiaddr/src/resolvers')\n\nconst Constants = require('./constants')\nconst { AGENT_VERSION } = require('./identify/consts')\nconst RelayConstants = require('./circuit/constants')\n\nconst { publicAddressesFirst } = require('libp2p-utils/src/address-sort')\nconst { FaultTolerance } = require('./transport-manager')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n * @typedef {import('.').Libp2pOptions} Libp2pOptions\n * @typedef {import('.').constructorOptions} constructorOptions\n */\n\nconst DefaultConfig = {\n  addresses: {\n    listen: [],\n    announce: [],\n    noAnnounce: [],\n    announceFilter: (/** @type {Multiaddr[]} */ multiaddrs) => multiaddrs\n  },\n  connectionManager: {\n    minConnections: 25\n  },\n  transportManager: {\n    faultTolerance: FaultTolerance.FATAL_ALL\n  },\n  dialer: {\n    maxParallelDials: Constants.MAX_PARALLEL_DIALS,\n    maxDialsPerPeer: Constants.MAX_PER_PEER_DIALS,\n    dialTimeout: Constants.DIAL_TIMEOUT,\n    resolvers: {\n      dnsaddr: dnsaddrResolver\n    },\n    addressSorter: publicAddressesFirst\n  },\n  host: {\n    agentVersion: AGENT_VERSION\n  },\n  metrics: {\n    enabled: false\n  },\n  peerStore: {\n    persistence: false,\n    threshold: 5\n  },\n  peerRouting: {\n    refreshManager: {\n      enabled: true,\n      interval: 6e5,\n      bootDelay: 10e3\n    }\n  },\n  config: {\n    dht: {\n      enabled: false,\n      kBucketSize: 20,\n      randomWalk: {\n        enabled: false, // disabled waiting for https://github.com/libp2p/js-libp2p-kad-dht/issues/86\n        queriesPerPeriod: 1,\n        interval: 300e3,\n        timeout: 10e3\n      }\n    },\n    nat: {\n      enabled: true,\n      ttl: 7200,\n      keepAlive: true,\n      gateway: null,\n      externalIp: null,\n      pmp: {\n        enabled: false\n      }\n    },\n    peerDiscovery: {\n      autoDial: true\n    },\n    pubsub: {\n      enabled: true\n    },\n    relay: {\n      enabled: true,\n      advertise: {\n        bootDelay: RelayConstants.ADVERTISE_BOOT_DELAY,\n        enabled: false,\n        ttl: RelayConstants.ADVERTISE_TTL\n      },\n      hop: {\n        enabled: false,\n        active: false\n      },\n      autoRelay: {\n        enabled: false,\n        maxListeners: 2\n      }\n    },\n    transport: {}\n  }\n}\n\n/**\n * @param {Libp2pOptions} opts\n * @returns {DefaultConfig & Libp2pOptions & constructorOptions}\n */\nmodule.exports.validate = (opts) => {\n  /** @type {DefaultConfig & Libp2pOptions & constructorOptions} */\n  const resultingOptions = mergeOptions(DefaultConfig, opts)\n\n  if (resultingOptions.modules.transport.length < 1) throw new Error(\"'options.modules.transport' must contain at least 1 transport\")\n\n  return resultingOptions\n}\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nconst protocols = require('../protocols-table')\n\nconst { code: dnsaddrCode } = protocols('dnsaddr')\n\n/**\n * @typedef {import('..').Multiaddr} Multiaddr\n */\n\n/**\n * Resolver for dnsaddr addresses.\n *\n * @param {Multiaddr} addr\n * @returns {Promise<string[]>}\n */\nasync function dnsaddrResolver (addr) {\n  const Resolver = require('./dns')\n  const resolver = new Resolver()\n\n  const peerId = addr.getPeerId()\n  const [, hostname] = addr.stringTuples().find(([proto]) => proto === dnsaddrCode) || []\n\n  const records = await resolver.resolveTxt(`_dnsaddr.${hostname}`)\n  let addresses = records.flat().map((a) => a.split('=')[1])\n\n  if (peerId) {\n    addresses = addresses.filter((entry) => entry.includes(peerId))\n  }\n\n  return addresses\n}\n\nmodule.exports = {\n  dnsaddrResolver\n}\n","'use strict'\n\n/** @type {import('dns').promises.Resolver} */\n// @ts-ignore - has no types\nconst dns = require('dns-over-http-resolver')\n\nmodule.exports = dns\n","'use strict'\nconst debug = require('debug')\nconst log = debug('dns-over-http-resolver')\nlog.error = debug('dns-over-http-resolver:error')\n\nconst Receptacle = require('receptacle')\n\nconst {\n  buildResource,\n  fetch,\n  getCacheKey\n} = require('./utils')\n\n/**\n * DNS over HTTP resolver.\n * Uses a list of servers to resolve DNS records with HTTP requests.\n */\nclass Resolver {\n  /**\n   * @class\n   * @param {object} [properties]\n   * @param {number} [properties.maxCache = 100] - maximum number of cached dns records.\n   */\n  constructor ({ maxCache = 100 } = {}) {\n    this._cache = new Receptacle({ max: maxCache })\n    this._servers = [\n      'https://cloudflare-dns.com/dns-query',\n      'https://dns.google/resolve'\n    ]\n  }\n\n  /**\n   * Get an array of the IP addresses currently configured for DNS resolution.\n   * These addresses are formatted according to RFC 5952. It can include a custom port.\n   *\n   * @returns {Array<string>}\n   */\n  getServers () {\n    return this._servers\n  }\n\n  /**\n   * Get a shuffled array of the IP addresses currently configured for DNS resolution.\n   * These addresses are formatted according to RFC 5952. It can include a custom port.\n   *\n   * @returns {Array<string>}\n   */\n  _getShuffledServers () {\n    const newServers = [].concat(this._servers)\n\n    for (let i = newServers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = newServers[i]\n      newServers[i] = newServers[j]\n      newServers[j] = temp\n    }\n\n    return newServers\n  }\n\n  /**\n   * Sets the IP address and port of servers to be used when performing DNS resolution.\n   *\n   * @param {Array<string>} servers - array of RFC 5952 formatted addresses.\n   */\n  setServers (servers) {\n    this._servers = servers\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into the appropriate DNS record.\n   *\n   * @param {string} hostname - host name to resolve.\n   * @param {string} [rrType = 'A'] - resource record type.\n   * @returns {Promise<*>}\n   */\n  resolve (hostname, rrType = 'A') {\n    switch (rrType) {\n      case 'A':\n        return this.resolve4(hostname)\n      case 'AAAA':\n        return this.resolve6(hostname)\n      case 'TXT':\n        return this.resolveTxt(hostname)\n      default:\n        throw new Error(`${rrType} is not supported`)\n    }\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into IPv4 addresses.\n   *\n   * @param {string} hostname - host name to resolve.\n   * @returns {Promise<Array<string>>}\n   */\n  async resolve4 (hostname) {\n    const recordType = 'A'\n    const cached = this._cache.get(getCacheKey(hostname, recordType))\n    if (cached) {\n      return cached\n    }\n\n    for (const server of this._getShuffledServers()) {\n      try {\n        const response = await fetch(buildResource({\n          serverResolver: server,\n          hostname,\n          recordType\n        }))\n\n        const d = await response.json()\n        const data = d.Answer.map(a => a.data)\n        const ttl = Math.min(d.Answer.map(a => a.TTL))\n\n        this._cache.set(getCacheKey(hostname, recordType), data, { ttl })\n\n        return data\n      } catch (err) {\n        log.error(`${server} could not resolve ${hostname} record ${recordType}`)\n      }\n    }\n\n    throw new Error(`Could not resolve ${hostname} record ${recordType}`)\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into IPv6 addresses.\n   *\n   * @param {string} hostname - host name to resolve.\n   * @returns {Promise<Array<string>>}\n   */\n  async resolve6 (hostname) {\n    const recordType = 'AAAA'\n    const cached = this._cache.get(getCacheKey(hostname, recordType))\n    if (cached) {\n      return cached\n    }\n\n    for (const server of this._getShuffledServers()) {\n      try {\n        const response = await fetch(buildResource({\n          serverResolver: server,\n          hostname,\n          recordType\n        }))\n\n        const d = await response.json()\n        const data = d.Answer.map(a => a.data)\n        const ttl = Math.min(d.Answer.map(a => a.TTL))\n\n        this._cache.set(getCacheKey(hostname, recordType), data, { ttl })\n\n        return data\n      } catch (err) {\n        log.error(`${server} could not resolve ${hostname} record ${recordType}`)\n      }\n    }\n\n    throw new Error(`Could not resolve ${hostname} record ${recordType}`)\n  }\n\n  /**\n   * Uses the DNS protocol to resolve the given host name into a Text record.\n   *\n   * @param {string} hostname - host name to resolve.\n   * @returns {Promise<Array<Array<string>>>}\n   */\n  async resolveTxt (hostname) {\n    const recordType = 'TXT'\n    const cached = this._cache.get(getCacheKey(hostname, recordType))\n    if (cached) {\n      return cached\n    }\n\n    for (const server of this._getShuffledServers()) {\n      try {\n        const response = await fetch(buildResource({\n          serverResolver: server,\n          hostname,\n          recordType\n        }))\n\n        const d = await response.json()\n        const data = d.Answer.map(a => [a.data.replace(/['\"]+/g, '')])\n        const ttl = Math.min(d.Answer.map(a => a.TTL))\n\n        this._cache.set(getCacheKey(hostname, recordType), data, { ttl })\n\n        return data\n      } catch (err) {\n        log.error(`${server} could not resolve ${hostname} record ${recordType}`)\n      }\n    }\n\n    throw new Error(`Could not resolve ${hostname} record ${recordType}`)\n  }\n}\n\nResolver.Resolver = Resolver\nmodule.exports = Resolver\n","'use strict'\n\nmodule.exports = Receptacle\nvar toMS = require('ms')\nvar cache = Receptacle.prototype\nvar counter = new Date() % 1e9\n\nfunction getUID () { return (Math.random() * 1e9 >>> 0) + (counter++) }\n\n/**\n * Creates a cache with a maximum key size.\n *\n * @constructor\n * @param {Object} options\n * @param {Number} [options.max=Infinity] the maximum number of keys allowed in the cache (lru).\n * @param {Array} [options.items=[]] the default items in the cache.\n */\nfunction Receptacle (options) {\n  options = options || {}\n  this.id = options.id || getUID()\n  this.max = options.max || Infinity\n  this.items = options.items || []\n  this._lookup = {}\n  this.size = this.items.length\n  this.lastModified = new Date(options.lastModified || new Date())\n\n  // Setup initial timers and indexes for the cache.\n  for (var item, ttl, i = this.items.length; i--;) {\n    item = this.items[i]\n    ttl = new Date(item.expires) - new Date()\n    this._lookup[item.key] = item\n    if (ttl > 0) this.expire(item.key, ttl)\n    else if (ttl <= 0) this.delete(item.key)\n  }\n}\n\n/**\n * Tests if a key is currently in the cache.\n * Does not check if slot is empty.\n *\n * @param {String} key - the key to retrieve from the cache.\n * @return {Boolean}\n */\ncache.has = function (key) {\n  return key in this._lookup\n}\n\n/**\n * Retrieves a key from the cache and marks it as recently used.\n *\n * @param {String} key - the key to retrieve from the cache.\n * @return {*}\n */\ncache.get = function (key) {\n  if (!this.has(key)) return null\n  var record = this._lookup[key]\n  // Update expiry for \"refresh\" keys\n  if (record.refresh) this.expire(key, record.refresh)\n  // Move to front of the line.\n  this.items.splice(this.items.indexOf(record), 1)\n  this.items.push(record)\n  return record.value\n}\n\n/**\n * Retrieves user meta data for a cached item.\n *\n * @param {String} key - the key to retrieve meta data from the cache.\n * @return {*}\n */\ncache.meta = function (key) {\n  if (!this.has(key)) return null\n  var record = this._lookup[key]\n  if (!('meta' in record)) return null\n  return record.meta\n}\n\n/**\n * Puts a key into the cache with an optional expiry time.\n *\n * @param {String} key - the key for the value in the cache.\n * @param {*} value - the value to place at the key.\n * @param {Number} [options.ttl] - a time after which the key will be removed.\n * @return {Receptacle}\n */\ncache.set = function (key, value, options) {\n  var oldRecord = this._lookup[key]\n  var record = this._lookup[key] = { key: key, value: value }\n  // Mark cache as modified.\n  this.lastModified = new Date()\n\n  if (oldRecord) {\n    // Replace an old key.\n    clearTimeout(oldRecord.timeout)\n    this.items.splice(this.items.indexOf(oldRecord), 1, record)\n  } else {\n    // Remove least used item if needed.\n    if (this.size >= this.max) this.delete(this.items[0].key)\n    // Add a new key.\n    this.items.push(record)\n    this.size++\n  }\n\n  if (options) {\n    // Setup key expiry.\n    if ('ttl' in options) this.expire(key, options.ttl)\n    // Store user options in the record.\n    if ('meta' in options) record.meta = options.meta\n    // Mark a auto refresh key.\n    if (options.refresh) record.refresh = options.ttl\n  }\n\n  return this\n}\n\n/**\n * Deletes an item from the cache.\n *\n * @param {String} key - the key to remove.\n * @return {Receptacle}\n */\ncache.delete = function (key) {\n  var record = this._lookup[key]\n  if (!record) return false\n  this.lastModified = new Date()\n  this.items.splice(this.items.indexOf(record), 1)\n  clearTimeout(record.timeout)\n  delete this._lookup[key]\n  this.size--\n  return this\n}\n\n/**\n * Utility to register a key that will be removed after some time.\n *\n * @param {String} key - the key to remove.\n * @param {Number} [ms] - the timeout before removal.\n * @return {Receptacle}\n */\ncache.expire = function (key, ttl) {\n  var ms = ttl || 0\n  var record = this._lookup[key]\n  if (!record) return this\n  if (typeof ms === 'string') ms = toMS(ttl)\n  if (typeof ms !== 'number') throw new TypeError('Expiration time must be a string or number.')\n  clearTimeout(record.timeout)\n  record.timeout = setTimeout(this.delete.bind(this, record.key), ms)\n  record.expires = Number(new Date()) + ms\n  return this\n}\n\n/**\n * Deletes all items from the cache.\n * @return {Receptacle}\n */\ncache.clear = function () {\n  for (var i = this.items.length; i--;) this.delete(this.items[i].key)\n  return this\n}\n\n/**\n * Fixes serialization issues in polyfilled environments.\n * Ensures non-cyclical serialized object.\n */\ncache.toJSON = function () {\n  var items = new Array(this.items.length)\n  var item\n  for (var i = items.length; i--;) {\n    item = this.items[i]\n    items[i] = {\n      key: item.key,\n      meta: item.meta,\n      value: item.value,\n      expires: item.expires,\n      refresh: item.refresh\n    }\n  }\n\n  return {\n    id: this.id,\n    max: isFinite(this.max) ? this.max : undefined,\n    lastModified: this.lastModified,\n    items: items\n  }\n}\n","'use strict'\n\nconst { default: nativeFetch, Headers } = require('native-fetch')\n\n/**\n * Build fetch resource for request.\n *\n * @param {object} properties\n * @param {string} properties.serverResolver\n * @param {string} properties.hostname\n * @param {string} properties.recordType\n * @returns {string}\n */\nfunction buildResource ({ serverResolver, hostname, recordType }) {\n  return `${serverResolver}?name=${hostname}&type=${recordType}`\n}\n\nmodule.exports.buildResource = buildResource\n\n/**\n * Use fetch to find the record.\n *\n * @param {object} resource\n * @returns {Promise}\n */\nfunction fetch (resource) {\n  return nativeFetch(resource, {\n    headers: new Headers({\n      accept: 'application/dns-json'\n    })\n  })\n}\n\nmodule.exports.fetch = fetch\n\n/**\n * Creates cache key composed by recordType and hostname.\n *\n * @param {string} hostname\n * @param {string} recordType\n * @returns {string}\n */\nfunction getCacheKey (hostname, recordType) {\n  return `${recordType}_${hostname}`\n}\n\nmodule.exports.getCacheKey = getCacheKey\n","'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","'use strict'\n\nmodule.exports = {\n  DIAL_TIMEOUT: 30e3, // How long in ms a dial attempt is allowed to take\n  MAX_PARALLEL_DIALS: 100, // Maximum allowed concurrent dials\n  MAX_PER_PEER_DIALS: 4, // Allowed parallel dials per DialRequest\n  METRICS: {\n    computeThrottleMaxQueueSize: 1000,\n    computeThrottleTimeout: 2000,\n    movingAverageIntervals: [\n      60 * 1000, // 1 minute\n      5 * 60 * 1000, // 5 minutes\n      15 * 60 * 1000 // 15 minutes\n    ],\n    maxOldPeersRetention: 50\n  }\n}\n","'use strict'\n\n// @ts-ignore file not listed within the file list of projects\nconst libp2pVersion = require('../../package.json').version\n\nmodule.exports.PROTOCOL_VERSION = 'ipfs/0.1.0'\nmodule.exports.AGENT_VERSION = `js-libp2p/${libp2pVersion}`\nmodule.exports.MULTICODEC_IDENTIFY = '/ipfs/id/1.0.0'\nmodule.exports.MULTICODEC_IDENTIFY_PUSH = '/ipfs/id/push/1.0.0'\n","{\n  \"name\": \"libp2p\",\n  \"version\": \"0.31.0-rc.0\",\n  \"description\": \"JavaScript implementation of libp2p, a modular peer to peer network stack\",\n  \"leadMaintainer\": \"Jacob Heun <jacobheun@gmail.com>\",\n  \"main\": \"src/index.js\",\n  \"types\": \"dist/src/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"src/*\": [\n        \"dist/src/*\",\n        \"dist/src/*/index\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist\",\n    \"src\"\n  ],\n  \"scripts\": {\n    \"lint\": \"aegir lint\",\n    \"build\": \"aegir build\",\n    \"build:proto\": \"npm run build:proto:circuit && npm run build:proto:identify && npm run build:proto:plaintext && npm run build:proto:address-book && npm run build:proto:proto-book && npm run build:proto:peer-record && npm run build:proto:envelope\",\n    \"build:proto:circuit\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/circuit/protocol/index.js ./src/circuit/protocol/index.proto\",\n    \"build:proto:identify\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/identify/message.js ./src/identify/message.proto\",\n    \"build:proto:plaintext\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/insecure/proto.js ./src/insecure/proto.proto\",\n    \"build:proto:address-book\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/peer-store/persistent/pb/address-book.js ./src/peer-store/persistent/pb/address-book.proto\",\n    \"build:proto:proto-book\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/peer-store/persistent/pb/proto-book.js ./src/peer-store/persistent/pb/proto-book.proto\",\n    \"build:proto:peer-record\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/record/peer-record/peer-record.js ./src/record/peer-record/peer-record.proto\",\n    \"build:proto:envelope\": \"pbjs -t static-module -w commonjs --force-number --no-verify --no-delimited --no-create --no-beautify --no-defaults --lint eslint-disable -o src/record/envelope/envelope.js ./src/record/envelope/envelope.proto\",\n    \"build:proto-types\": \"npm run build:proto-types:circuit && npm run build:proto-types:identify && npm run build:proto-types:plaintext && npm run build:proto-types:address-book && npm run build:proto-types:proto-book && npm run build:proto-types:peer-record && npm run build:proto-types:envelope\",\n    \"build:proto-types:circuit\": \"pbts -o src/circuit/protocol/index.d.ts src/circuit/protocol/index.js\",\n    \"build:proto-types:identify\": \"pbts -o src/identify/message.d.ts src/identify/message.js\",\n    \"build:proto-types:plaintext\": \"pbts -o src/insecure/proto.d.ts src/insecure/proto.js\",\n    \"build:proto-types:address-book\": \"pbts -o src/peer-store/persistent/pb/address-book.d.ts src/peer-store/persistent/pb/address-book.js\",\n    \"build:proto-types:proto-book\": \"pbts -o src/peer-store/persistent/pb/proto-book.d.ts src/peer-store/persistent/pb/proto-book.js\",\n    \"build:proto-types:peer-record\": \"pbts -o src/record/peer-record/peer-record.d.ts src/record/peer-record/peer-record.js\",\n    \"build:proto-types:envelope\": \"pbts -o src/record/envelope/envelope.d.ts src/record/envelope/envelope.js\",\n    \"test\": \"aegir test\",\n    \"test:ts\": \"aegir build --no-bundle && npm run test --prefix test/ts-use\",\n    \"test:node\": \"aegir test -t node -f \\\"./test/**/*.{node,spec}.js\\\"\",\n    \"test:browser\": \"aegir test -t browser\",\n    \"test:examples\": \"cd examples && npm run test:all\",\n    \"prepare\": \"aegir build --no-bundle\",\n    \"release\": \"aegir release -t node -t browser\",\n    \"release-minor\": \"aegir release --type minor -t node -t browser\",\n    \"release-major\": \"aegir release --type major -t node -t browser\",\n    \"coverage\": \"nyc --reporter=text --reporter=lcov npm run test:node\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/libp2p/js-libp2p.git\"\n  },\n  \"keywords\": [\n    \"libp2p\",\n    \"network\",\n    \"p2p\",\n    \"peer\",\n    \"peer-to-peer\",\n    \"IPFS\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/libp2p/js-libp2p/issues\"\n  },\n  \"homepage\": \"https://libp2p.io\",\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"browser\": {\n    \"@motrix/nat-api\": false\n  },\n  \"eslintConfig\": {\n    \"extends\": \"ipfs\",\n    \"ignorePatterns\": [\n      \"!.aegir.js\",\n      \"test/ts-use\"\n    ]\n  },\n  \"dependencies\": {\n    \"@motrix/nat-api\": \"^0.3.1\",\n    \"abort-controller\": \"^3.0.0\",\n    \"aggregate-error\": \"^3.1.0\",\n    \"any-signal\": \"^2.1.1\",\n    \"bignumber.js\": \"^9.0.1\",\n    \"cids\": \"^1.1.5\",\n    \"class-is\": \"^1.1.0\",\n    \"debug\": \"^4.3.1\",\n    \"err-code\": \"^3.0.0\",\n    \"es6-promisify\": \"^6.1.1\",\n    \"events\": \"^3.3.0\",\n    \"hashlru\": \"^2.3.0\",\n    \"interface-datastore\": \"^3.0.3\",\n    \"ipfs-utils\": \"^6.0.0\",\n    \"it-all\": \"^1.0.4\",\n    \"it-buffer\": \"^0.1.2\",\n    \"it-drain\": \"^1.0.3\",\n    \"it-filter\": \"^1.0.1\",\n    \"it-first\": \"^1.0.4\",\n    \"it-handshake\": \"^2.0.0\",\n    \"it-length-prefixed\": \"^5.0.2\",\n    \"it-map\": \"^1.0.4\",\n    \"it-merge\": \"1.0.0\",\n    \"it-pipe\": \"^1.1.0\",\n    \"it-take\": \"1.0.0\",\n    \"libp2p-crypto\": \"^0.19.0\",\n    \"libp2p-interfaces\": \"^0.10.0\",\n    \"libp2p-utils\": \"^0.3.1\",\n    \"mafmt\": \"^9.0.0\",\n    \"merge-options\": \"^3.0.4\",\n    \"moving-average\": \"^1.0.0\",\n    \"multiaddr\": \"^9.0.1\",\n    \"multicodec\": \"^3.0.1\",\n    \"multihashing-async\": \"^2.1.2\",\n    \"multistream-select\": \"^2.0.0\",\n    \"mutable-proxy\": \"^1.0.0\",\n    \"node-forge\": \"^0.10.0\",\n    \"p-any\": \"^3.0.0\",\n    \"p-fifo\": \"^1.0.0\",\n    \"p-retry\": \"^4.4.0\",\n    \"p-settle\": \"^4.1.1\",\n    \"peer-id\": \"^0.14.2\",\n    \"private-ip\": \"^2.1.0\",\n    \"protobufjs\": \"^6.10.2\",\n    \"retimer\": \"^3.0.0\",\n    \"sanitize-filename\": \"^1.6.3\",\n    \"set-delayed-interval\": \"^1.0.0\",\n    \"streaming-iterables\": \"^5.0.2\",\n    \"timeout-abort-controller\": \"^1.1.1\",\n    \"varint\": \"^6.0.0\",\n    \"xsalsa20\": \"^1.1.0\"\n  },\n  \"devDependencies\": {\n    \"@nodeutils/defaults-deep\": \"^1.1.0\",\n    \"@types/es6-promisify\": \"^6.0.0\",\n    \"@types/node-forge\": \"^0.9.7\",\n    \"@types/varint\": \"^6.0.0\",\n    \"abortable-iterator\": \"^3.0.0\",\n    \"aegir\": \"^33.0.0\",\n    \"buffer\": \"^6.0.3\",\n    \"chai-bytes\": \"^0.1.2\",\n    \"chai-string\": \"^1.5.0\",\n    \"delay\": \"^5.0.0\",\n    \"interop-libp2p\": \"^0.3.0\",\n    \"into-stream\": \"^6.0.0\",\n    \"ipfs-http-client\": \"^49.0.4\",\n    \"it-concat\": \"^1.0.0\",\n    \"it-pair\": \"^1.0.0\",\n    \"it-pushable\": \"^1.4.0\",\n    \"libp2p\": \".\",\n    \"libp2p-bootstrap\": \"^0.12.3\",\n    \"libp2p-delegated-content-routing\": \"^0.10.0\",\n    \"libp2p-delegated-peer-routing\": \"^0.9.0\",\n    \"libp2p-floodsub\": \"^0.25.0\",\n    \"libp2p-gossipsub\": \"^0.8.0\",\n    \"libp2p-kad-dht\": \"^0.21.0\",\n    \"libp2p-mdns\": \"^0.16.0\",\n    \"libp2p-mplex\": \"^0.10.1\",\n    \"libp2p-noise\": \"^2.0.0\",\n    \"libp2p-tcp\": \"^0.15.1\",\n    \"libp2p-webrtc-star\": \"^0.22.0\",\n    \"libp2p-websockets\": \"^0.15.0\",\n    \"multihashes\": \"^4.0.2\",\n    \"nock\": \"^13.0.3\",\n    \"p-defer\": \"^3.0.0\",\n    \"p-times\": \"^3.0.0\",\n    \"p-wait-for\": \"^3.2.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"sinon\": \"^10.0.0\",\n    \"uint8arrays\": \"^2.1.3\",\n    \"util\": \"^0.12.3\"\n  },\n  \"contributors\": [\n    \"David Dias <daviddias.p@gmail.com>\",\n    \"Jacob Heun <jacobheun@gmail.com>\",\n    \"Vasco Santos <vasco.santos@moxy.studio>\",\n    \"Alan Shaw <alan@tableflip.io>\",\n    \"Alex Potsides <alex@achingbrain.net>\",\n    \"Cayman <caymannava@gmail.com>\",\n    \"Pedro Teixeira <i@pgte.me>\",\n    \"Friedel Ziegelmayer <dignifiedquire@gmail.com>\",\n    \"Maciej Krüger <mkg20001@gmail.com>\",\n    \"Hugo Dias <mail@hugodias.me>\",\n    \"Volker Mische <volker.mische@gmail.com>\",\n    \"dirkmc <dirkmdev@gmail.com>\",\n    \"Richard Littauer <richard.littauer@gmail.com>\",\n    \"a1300 <matthias-knopp@gmx.net>\",\n    \"Elven <mon.samuel@qq.com>\",\n    \"Andrew Nesbitt <andrewnez@gmail.com>\",\n    \"ᴠɪᴄᴛᴏʀ ʙᴊᴇʟᴋʜᴏʟᴍ <victorbjelkholm@gmail.com>\",\n    \"Giovanni T. Parra <fiatjaf@gmail.com>\",\n    \"Ryan Bell <ryan@piing.net>\",\n    \"Thomas Eizinger <thomas@eizinger.io>\",\n    \"Samlior <samlior@foxmail.com>\",\n    \"Didrik Nordström <didrik@betamos.se>\",\n    \"Julien Bouquillon <contact@revolunet.com>\",\n    \"Kevin Kwok <antimatter15@gmail.com>\",\n    \"Kevin Lacker <lacker@gmail.com>\",\n    \"Miguel Mota <miguelmota2@gmail.com>\",\n    \"Nuno Nogueira <nunofmn@gmail.com>\",\n    \"Philipp Muens <raute1337@gmx.de>\",\n    \"RasmusErik Voel Jensen <github@solsort.com>\",\n    \"Smite Chow <xiaopengyou@live.com>\",\n    \"Soeren <nikorpoulsen@gmail.com>\",\n    \"Sönke Hahn <soenkehahn@gmail.com>\",\n    \"TJKoury <TJKoury@gmail.com>\",\n    \"Tiago Alves <alvesjtiago@gmail.com>\",\n    \"Daijiro Wachi <daijiro.wachi@gmail.com>\",\n    \"Cindy Wu <ciindy.wu@gmail.com>\",\n    \"Chris Bratlien <chrisbratlien@gmail.com>\",\n    \"Yusef Napora <yusef@napora.org>\",\n    \"Zane Starr <zcstarr@gmail.com>\",\n    \"Bernd Strehl <bernd.strehl@gmail.com>\",\n    \"ebinks <elizabethjbinks@gmail.com>\",\n    \"Ethan Lam <elmemphis2000@gmail.com>\",\n    \"isan_rivkin <isanrivkin@gmail.com>\",\n    \"robertkiel <robert.kiel@validitylabs.org>\",\n    \"Aleksei <vozhdb@gmail.com>\",\n    \"Fei Liu <liu.feiwood@gmail.com>\",\n    \"Felipe Martins <felipebrasil93@gmail.com>\",\n    \"Florian-Merle <florian.david.merle@gmail.com>\",\n    \"Francis Gulotta <wizard@roborooter.com>\",\n    \"Dmitriy Ryajov <dryajov@gmail.com>\",\n    \"Henrique Dias <hacdias@gmail.com>\",\n    \"Irakli Gozalishvili <rfobic@gmail.com>\",\n    \"Diogo Silva <fsdiogo@gmail.com>\",\n    \"Joel Gustafson <joelg@mit.edu>\"\n  ]\n}\n","'use strict'\n\nconst minute = 60 * 1000\n\nmodule.exports = {\n  ADVERTISE_BOOT_DELAY: 15 * minute, // Delay before HOP relay service is advertised on the network\n  ADVERTISE_TTL: 30 * minute, // Delay Between HOP relay service advertisements on the network\n  CIRCUIT_PROTO_CODE: 290, // Multicodec code\n  HOP_METADATA_KEY: 'hop_relay', // PeerStore metadaBook key for HOP relay service\n  HOP_METADATA_VALUE: 'true', // PeerStore metadaBook value for HOP relay service\n  RELAY_RENDEZVOUS_NS: '/libp2p/relay' // Relay HOP relay service namespace for discovery\n}\n","'use strict'\n\nconst isPrivate = require('./multiaddr/is-private')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @typedef {Object} Address\n * @property {Multiaddr} multiaddr peer multiaddr.\n * @property {boolean} isCertified obtained from a signed peer record.\n */\n\n/**\n * Compare function for array.sort().\n * This sort aims to move the private adresses to the end of the array.\n * In case of equality, a certified address will come first.\n *\n * @param {Address} a\n * @param {Address} b\n * @returns {number}\n */\nfunction addressesPublicFirstCompareFunction (a, b) {\n  const isAPrivate = isPrivate(a.multiaddr)\n  const isBPrivate = isPrivate(b.multiaddr)\n\n  if (isAPrivate && !isBPrivate) {\n    return 1\n  } else if (!isAPrivate && isBPrivate) {\n    return -1\n  }\n  // Check certified?\n  if (a.isCertified && !b.isCertified) {\n    return -1\n  } else if (!a.isCertified && b.isCertified) {\n    return 1\n  }\n\n  return 0\n}\n\n/**\n * Sort given addresses by putting public addresses first.\n * In case of equality, a certified address will come first.\n *\n * @param {Array<Address>} addresses\n * @returns {Array<Address>}\n */\nfunction publicAddressesFirst (addresses) {\n  return [...addresses].sort(addressesPublicFirstCompareFunction)\n}\n\nmodule.exports.publicAddressesFirst = publicAddressesFirst\n","'use strict'\n\n// @ts-ignore private-ip does not publish types\nconst isIpPrivate = require('private-ip')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Check if a given multiaddr has a private address.\n *\n * @param {Multiaddr} ma\n * @returns {boolean}\n */\nfunction isPrivate (ma) {\n  const { address } = ma.nodeAddress()\n\n  return isIpPrivate(address)\n}\n\nmodule.exports = isPrivate\n","'use strict'\n\nmodule.exports = require('./lib')\n","const Netmask = require('netmask').Netmask;\nconst ip_regex = require('ip-regex');\n\nconst PRIVATE_IP_RANGES = ['0.0.0.0/8', '10.0.0.0/8', '100.64.0.0/10', '127.0.0.0/8', '169.254.0.0/16', '172.16.0.0/12', '192.0.0.0/24', '192.0.0.0/29', '192.0.0.8/32', '192.0.0.9/32', '192.0.0.10/32', '192.0.0.170/32', '192.0.0.171/32', '192.0.2.0/24', '192.31.196.0/24', '192.52.193.0/24', '192.88.99.0/24', '192.168.0.0/16', '192.175.48.0/24', '198.18.0.0/15', '198.51.100.0/24', '203.0.113.0/24', '240.0.0.0/4', '255.255.255.255/32'];\n\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new Netmask(ip_range));\n\nfunction ipv4_check(ip_addr) {\n  for (let r of NETMASK_RANGES) {\n    if (r.contains(ip_addr)) return true;\n  }\n\n  return false;\n}\n\nfunction ipv6_check(ip_addr) {\n  return (/^::$/.test(ip_addr) || /^::1$/.test(ip_addr) || /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) || /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) || /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) || /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ip_addr) || /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ip_addr) || /^ff([0-9a-fA-F]{2,2}):/i.test(ip_addr)\n  );\n}\n\nmodule.exports = ip_addr => {\n  if (ip_regex.v6().test(ip_addr)) return ipv6_check(ip_addr);else if (ip_regex().test(ip_addr) || ip_addr.startsWith('0')) return ipv4_check(ip_addr);\n\n  return false;\n};","// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:transports'), {\n  error: debug('libp2p:transports:err')\n})\n\nconst pSettle = require('p-settle')\nconst { codes } = require('./errors')\nconst errCode = require('err-code')\n\nconst { updateSelfPeerRecord } = require('./record/utils')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/transport/types').TransportFactory<any, any>} TransportFactory\n * @typedef {import('libp2p-interfaces/src/transport/types').Transport<any, any>} Transport\n *\n * @typedef {Object} TransportManagerProperties\n * @property {import('./')} libp2p\n * @property {import('./upgrader')} upgrader\n *\n * @typedef {Object} TransportManagerOptions\n * @property {number} [faultTolerance = FAULT_TOLERANCE.FATAL_ALL] - Address listen error tolerance.\n */\n\nclass TransportManager {\n  /**\n   * @class\n   * @param {TransportManagerProperties & TransportManagerOptions} options\n   */\n  constructor ({ libp2p, upgrader, faultTolerance = FAULT_TOLERANCE.FATAL_ALL }) {\n    this.libp2p = libp2p\n    this.upgrader = upgrader\n    /** @type {Map<string, Transport>} */\n    this._transports = new Map()\n    this._listeners = new Map()\n    this._listenerOptions = new Map()\n    this.faultTolerance = faultTolerance\n  }\n\n  /**\n   * Adds a `Transport` to the manager\n   *\n   * @param {string} key\n   * @param {TransportFactory} Transport\n   * @param {*} transportOptions - Additional options to pass to the transport\n   * @returns {void}\n   */\n  add (key, Transport, transportOptions = {}) {\n    log('adding %s', key)\n    if (!key) {\n      throw errCode(new Error(`Transport must have a valid key, was given '${key}'`), codes.ERR_INVALID_KEY)\n    }\n    if (this._transports.has(key)) {\n      throw errCode(new Error('There is already a transport with this key'), codes.ERR_DUPLICATE_TRANSPORT)\n    }\n\n    const transport = new Transport({\n      ...transportOptions,\n      libp2p: this.libp2p,\n      upgrader: this.upgrader\n    })\n\n    this._transports.set(key, transport)\n    this._listenerOptions.set(key, transportOptions.listenerOptions || {})\n    if (!this._listeners.has(key)) {\n      this._listeners.set(key, [])\n    }\n  }\n\n  /**\n   * Stops all listeners\n   *\n   * @async\n   */\n  async close () {\n    const tasks = []\n    for (const [key, listeners] of this._listeners) {\n      log('closing listeners for %s', key)\n      while (listeners.length) {\n        const listener = listeners.pop()\n        listener.removeAllListeners('listening')\n        listener.removeAllListeners('close')\n        tasks.push(listener.close())\n      }\n    }\n\n    await Promise.all(tasks)\n    log('all listeners closed')\n    for (const key of this._listeners.keys()) {\n      this._listeners.set(key, [])\n    }\n  }\n\n  /**\n   * Dials the given Multiaddr over it's supported transport\n   *\n   * @param {Multiaddr} ma\n   * @param {*} options\n   * @returns {Promise<Connection>}\n   */\n  async dial (ma, options) {\n    const transport = this.transportForMultiaddr(ma)\n    if (!transport) {\n      throw errCode(new Error(`No transport available for address ${String(ma)}`), codes.ERR_TRANSPORT_UNAVAILABLE)\n    }\n\n    try {\n      return await transport.dial(ma, options)\n    } catch (err) {\n      if (!err.code) err.code = codes.ERR_TRANSPORT_DIAL_FAILED\n      throw err\n    }\n  }\n\n  /**\n   * Returns all Multiaddr's the listeners are using\n   *\n   * @returns {Multiaddr[]}\n   */\n  getAddrs () {\n    /** @type {Multiaddr[]} */\n    let addrs = []\n    for (const listeners of this._listeners.values()) {\n      for (const listener of listeners) {\n        addrs = [...addrs, ...listener.getAddrs()]\n      }\n    }\n    return addrs\n  }\n\n  /**\n   * Returns all the transports instances.\n   *\n   * @returns {IterableIterator<Transport>}\n   */\n  getTransports () {\n    return this._transports.values()\n  }\n\n  /**\n   * Finds a transport that matches the given Multiaddr\n   *\n   * @param {Multiaddr} ma\n   * @returns {Transport|null}\n   */\n  transportForMultiaddr (ma) {\n    for (const transport of this._transports.values()) {\n      const addrs = transport.filter([ma])\n      if (addrs.length) return transport\n    }\n    return null\n  }\n\n  /**\n   * Starts listeners for each listen Multiaddr.\n   *\n   * @async\n   * @param {Multiaddr[]} addrs - addresses to attempt to listen on\n   */\n  async listen (addrs) {\n    if (!addrs || addrs.length === 0) {\n      log('no addresses were provided for listening, this node is dial only')\n      return\n    }\n\n    const couldNotListen = []\n    for (const [key, transport] of this._transports.entries()) {\n      const supportedAddrs = transport.filter(addrs)\n      const tasks = []\n\n      // For each supported multiaddr, create a listener\n      for (const addr of supportedAddrs) {\n        log('creating listener for %s on %s', key, addr)\n        const listener = transport.createListener(this._listenerOptions.get(key))\n        this._listeners.get(key).push(listener)\n\n        // Track listen/close events\n        listener.on('listening', () => updateSelfPeerRecord(this.libp2p))\n        listener.on('close', () => updateSelfPeerRecord(this.libp2p))\n\n        // We need to attempt to listen on everything\n        tasks.push(listener.listen(addr))\n      }\n\n      // Keep track of transports we had no addresses for\n      if (tasks.length === 0) {\n        couldNotListen.push(key)\n        continue\n      }\n\n      const results = await pSettle(tasks)\n      // If we are listening on at least 1 address, succeed.\n      // TODO: we should look at adding a retry (`p-retry`) here to better support\n      // listening on remote addresses as they may be offline. We could then potentially\n      // just wait for any (`p-any`) listener to succeed on each transport before returning\n      const isListening = results.find(r => r.isFulfilled === true)\n      if (!isListening && this.faultTolerance !== FAULT_TOLERANCE.NO_FATAL) {\n        throw errCode(new Error(`Transport (${key}) could not listen on any available address`), codes.ERR_NO_VALID_ADDRESSES)\n      }\n    }\n\n    // If no transports were able to listen, throw an error. This likely\n    // means we were given addresses we do not have transports for\n    if (couldNotListen.length === this._transports.size) {\n      const message = `no valid addresses were provided for transports [${couldNotListen}]`\n      if (this.faultTolerance === FAULT_TOLERANCE.FATAL_ALL) {\n        throw errCode(new Error(message), codes.ERR_NO_VALID_ADDRESSES)\n      }\n      log(`libp2p in dial mode only: ${message}`)\n    }\n  }\n\n  /**\n   * Removes the given transport from the manager.\n   * If a transport has any running listeners, they will be closed.\n   *\n   * @async\n   * @param {string} key\n   */\n  async remove (key) {\n    log('removing %s', key)\n    if (this._listeners.has(key)) {\n      // Close any running listeners\n      for (const listener of this._listeners.get(key)) {\n        listener.removeAllListeners('listening')\n        listener.removeAllListeners('close')\n        await listener.close()\n      }\n    }\n\n    this._transports.delete(key)\n    this._listeners.delete(key)\n  }\n\n  /**\n   * Removes all transports from the manager.\n   * If any listeners are running, they will be closed.\n   *\n   * @async\n   */\n  async removeAll () {\n    const tasks = []\n    for (const key of this._transports.keys()) {\n      tasks.push(this.remove(key))\n    }\n\n    await Promise.all(tasks)\n  }\n}\n\n/**\n * Enum Transport Manager Fault Tolerance values.\n * FATAL_ALL should be used for failing in any listen circumstance.\n * NO_FATAL should be used for not failing when not listening.\n *\n * @readonly\n * @enum {number}\n */\nconst FAULT_TOLERANCE = {\n  FATAL_ALL: 0,\n  NO_FATAL: 1\n}\n\nTransportManager.FaultTolerance = FAULT_TOLERANCE\n\nmodule.exports = TransportManager\n","'use strict';\nconst pReflect = require('p-reflect');\nconst pLimit = require('p-limit');\n\nmodule.exports = async (array, options = {}) => {\n\tconst {concurrency = Infinity} = options;\n\tconst limit = pLimit(concurrency);\n\n\treturn Promise.all(array.map(element => {\n\t\tif (element && typeof element.then === 'function') { // eslint-disable-line promise/prefer-await-to-then\n\t\t\treturn pReflect(element);\n\t\t}\n\n\t\tif (typeof element === 'function') {\n\t\t\treturn pReflect(limit(() => element()));\n\t\t}\n\n\t\treturn pReflect(Promise.resolve(element));\n\t}));\n};\n","'use strict';\n\nconst pReflect = async promise => {\n\ttry {\n\t\tconst value = await promise;\n\t\treturn {\n\t\t\tisFulfilled: true,\n\t\t\tisRejected: false,\n\t\t\tvalue\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tisFulfilled: false,\n\t\t\tisRejected: true,\n\t\t\treason: error\n\t\t};\n\t}\n};\n\nmodule.exports = pReflect;\n// TODO: Remove this for the next major release\nmodule.exports.default = pReflect;\n","'use strict';\nconst pTry = require('p-try');\n\nconst pLimit = concurrency => {\n\tif (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {\n\t\treturn Promise.reject(new TypeError('Expected `concurrency` to be a number from 1 and up'));\n\t}\n\n\tconst queue = [];\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.length > 0) {\n\t\t\tqueue.shift()();\n\t\t}\n\t};\n\n\tconst run = (fn, resolve, ...args) => {\n\t\tactiveCount++;\n\n\t\tconst result = pTry(fn, ...args);\n\n\t\tresolve(result);\n\n\t\tresult.then(next, next);\n\t};\n\n\tconst enqueue = (fn, resolve, ...args) => {\n\t\tif (activeCount < concurrency) {\n\t\t\trun(fn, resolve, ...args);\n\t\t} else {\n\t\t\tqueue.push(run.bind(null, fn, resolve, ...args));\n\t\t}\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => enqueue(fn, resolve, ...args));\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.length\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.length = 0;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn generator;\n};\n\nmodule.exports = pLimit;\nmodule.exports.default = pLimit;\n","'use strict';\n\nconst pTry = (fn, ...arguments_) => new Promise(resolve => {\n\tresolve(fn(...arguments_));\n});\n\nmodule.exports = pTry;\n// TODO: remove this in the next major version\nmodule.exports.default = pTry;\n","'use strict'\n\nconst Envelope = require('./envelope')\nconst PeerRecord = require('./peer-record')\n\n/**\n * @typedef {import('../')} Libp2p\n */\n\n/**\n * Create (or update if existing) self peer record and store it in the AddressBook.\n *\n * @param {Libp2p} libp2p\n * @returns {Promise<void>}\n */\nasync function updateSelfPeerRecord (libp2p) {\n  const peerRecord = new PeerRecord({\n    peerId: libp2p.peerId,\n    multiaddrs: libp2p.multiaddrs\n  })\n  const envelope = await Envelope.seal(peerRecord, libp2p.peerId)\n  libp2p.peerStore.addressBook.consumePeerRecord(envelope)\n}\n\nmodule.exports.updateSelfPeerRecord = updateSelfPeerRecord\n","'use strict'\n\nconst errCode = require('err-code')\nconst uint8arraysConcat = require('uint8arrays/concat')\nconst uint8arraysFromString = require('uint8arrays/from-string')\n// @ts-ignore libp2p-crypto does not support types\nconst cryptoKeys = require('libp2p-crypto/src/keys')\nconst PeerId = require('peer-id')\nconst varint = require('varint')\nconst uint8arraysEquals = require('uint8arrays/equals')\n\nconst { codes } = require('../../errors')\nconst { Envelope: Protobuf } = require('./envelope')\n\n/**\n * @typedef {import('libp2p-interfaces/src/record/types').Record} Record\n */\n\nclass Envelope {\n  /**\n   * The Envelope is responsible for keeping an arbitrary signed record\n   * by a libp2p peer.\n   *\n   * @class\n   * @param {object} params\n   * @param {PeerId} params.peerId\n   * @param {Uint8Array} params.payloadType\n   * @param {Uint8Array} params.payload - marshaled record\n   * @param {Uint8Array} params.signature - signature of the domain string :: type hint :: payload.\n   */\n  constructor ({ peerId, payloadType, payload, signature }) {\n    this.peerId = peerId\n    this.payloadType = payloadType\n    this.payload = payload\n    this.signature = signature\n\n    // Cache\n    this._marshal = undefined\n  }\n\n  /**\n   * Marshal the envelope content.\n   *\n   * @returns {Uint8Array}\n   */\n  marshal () {\n    if (this._marshal) {\n      return this._marshal\n    }\n\n    const publicKey = cryptoKeys.marshalPublicKey(this.peerId.pubKey)\n\n    this._marshal = Protobuf.encode({\n      publicKey: publicKey,\n      payloadType: this.payloadType,\n      payload: this.payload,\n      signature: this.signature\n    }).finish()\n\n    return this._marshal\n  }\n\n  /**\n   * Verifies if the other Envelope is identical to this one.\n   *\n   * @param {Envelope} other\n   * @returns {boolean}\n   */\n  equals (other) {\n    return uint8arraysEquals(this.peerId.pubKey.bytes, other.peerId.pubKey.bytes) &&\n      uint8arraysEquals(this.payloadType, other.payloadType) &&\n      uint8arraysEquals(this.payload, other.payload) &&\n      uint8arraysEquals(this.signature, other.signature)\n  }\n\n  /**\n   * Validate envelope data signature for the given domain.\n   *\n   * @param {string} domain\n   * @returns {Promise<boolean>}\n   */\n  validate (domain) {\n    const signData = formatSignaturePayload(domain, this.payloadType, this.payload)\n\n    return this.peerId.pubKey.verify(signData, this.signature)\n  }\n}\n\n/**\n * Helper function that prepares a Uint8Array to sign or verify a signature.\n *\n * @param {string} domain\n * @param {Uint8Array} payloadType\n * @param {Uint8Array} payload\n * @returns {Uint8Array}\n */\nconst formatSignaturePayload = (domain, payloadType, payload) => {\n  // When signing, a peer will prepare a Uint8Array by concatenating the following:\n  // - The length of the domain separation string string in bytes\n  // - The domain separation string, encoded as UTF-8\n  // - The length of the payload_type field in bytes\n  // - The value of the payload_type field\n  // - The length of the payload field in bytes\n  // - The value of the payload field\n\n  const domainUint8Array = uint8arraysFromString(domain)\n  const domainLength = varint.encode(domainUint8Array.byteLength)\n  const payloadTypeLength = varint.encode(payloadType.length)\n  const payloadLength = varint.encode(payload.length)\n\n  return uint8arraysConcat([\n    new Uint8Array(domainLength),\n    domainUint8Array,\n    new Uint8Array(payloadTypeLength),\n    payloadType,\n    new Uint8Array(payloadLength),\n    payload\n  ])\n}\n\n/**\n * Unmarshal a serialized Envelope protobuf message.\n *\n * @param {Uint8Array} data\n * @returns {Promise<Envelope>}\n */\nEnvelope.createFromProtobuf = async (data) => {\n  const envelopeData = Protobuf.decode(data)\n  const peerId = await PeerId.createFromPubKey(envelopeData.publicKey)\n\n  return new Envelope({\n    peerId,\n    payloadType: envelopeData.payloadType,\n    payload: envelopeData.payload,\n    signature: envelopeData.signature\n  })\n}\n\n/**\n * Seal marshals the given Record, places the marshaled bytes inside an Envelope\n * and signs it with the given peerId's private key.\n *\n * @async\n * @param {Record} record\n * @param {PeerId} peerId\n * @returns {Promise<Envelope>}\n */\nEnvelope.seal = async (record, peerId) => {\n  const domain = record.domain\n  const payloadType = record.codec\n  const payload = record.marshal()\n\n  const signData = formatSignaturePayload(domain, payloadType, payload)\n  const signature = await peerId.privKey.sign(signData)\n\n  return new Envelope({\n    peerId,\n    payloadType,\n    payload,\n    signature\n  })\n}\n\n/**\n * Open and certify a given marshalled envelope.\n * Data is unmarshalled and the signature validated for the given domain.\n *\n * @param {Uint8Array} data\n * @param {string} domain\n * @returns {Promise<Envelope>}\n */\nEnvelope.openAndCertify = async (data, domain) => {\n  const envelope = await Envelope.createFromProtobuf(data)\n  const valid = await envelope.validate(domain)\n\n  if (!valid) {\n    throw errCode(new Error('envelope signature is not valid for the given domain'), codes.ERR_SIGNATURE_NOT_VALID)\n  }\n\n  return envelope\n}\n\nmodule.exports = Envelope\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.Envelope = (function() {\n\n    /**\n     * Properties of an Envelope.\n     * @exports IEnvelope\n     * @interface IEnvelope\n     * @property {Uint8Array|null} [publicKey] Envelope publicKey\n     * @property {Uint8Array|null} [payloadType] Envelope payloadType\n     * @property {Uint8Array|null} [payload] Envelope payload\n     * @property {Uint8Array|null} [signature] Envelope signature\n     */\n\n    /**\n     * Constructs a new Envelope.\n     * @exports Envelope\n     * @classdesc Represents an Envelope.\n     * @implements IEnvelope\n     * @constructor\n     * @param {IEnvelope=} [p] Properties to set\n     */\n    function Envelope(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Envelope publicKey.\n     * @member {Uint8Array} publicKey\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.publicKey = $util.newBuffer([]);\n\n    /**\n     * Envelope payloadType.\n     * @member {Uint8Array} payloadType\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payloadType = $util.newBuffer([]);\n\n    /**\n     * Envelope payload.\n     * @member {Uint8Array} payload\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payload = $util.newBuffer([]);\n\n    /**\n     * Envelope signature.\n     * @member {Uint8Array} signature\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.signature = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Envelope message. Does not implicitly {@link Envelope.verify|verify} messages.\n     * @function encode\n     * @memberof Envelope\n     * @static\n     * @param {IEnvelope} m Envelope message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Envelope.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n            w.uint32(10).bytes(m.publicKey);\n        if (m.payloadType != null && Object.hasOwnProperty.call(m, \"payloadType\"))\n            w.uint32(18).bytes(m.payloadType);\n        if (m.payload != null && Object.hasOwnProperty.call(m, \"payload\"))\n            w.uint32(26).bytes(m.payload);\n        if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n            w.uint32(42).bytes(m.signature);\n        return w;\n    };\n\n    /**\n     * Decodes an Envelope message from the specified reader or buffer.\n     * @function decode\n     * @memberof Envelope\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Envelope} Envelope\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Envelope.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Envelope();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.publicKey = r.bytes();\n                break;\n            case 2:\n                m.payloadType = r.bytes();\n                break;\n            case 3:\n                m.payload = r.bytes();\n                break;\n            case 5:\n                m.signature = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Envelope message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Envelope\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Envelope} Envelope\n     */\n    Envelope.fromObject = function fromObject(d) {\n        if (d instanceof $root.Envelope)\n            return d;\n        var m = new $root.Envelope();\n        if (d.publicKey != null) {\n            if (typeof d.publicKey === \"string\")\n                $util.base64.decode(d.publicKey, m.publicKey = $util.newBuffer($util.base64.length(d.publicKey)), 0);\n            else if (d.publicKey.length)\n                m.publicKey = d.publicKey;\n        }\n        if (d.payloadType != null) {\n            if (typeof d.payloadType === \"string\")\n                $util.base64.decode(d.payloadType, m.payloadType = $util.newBuffer($util.base64.length(d.payloadType)), 0);\n            else if (d.payloadType.length)\n                m.payloadType = d.payloadType;\n        }\n        if (d.payload != null) {\n            if (typeof d.payload === \"string\")\n                $util.base64.decode(d.payload, m.payload = $util.newBuffer($util.base64.length(d.payload)), 0);\n            else if (d.payload.length)\n                m.payload = d.payload;\n        }\n        if (d.signature != null) {\n            if (typeof d.signature === \"string\")\n                $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n            else if (d.signature.length)\n                m.signature = d.signature;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Envelope message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Envelope\n     * @static\n     * @param {Envelope} m Envelope\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Envelope.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.publicKey = \"\";\n            else {\n                d.publicKey = [];\n                if (o.bytes !== Array)\n                    d.publicKey = $util.newBuffer(d.publicKey);\n            }\n            if (o.bytes === String)\n                d.payloadType = \"\";\n            else {\n                d.payloadType = [];\n                if (o.bytes !== Array)\n                    d.payloadType = $util.newBuffer(d.payloadType);\n            }\n            if (o.bytes === String)\n                d.payload = \"\";\n            else {\n                d.payload = [];\n                if (o.bytes !== Array)\n                    d.payload = $util.newBuffer(d.payload);\n            }\n            if (o.bytes === String)\n                d.signature = \"\";\n            else {\n                d.signature = [];\n                if (o.bytes !== Array)\n                    d.signature = $util.newBuffer(d.signature);\n            }\n        }\n        if (m.publicKey != null && m.hasOwnProperty(\"publicKey\")) {\n            d.publicKey = o.bytes === String ? $util.base64.encode(m.publicKey, 0, m.publicKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.publicKey) : m.publicKey;\n        }\n        if (m.payloadType != null && m.hasOwnProperty(\"payloadType\")) {\n            d.payloadType = o.bytes === String ? $util.base64.encode(m.payloadType, 0, m.payloadType.length) : o.bytes === Array ? Array.prototype.slice.call(m.payloadType) : m.payloadType;\n        }\n        if (m.payload != null && m.hasOwnProperty(\"payload\")) {\n            d.payload = o.bytes === String ? $util.base64.encode(m.payload, 0, m.payload.length) : o.bytes === Array ? Array.prototype.slice.call(m.payload) : m.payload;\n        }\n        if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n            d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Envelope to JSON.\n     * @function toJSON\n     * @memberof Envelope\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Envelope.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Envelope;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst PeerId = require('peer-id')\nconst arrayEquals = require('libp2p-utils/src/array-equals')\n\nconst { PeerRecord: Protobuf } = require('./peer-record')\nconst {\n  ENVELOPE_DOMAIN_PEER_RECORD,\n  ENVELOPE_PAYLOAD_TYPE_PEER_RECORD\n} = require('./consts')\n\n/**\n * @typedef {import('../../peer-store/address-book.js').Address} Address\n * @typedef {import('libp2p-interfaces/src/record/types').Record} Record\n */\n\n/**\n * @implements {Record}\n */\nclass PeerRecord {\n  /**\n   * The PeerRecord is used for distributing peer routing records across the network.\n   * It contains the peer's reachable listen addresses.\n   *\n   * @class\n   * @param {Object} params\n   * @param {PeerId} params.peerId\n   * @param {Multiaddr[]} params.multiaddrs - addresses of the associated peer.\n   * @param {number} [params.seqNumber] - monotonically-increasing sequence counter that's used to order PeerRecords in time.\n   */\n  constructor ({ peerId, multiaddrs = [], seqNumber = Date.now() }) {\n    this.domain = ENVELOPE_DOMAIN_PEER_RECORD\n    this.codec = ENVELOPE_PAYLOAD_TYPE_PEER_RECORD\n\n    this.peerId = peerId\n    this.multiaddrs = multiaddrs\n    this.seqNumber = seqNumber\n\n    // Cache\n    this._marshal = undefined\n  }\n\n  /**\n   * Marshal a record to be used in an envelope.\n   *\n   * @returns {Uint8Array}\n   */\n  marshal () {\n    if (this._marshal) {\n      return this._marshal\n    }\n\n    this._marshal = Protobuf.encode({\n      peerId: this.peerId.toBytes(),\n      seq: this.seqNumber,\n      addresses: this.multiaddrs.map((m) => ({\n        multiaddr: m.bytes\n      }))\n    }).finish()\n\n    return this._marshal\n  }\n\n  /**\n   * Returns true if `this` record equals the `other`.\n   *\n   * @param {unknown} other\n   * @returns {boolean}\n   */\n  equals (other) {\n    if (!(other instanceof PeerRecord)) {\n      return false\n    }\n\n    // Validate PeerId\n    if (!this.peerId.equals(other.peerId)) {\n      return false\n    }\n\n    // Validate seqNumber\n    if (this.seqNumber !== other.seqNumber) {\n      return false\n    }\n\n    // Validate multiaddrs\n    if (!arrayEquals(this.multiaddrs, other.multiaddrs)) {\n      return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Unmarshal Peer Record Protobuf.\n *\n * @param {Uint8Array} buf - marshaled peer record.\n * @returns {PeerRecord}\n */\nPeerRecord.createFromProtobuf = (buf) => {\n  const peerRecord = Protobuf.decode(buf)\n\n  const peerId = PeerId.createFromBytes(peerRecord.peerId)\n  const multiaddrs = (peerRecord.addresses || []).map((a) => new Multiaddr(a.multiaddr))\n  const seqNumber = Number(peerRecord.seq)\n\n  return new PeerRecord({ peerId, multiaddrs, seqNumber })\n}\n\nPeerRecord.DOMAIN = ENVELOPE_DOMAIN_PEER_RECORD\n\nmodule.exports = PeerRecord\n","'use strict'\n\n/**\n * Verify if two arrays of non primitive types with the \"equals\" function are equal.\n * Compatible with multiaddr, peer-id and others.\n *\n * @param {Array<*>} a\n * @param {Array<*>} b\n * @returns {boolean}\n */\nfunction arrayEquals (a, b) {\n  return a.length === b.length && b.sort() && a.sort().every((item, index) => b[index].equals(item))\n}\n\nmodule.exports = arrayEquals\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.PeerRecord = (function() {\n\n    /**\n     * Properties of a PeerRecord.\n     * @exports IPeerRecord\n     * @interface IPeerRecord\n     * @property {Uint8Array|null} [peerId] PeerRecord peerId\n     * @property {number|null} [seq] PeerRecord seq\n     * @property {Array.<PeerRecord.IAddressInfo>|null} [addresses] PeerRecord addresses\n     */\n\n    /**\n     * Constructs a new PeerRecord.\n     * @exports PeerRecord\n     * @classdesc Represents a PeerRecord.\n     * @implements IPeerRecord\n     * @constructor\n     * @param {IPeerRecord=} [p] Properties to set\n     */\n    function PeerRecord(p) {\n        this.addresses = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PeerRecord peerId.\n     * @member {Uint8Array} peerId\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.peerId = $util.newBuffer([]);\n\n    /**\n     * PeerRecord seq.\n     * @member {number} seq\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * PeerRecord addresses.\n     * @member {Array.<PeerRecord.IAddressInfo>} addresses\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Encodes the specified PeerRecord message. Does not implicitly {@link PeerRecord.verify|verify} messages.\n     * @function encode\n     * @memberof PeerRecord\n     * @static\n     * @param {IPeerRecord} m PeerRecord message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PeerRecord.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.peerId != null && Object.hasOwnProperty.call(m, \"peerId\"))\n            w.uint32(10).bytes(m.peerId);\n        if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n            w.uint32(16).uint64(m.seq);\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.PeerRecord.AddressInfo.encode(m.addresses[i], w.uint32(26).fork()).ldelim();\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a PeerRecord message from the specified reader or buffer.\n     * @function decode\n     * @memberof PeerRecord\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PeerRecord} PeerRecord\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PeerRecord.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.peerId = r.bytes();\n                break;\n            case 2:\n                m.seq = r.uint64();\n                break;\n            case 3:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.PeerRecord.AddressInfo.decode(r, r.uint32()));\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a PeerRecord message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PeerRecord\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PeerRecord} PeerRecord\n     */\n    PeerRecord.fromObject = function fromObject(d) {\n        if (d instanceof $root.PeerRecord)\n            return d;\n        var m = new $root.PeerRecord();\n        if (d.peerId != null) {\n            if (typeof d.peerId === \"string\")\n                $util.base64.decode(d.peerId, m.peerId = $util.newBuffer($util.base64.length(d.peerId)), 0);\n            else if (d.peerId.length)\n                m.peerId = d.peerId;\n        }\n        if (d.seq != null) {\n            if ($util.Long)\n                (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n            else if (typeof d.seq === \"string\")\n                m.seq = parseInt(d.seq, 10);\n            else if (typeof d.seq === \"number\")\n                m.seq = d.seq;\n            else if (typeof d.seq === \"object\")\n                m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n        }\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".PeerRecord.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".PeerRecord.addresses: object expected\");\n                m.addresses[i] = $root.PeerRecord.AddressInfo.fromObject(d.addresses[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PeerRecord message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PeerRecord\n     * @static\n     * @param {PeerRecord} m PeerRecord\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PeerRecord.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n        }\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.peerId = \"\";\n            else {\n                d.peerId = [];\n                if (o.bytes !== Array)\n                    d.peerId = $util.newBuffer(d.peerId);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.seq = o.longs === String ? \"0\" : 0;\n        }\n        if (m.peerId != null && m.hasOwnProperty(\"peerId\")) {\n            d.peerId = o.bytes === String ? $util.base64.encode(m.peerId, 0, m.peerId.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerId) : m.peerId;\n        }\n        if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n            if (typeof m.seq === \"number\")\n                d.seq = o.longs === String ? String(m.seq) : m.seq;\n            else\n                d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.PeerRecord.AddressInfo.toObject(m.addresses[j], o);\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PeerRecord to JSON.\n     * @function toJSON\n     * @memberof PeerRecord\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PeerRecord.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    PeerRecord.AddressInfo = (function() {\n\n        /**\n         * Properties of an AddressInfo.\n         * @memberof PeerRecord\n         * @interface IAddressInfo\n         * @property {Uint8Array|null} [multiaddr] AddressInfo multiaddr\n         */\n\n        /**\n         * Constructs a new AddressInfo.\n         * @memberof PeerRecord\n         * @classdesc Represents an AddressInfo.\n         * @implements IAddressInfo\n         * @constructor\n         * @param {PeerRecord.IAddressInfo=} [p] Properties to set\n         */\n        function AddressInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AddressInfo multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         */\n        AddressInfo.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified AddressInfo message. Does not implicitly {@link PeerRecord.AddressInfo.verify|verify} messages.\n         * @function encode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.IAddressInfo} m AddressInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddressInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            return w;\n        };\n\n        /**\n         * Decodes an AddressInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddressInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord.AddressInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an AddressInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         */\n        AddressInfo.fromObject = function fromObject(d) {\n            if (d instanceof $root.PeerRecord.AddressInfo)\n                return d;\n            var m = new $root.PeerRecord.AddressInfo();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an AddressInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.AddressInfo} m AddressInfo\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AddressInfo.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this AddressInfo to JSON.\n         * @function toJSON\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AddressInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return AddressInfo;\n    })();\n\n    return PeerRecord;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst multicodec = require('multicodec')\n\n// The domain string used for peer records contained in a Envelope.\nconst domain = multicodec.getName(multicodec.LIBP2P_PEER_RECORD) || 'libp2p-peer-record'\n\n// The type hint used to identify peer records in a Envelope.\n// Defined in https://github.com/multiformats/multicodec/blob/master/table.csv\n// with name \"libp2p-peer-record\"\nconst payloadType = Uint8Array.from([3, 1])\n\nmodule.exports = {\n  ENVELOPE_DOMAIN_PEER_RECORD: domain,\n  ENVELOPE_PAYLOAD_TYPE_PEER_RECORD: payloadType\n}\n","'use strict'\n\nconst EventEmitter = require('events')\nconst { Multiaddr } = require('multiaddr')\nconst PeerId = require('peer-id')\n\n/**\n * @typedef {Object} AddressManagerOptions\n * @property {string[]} [listen = []] - list of multiaddrs string representation to listen.\n * @property {string[]} [announce = []] - list of multiaddrs string representation to announce.\n */\n\n/**\n * @fires AddressManager#change:addresses Emitted when a addresses change.\n */\nclass AddressManager extends EventEmitter {\n  /**\n   * Responsible for managing the peer addresses.\n   * Peers can specify their listen and announce addresses.\n   * The listen addresses will be used by the libp2p transports to listen for new connections,\n   * while the announce addresses will be used for the peer addresses' to other peers in the network.\n   *\n   * @class\n   * @param {PeerId} peerId - The Peer ID of the node\n   * @param {object} [options]\n   * @param {Array<string>} [options.listen = []] - list of multiaddrs string representation to listen.\n   * @param {Array<string>} [options.announce = []] - list of multiaddrs string representation to announce.\n   */\n  constructor (peerId, { listen = [], announce = [] } = {}) {\n    super()\n\n    this.peerId = peerId\n    this.listen = new Set(listen.map(ma => ma.toString()))\n    this.announce = new Set(announce.map(ma => ma.toString()))\n    this.observed = new Set()\n  }\n\n  /**\n   * Get peer listen multiaddrs.\n   *\n   * @returns {Multiaddr[]}\n   */\n  getListenAddrs () {\n    return Array.from(this.listen).map((a) => new Multiaddr(a))\n  }\n\n  /**\n   * Get peer announcing multiaddrs.\n   *\n   * @returns {Multiaddr[]}\n   */\n  getAnnounceAddrs () {\n    return Array.from(this.announce).map((a) => new Multiaddr(a))\n  }\n\n  /**\n   * Get observed multiaddrs.\n   *\n   * @returns {Array<Multiaddr>}\n   */\n  getObservedAddrs () {\n    return Array.from(this.observed).map((a) => new Multiaddr(a))\n  }\n\n  /**\n   * Add peer observed addresses\n   *\n   * @param {string | Multiaddr} addr\n   */\n  addObservedAddr (addr) {\n    let ma = new Multiaddr(addr)\n    const remotePeer = ma.getPeerId()\n\n    // strip our peer id if it has been passed\n    if (remotePeer) {\n      const remotePeerId = PeerId.createFromB58String(remotePeer)\n\n      // use same encoding for comparison\n      if (remotePeerId.equals(this.peerId)) {\n        ma = ma.decapsulate(new Multiaddr(`/p2p/${this.peerId}`))\n      }\n    }\n\n    const addrString = ma.toString()\n\n    // do not trigger the change:addresses event if we already know about this address\n    if (this.observed.has(addrString)) {\n      return\n    }\n\n    this.observed.add(addrString)\n    this.emit('change:addresses')\n  }\n}\n\nmodule.exports = AddressManager\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:connection-manager'), {\n  error: debug('libp2p:connection-manager:err')\n})\n\nconst errcode = require('err-code')\nconst mergeOptions = require('merge-options')\nconst LatencyMonitor = require('./latency-monitor')\n// @ts-ignore retimer does not have types\nconst retimer = require('retimer')\n\nconst EventEmitter = require('events')\n\nconst PeerId = require('peer-id')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\n\nconst defaultOptions = {\n  maxConnections: Infinity,\n  minConnections: 0,\n  maxData: Infinity,\n  maxSentData: Infinity,\n  maxReceivedData: Infinity,\n  maxEventLoopDelay: Infinity,\n  pollInterval: 2000,\n  autoDialInterval: 10000,\n  movingAverageInterval: 60000,\n  defaultPeerValue: 1\n}\n\n/**\n * @typedef {import('../')} Libp2p\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n */\n\n/**\n * @typedef {Object} ConnectionManagerOptions\n * @property {number} [maxConnections = Infinity] - The maximum number of connections allowed.\n * @property {number} [minConnections = 0] - The minimum number of connections to avoid pruning.\n * @property {number} [maxData = Infinity] - The max data (in and out), per average interval to allow.\n * @property {number} [maxSentData = Infinity] - The max outgoing data, per average interval to allow.\n * @property {number} [maxReceivedData = Infinity] - The max incoming data, per average interval to allow.\n * @property {number} [maxEventLoopDelay = Infinity] - The upper limit the event loop can take to run.\n * @property {number} [pollInterval = 2000] - How often, in milliseconds, metrics and latency should be checked.\n * @property {number} [movingAverageInterval = 60000] - How often, in milliseconds, to compute averages.\n * @property {number} [defaultPeerValue = 1] - The value of the peer.\n * @property {boolean} [autoDial = true] - Should preemptively guarantee connections are above the low watermark.\n * @property {number} [autoDialInterval = 10000] - How often, in milliseconds, it should preemptively guarantee connections are above the low watermark.\n */\n\n/**\n *\n * @fires ConnectionManager#peer:connect Emitted when a new peer is connected.\n * @fires ConnectionManager#peer:disconnect Emitted when a peer is disconnected.\n */\nclass ConnectionManager extends EventEmitter {\n  /**\n   * Responsible for managing known connections.\n   *\n   * @class\n   * @param {Libp2p} libp2p\n   * @param {ConnectionManagerOptions} options\n   */\n  constructor (libp2p, options = {}) {\n    super()\n\n    this._libp2p = libp2p\n    this._peerId = libp2p.peerId.toB58String()\n\n    this._options = mergeOptions.call({ ignoreUndefined: true }, defaultOptions, options)\n    if (this._options.maxConnections < this._options.minConnections) {\n      throw errcode(new Error('Connection Manager maxConnections must be greater than minConnections'), ERR_INVALID_PARAMETERS)\n    }\n\n    log('options: %j', this._options)\n\n    /**\n     * Map of peer identifiers to their peer value for pruning connections.\n     *\n     * @type {Map<string, number>}\n     */\n    this._peerValues = new Map()\n\n    /**\n     * Map of connections per peer\n     *\n     * @type {Map<string, Connection[]>}\n     */\n    this.connections = new Map()\n\n    this._started = false\n    this._timer = null\n    this._autoDialTimeout = null\n    this._checkMetrics = this._checkMetrics.bind(this)\n    this._autoDial = this._autoDial.bind(this)\n  }\n\n  /**\n   * Get current number of open connections.\n   */\n  get size () {\n    return Array.from(this.connections.values())\n      .reduce((accumulator, value) => accumulator + value.length, 0)\n  }\n\n  /**\n   * Starts the Connection Manager. If Metrics are not enabled on libp2p\n   * only event loop and connection limits will be monitored.\n   */\n  start () {\n    if (this._libp2p.metrics) {\n      this._timer = this._timer || retimer(this._checkMetrics, this._options.pollInterval)\n    }\n\n    // latency monitor\n    this._latencyMonitor = new LatencyMonitor({\n      latencyCheckIntervalMs: this._options.pollInterval,\n      dataEmitIntervalMs: this._options.pollInterval\n    })\n    this._onLatencyMeasure = this._onLatencyMeasure.bind(this)\n    this._latencyMonitor.on('data', this._onLatencyMeasure)\n\n    this._started = true\n    log('started')\n\n    this._options.autoDial && this._autoDial()\n  }\n\n  /**\n   * Stops the Connection Manager\n   *\n   * @async\n   */\n  async stop () {\n    this._autoDialTimeout && this._autoDialTimeout.clear()\n    this._timer && this._timer.clear()\n    this._latencyMonitor && this._latencyMonitor.removeListener('data', this._onLatencyMeasure)\n\n    this._started = false\n    await this._close()\n    log('stopped')\n  }\n\n  /**\n   * Cleans up the connections\n   *\n   * @async\n   */\n  async _close () {\n    // Close all connections we're tracking\n    const tasks = []\n    for (const connectionList of this.connections.values()) {\n      for (const connection of connectionList) {\n        tasks.push(connection.close())\n      }\n    }\n\n    await Promise.all(tasks)\n    this.connections.clear()\n  }\n\n  /**\n   * Sets the value of the given peer. Peers with lower values\n   * will be disconnected first.\n   *\n   * @param {PeerId} peerId\n   * @param {number} value - A number between 0 and 1\n   * @returns {void}\n   */\n  setPeerValue (peerId, value) {\n    if (value < 0 || value > 1) {\n      throw new Error('value should be a number between 0 and 1')\n    }\n    this._peerValues.set(peerId.toB58String(), value)\n  }\n\n  /**\n   * Checks the libp2p metrics to determine if any values have exceeded\n   * the configured maximums.\n   *\n   * @private\n   */\n  _checkMetrics () {\n    if (this._libp2p.metrics) {\n      const movingAverages = this._libp2p.metrics.global.movingAverages\n      // @ts-ignore moving averages object types\n      const received = movingAverages.dataReceived[this._options.movingAverageInterval].movingAverage()\n      this._checkMaxLimit('maxReceivedData', received)\n      // @ts-ignore moving averages object types\n      const sent = movingAverages.dataSent[this._options.movingAverageInterval].movingAverage()\n      this._checkMaxLimit('maxSentData', sent)\n      const total = received + sent\n      this._checkMaxLimit('maxData', total)\n      log('metrics update', total)\n      this._timer = retimer(this._checkMetrics, this._options.pollInterval)\n    }\n  }\n\n  /**\n   * Tracks the incoming connection and check the connection limit\n   *\n   * @param {Connection} connection\n   * @returns {void}\n   */\n  onConnect (connection) {\n    const peerId = connection.remotePeer\n    const peerIdStr = peerId.toB58String()\n    const storedConn = this.connections.get(peerIdStr)\n\n    this.emit('peer:connect', connection)\n    if (storedConn) {\n      storedConn.push(connection)\n    } else {\n      this.connections.set(peerIdStr, [connection])\n    }\n\n    this._libp2p.peerStore.keyBook.set(peerId, peerId.pubKey)\n\n    if (!this._peerValues.has(peerIdStr)) {\n      this._peerValues.set(peerIdStr, this._options.defaultPeerValue)\n    }\n\n    this._checkMaxLimit('maxConnections', this.size)\n  }\n\n  /**\n   * Removes the connection from tracking\n   *\n   * @param {Connection} connection\n   * @returns {void}\n   */\n  onDisconnect (connection) {\n    const peerId = connection.remotePeer.toB58String()\n    let storedConn = this.connections.get(peerId)\n\n    if (storedConn && storedConn.length > 1) {\n      storedConn = storedConn.filter((conn) => conn.id !== connection.id)\n      this.connections.set(peerId, storedConn)\n    } else if (storedConn) {\n      this.connections.delete(peerId)\n      this._peerValues.delete(connection.remotePeer.toB58String())\n      this.emit('peer:disconnect', connection)\n    }\n  }\n\n  /**\n   * Get a connection with a peer.\n   *\n   * @param {PeerId} peerId\n   * @returns {Connection|null}\n   */\n  get (peerId) {\n    const connections = this.getAll(peerId)\n    if (connections.length) {\n      return connections[0]\n    }\n    return null\n  }\n\n  /**\n   * Get all open connections with a peer.\n   *\n   * @param {PeerId} peerId\n   * @returns {Connection[]}\n   */\n  getAll (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const id = peerId.toB58String()\n    const connections = this.connections.get(id)\n\n    // Return all open connections\n    if (connections) {\n      return connections.filter(connection => connection.stat.status === 'open')\n    }\n    return []\n  }\n\n  /**\n   * If the event loop is slow, maybe close a connection\n   *\n   * @private\n   * @param {*} summary - The LatencyMonitor summary\n   */\n  _onLatencyMeasure (summary) {\n    this._checkMaxLimit('maxEventLoopDelay', summary.avgMs)\n  }\n\n  /**\n   * If the `value` of `name` has exceeded its limit, maybe close a connection\n   *\n   * @private\n   * @param {string} name - The name of the field to check limits for\n   * @param {number} value - The current value of the field\n   */\n  _checkMaxLimit (name, value) {\n    const limit = this._options[name]\n    log('checking limit of %s. current value: %d of %d', name, value, limit)\n    if (value > limit) {\n      log('%s: limit exceeded: %s, %d', this._peerId, name, value)\n      this._maybeDisconnectOne()\n    }\n  }\n\n  /**\n   * Proactively tries to connect to known peers stored in the PeerStore.\n   * It will keep the number of connections below the upper limit and sort\n   * the peers to connect based on wether we know their keys and protocols.\n   *\n   * @async\n   * @private\n   */\n  async _autoDial () {\n    const minConnections = this._options.minConnections\n\n    // Already has enough connections\n    if (this.size >= minConnections) {\n      this._autoDialTimeout = retimer(this._autoDial, this._options.autoDialInterval)\n      return\n    }\n\n    // Sort peers on wether we know protocols of public keys for them\n    const peers = Array.from(this._libp2p.peerStore.peers.values())\n      .sort((a, b) => {\n        if (b.protocols && b.protocols.length && (!a.protocols || !a.protocols.length)) {\n          return 1\n        } else if (b.id.pubKey && !a.id.pubKey) {\n          return 1\n        }\n        return -1\n      })\n\n    for (let i = 0; i < peers.length && this.size < minConnections; i++) {\n      if (!this.get(peers[i].id)) {\n        log('connecting to a peerStore stored peer %s', peers[i].id.toB58String())\n        try {\n          await this._libp2p.dialer.connectToPeer(peers[i].id)\n\n          // Connection Manager was stopped\n          if (!this._started) {\n            return\n          }\n        } catch (err) {\n          log.error('could not connect to peerStore stored peer', err)\n        }\n      }\n    }\n\n    this._autoDialTimeout = retimer(this._autoDial, this._options.autoDialInterval)\n  }\n\n  /**\n   * If we have more connections than our maximum, close a connection\n   * to the lowest valued peer.\n   *\n   * @private\n   */\n  _maybeDisconnectOne () {\n    if (this._options.minConnections < this.connections.size) {\n      const peerValues = Array.from(new Map([...this._peerValues.entries()].sort((a, b) => a[1] - b[1])))\n      log('%s: sorted peer values: %j', this._peerId, peerValues)\n      const disconnectPeer = peerValues[0]\n      if (disconnectPeer) {\n        const peerId = disconnectPeer[0]\n        log('%s: lowest value peer is %s', this._peerId, peerId)\n        log('%s: closing a connection to %j', this._peerId, peerId)\n        for (const connections of this.connections.values()) {\n          if (connections[0].remotePeer.toB58String() === peerId) {\n            connections[0].close()\n            break\n          }\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","// @ts-nocheck\n'use strict'\n\n/**\n * This code is based on `latency-monitor` (https://github.com/mlucool/latency-monitor) by `mlucool` (https://github.com/mlucool), available under Apache License 2.0 (https://github.com/mlucool/latency-monitor/blob/master/LICENSE)\n */\n\nconst EventEmitter = require('events')\nconst VisibilityChangeEmitter = require('./visibility-change-emitter')\nconst debug = require('debug')('latency-monitor:LatencyMonitor')\n\n/**\n * @typedef {Object} SummaryObject\n * @property {number} events How many events were called\n * @property {number} minMS What was the min time for a cb to be called\n * @property {number} maxMS What was the max time for a cb to be called\n * @property {number} avgMs What was the average time for a cb to be called\n * @property {number} lengthMs How long this interval was in ms\n *\n * @typedef {Object} LatencyMonitorOptions\n * @property {number} [latencyCheckIntervalMs=500] - How often to add a latency check event (ms)\n * @property {number} [dataEmitIntervalMs=5000] - How often to summarize latency check events. null or 0 disables event firing\n * @property {Function} [asyncTestFn] - What cb-style async function to use\n * @property {number} [latencyRandomPercentage=5] - What percent (+/-) of latencyCheckIntervalMs should we randomly use? This helps avoid alignment to other events.\n */\n\n/**\n * A class to monitor latency of any async function which works in a browser or node. This works by periodically calling\n * the asyncTestFn and timing how long it takes the callback to be called. It can also periodically emit stats about this.\n * This can be disabled and stats can be pulled via setting dataEmitIntervalMs = 0.\n *\n * @extends {EventEmitter}\n *\n * The default implementation is an event loop latency monitor. This works by firing periodic events into the event loop\n * and timing how long it takes to get back.\n *\n * @example\n * const monitor = new LatencyMonitor();\n * monitor.on('data', (summary) => console.log('Event Loop Latency: %O', summary));\n *\n * @example\n * const monitor = new LatencyMonitor({latencyCheckIntervalMs: 1000, dataEmitIntervalMs: 60000, asyncTestFn:ping});\n * monitor.on('data', (summary) => console.log('Ping Pong Latency: %O', summary));\n */\nclass LatencyMonitor extends EventEmitter {\n  /**\n   * @class\n   * @param {LatencyMonitorOptions} [options]\n   */\n  constructor ({ latencyCheckIntervalMs, dataEmitIntervalMs, asyncTestFn, latencyRandomPercentage } = {}) {\n    super()\n    const that = this\n\n    // 0 isn't valid here, so its ok to use ||\n    that.latencyCheckIntervalMs = latencyCheckIntervalMs || 500 // 0.5s\n    that.latencyRandomPercentage = latencyRandomPercentage || 10\n    that._latecyCheckMultiply = 2 * (that.latencyRandomPercentage / 100.0) * that.latencyCheckIntervalMs\n    that._latecyCheckSubtract = that._latecyCheckMultiply / 2\n\n    that.dataEmitIntervalMs = (dataEmitIntervalMs === null || dataEmitIntervalMs === 0)\n      ? undefined\n      : dataEmitIntervalMs || 5 * 1000 // 5s\n    debug('latencyCheckIntervalMs: %s dataEmitIntervalMs: %s',\n      that.latencyCheckIntervalMs, that.dataEmitIntervalMs)\n    if (that.dataEmitIntervalMs) {\n      debug('Expecting ~%s events per summary', that.latencyCheckIntervalMs / that.dataEmitIntervalMs)\n    } else {\n      debug('Not emitting summaries')\n    }\n\n    that.asyncTestFn = asyncTestFn // If there is no asyncFn, we measure latency\n\n    // If process: use high resolution timer\n    if (globalThis.process && globalThis.process.hrtime) { // eslint-disable-line no-undef\n      debug('Using process.hrtime for timing')\n      that.now = globalThis.process.hrtime // eslint-disable-line no-undef\n      that.getDeltaMS = (startTime) => {\n        const hrtime = that.now(startTime)\n        return (hrtime[0] * 1000) + (hrtime[1] / 1000000)\n      }\n      // Let's try for a timer that only monotonically increases\n    } else if (typeof window !== 'undefined' && window.performance && window.performance.now) {\n      debug('Using performance.now for timing')\n      that.now = window.performance.now.bind(window.performance)\n      that.getDeltaMS = (startTime) => Math.round(that.now() - startTime)\n    } else {\n      debug('Using Date.now for timing')\n      that.now = Date.now\n      that.getDeltaMS = (startTime) => that.now() - startTime\n    }\n\n    that._latencyData = that._initLatencyData()\n\n    // We check for isBrowser because of browsers set max rates of timeouts when a page is hidden,\n    // so we fall back to another library\n    // See: http://stackoverflow.com/questions/6032429/chrome-timeouts-interval-suspended-in-background-tabs\n    if (isBrowser()) {\n      that._visibilityChangeEmitter = new VisibilityChangeEmitter()\n\n      that._visibilityChangeEmitter.on('visibilityChange', (pageInFocus) => {\n        if (pageInFocus) {\n          that._startTimers()\n        } else {\n          that._emitSummary()\n          that._stopTimers()\n        }\n      })\n    }\n\n    if (!that._visibilityChangeEmitter || that._visibilityChangeEmitter.isVisible()) {\n      that._startTimers()\n    }\n  }\n\n  /**\n   * Start internal timers\n   *\n   * @private\n   */\n  _startTimers () {\n    // Timer already started, ignore this\n    if (this._checkLatencyID) {\n      return\n    }\n    this._checkLatency()\n    if (this.dataEmitIntervalMs) {\n      this._emitIntervalID = setInterval(() => this._emitSummary(), this.dataEmitIntervalMs)\n      if (typeof this._emitIntervalID.unref === 'function') {\n        this._emitIntervalID.unref() // Doesn't block exit\n      }\n    }\n  }\n\n  /**\n   * Stop internal timers\n   *\n   * @private\n   */\n  _stopTimers () {\n    if (this._checkLatencyID) {\n      clearTimeout(this._checkLatencyID)\n      this._checkLatencyID = undefined\n    }\n    if (this._emitIntervalID) {\n      clearInterval(this._emitIntervalID)\n      this._emitIntervalID = undefined\n    }\n  }\n\n  /**\n   * Emit summary only if there were events. It might not have any events if it was forced via a page hidden/show\n   *\n   * @private\n   */\n  _emitSummary () {\n    const summary = this.getSummary()\n    if (summary.events > 0) {\n      this.emit('data', summary)\n    }\n  }\n\n  /**\n   * Calling this function will end the collection period. If a timing event was already fired and somewhere in the queue,\n   * it will not count for this time period\n   *\n   * @returns {SummaryObject}\n   */\n  getSummary () {\n    // We might want to adjust for the number of expected events\n    // Example: first 1 event it comes back, then such a long blocker that the next emit check comes\n    // Then this fires - looks like no latency!!\n    const latency = {\n      events: this._latencyData.events,\n      minMs: this._latencyData.minMs,\n      maxMs: this._latencyData.maxMs,\n      avgMs: this._latencyData.events\n        ? this._latencyData.totalMs / this._latencyData.events\n        : Number.POSITIVE_INFINITY,\n      lengthMs: this.getDeltaMS(this._latencyData.startTime)\n    }\n    this._latencyData = this._initLatencyData() // Clear\n\n    debug('Summary: %O', latency)\n    return latency\n  }\n\n  /**\n   * Randomly calls an async fn every roughly latencyCheckIntervalMs (plus some randomness). If no async fn is found,\n   * it will simply report on event loop latency.\n   *\n   * @private\n   */\n  _checkLatency () {\n    const that = this\n    // Randomness is needed to avoid alignment by accident to regular things in the event loop\n    const randomness = (Math.random() * that._latecyCheckMultiply) - that._latecyCheckSubtract\n\n    // We use this to ensure that in case some overlap somehow, we don't take the wrong startTime/offset\n    const localData = {\n      deltaOffset: Math.ceil(that.latencyCheckIntervalMs + randomness),\n      startTime: that.now()\n    }\n\n    const cb = () => {\n      // We are already stopped, ignore this datapoint\n      if (!this._checkLatencyID) {\n        return\n      }\n      const deltaMS = that.getDeltaMS(localData.startTime) - localData.deltaOffset\n      that._checkLatency() // Start again ASAP\n\n      // Add the data point. If this gets complex, refactor it\n      that._latencyData.events++\n      that._latencyData.minMs = Math.min(that._latencyData.minMs, deltaMS)\n      that._latencyData.maxMs = Math.max(that._latencyData.maxMs, deltaMS)\n      that._latencyData.totalMs += deltaMS\n      debug('MS: %s Data: %O', deltaMS, that._latencyData)\n    }\n    debug('localData: %O', localData)\n\n    this._checkLatencyID = setTimeout(() => {\n      // This gets rid of including event loop\n      if (that.asyncTestFn) {\n        // Clear timing related things\n        localData.deltaOffset = 0\n        localData.startTime = that.now()\n        that.asyncTestFn(cb)\n      } else {\n        // setTimeout is not more accurate than 1ms, so this will ensure positive numbers. Add 1 to emitted data to remove.\n        // This is not the best, but for now it'll be just fine. This isn't meant to be sub ms accurate.\n        localData.deltaOffset -= 1\n        // If there is no function to test, we mean check latency which is a special case that is really cb => cb()\n        // We avoid that for the few extra function all overheads. Also, we want to keep the timers different\n        cb()\n      }\n    }, localData.deltaOffset)\n\n    if (typeof this._checkLatencyID.unref === 'function') {\n      this._checkLatencyID.unref() // Doesn't block exit\n    }\n  }\n\n  _initLatencyData () {\n    return {\n      startTime: this.now(),\n      minMs: Number.POSITIVE_INFINITY,\n      maxMs: Number.NEGATIVE_INFINITY,\n      events: 0,\n      totalMs: 0\n    }\n  }\n}\n\nfunction isBrowser () {\n  return typeof window !== 'undefined'\n}\n\nmodule.exports = LatencyMonitor\n","// @ts-nocheck\n/* global document */\n\n/**\n * This code is based on `latency-monitor` (https://github.com/mlucool/latency-monitor) by `mlucool` (https://github.com/mlucool), available under Apache License 2.0 (https://github.com/mlucool/latency-monitor/blob/master/LICENSE)\n */\n'use strict'\n\nconst EventEmitter = require('events')\n\nconst debug = require('debug')('latency-monitor:VisibilityChangeEmitter')\n\n/**\n * Listen to page visibility change events (i.e. when the page is focused / blurred) by an event emitter.\n *\n * Warning: This does not work on all browsers, but should work on all modern browsers\n *\n * @example\n *\n *     const myVisibilityEmitter = new VisibilityChangeEmitter();\n *\n *     myVisibilityEmitter.on('visibilityChange', (pageInFocus) => {\n *        if ( pageInFocus ){\n *            // Page is in focus\n *            console.log('In focus');\n *        }\n *        else {\n *            // Page is blurred\n *            console.log('Out of focus');\n *        }\n *     });\n *     // To access the visibility state directly, call:\n *     console.log('Am I focused now? ' + myVisibilityEmitter.isVisible());\n */\nclass VisibilityChangeEmitter extends EventEmitter {\n  /**\n   * Creates a VisibilityChangeEmitter\n   *\n   * @class\n   */\n  constructor () {\n    super()\n    if (typeof document === 'undefined') {\n      debug('This is not a browser, no \"document\" found. Stopping.')\n      return\n    }\n    this._initializeVisibilityVarNames()\n    this._addVisibilityChangeListener()\n  }\n\n  /**\n   * document.hidden and document.visibilityChange are the two variables we need to check for;\n   * Since these variables are named differently in different browsers, this function sets\n   * the appropriate name based on the browser being used. Once executed, tha actual names of\n   * document.hidden and document.visibilityChange are found in this._hidden and this._visibilityChange\n   * respectively\n   *\n   * @private\n   */\n  _initializeVisibilityVarNames () {\n    let hidden\n    let visibilityChange\n    if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden'\n      visibilityChange = 'visibilitychange'\n    } else if (typeof document.mozHidden !== 'undefined') {\n      hidden = 'mozHidden'\n      visibilityChange = 'mozvisibilitychange'\n    } else if (typeof document.msHidden !== 'undefined') {\n      hidden = 'msHidden'\n      visibilityChange = 'msvisibilitychange'\n    } else if (typeof document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden'\n      visibilityChange = 'webkitvisibilitychange'\n    }\n    this._hidden = hidden\n    this._visibilityChange = visibilityChange\n  }\n\n  /**\n   * Adds an event listener on the document that listens to changes in document.visibilityChange\n   * (or whatever name by which the visibilityChange variable is known in the browser)\n   *\n   * @private\n   */\n  _addVisibilityChangeListener () {\n    if (typeof document.addEventListener === 'undefined' ||\n            typeof document[this._hidden] === 'undefined') {\n      debug('Checking page visibility requires a browser that supports the Page Visibility API.')\n    } else {\n      // Handle page visibility change\n      document.addEventListener(this._visibilityChange, this._handleVisibilityChange.bind(this), false)\n    }\n  }\n\n  /**\n   * The function returns ```true``` if the page is visible or ```false``` if the page is not visible and\n   * ```undefined``` if the page visibility API is not supported by the browser.\n   *\n   * @returns {boolean | void} whether the page is now visible or not (undefined is unknown)\n   */\n  isVisible () {\n    if (this._hidden === undefined || document[this._hidden] === undefined) {\n      return undefined\n    }\n\n    return !document[this._hidden]\n  }\n\n  /**\n   * The function that is called when document.visibilityChange has changed\n   * It emits an event called visibilityChange and sends the value of document.hidden as a\n   * parameter\n   *\n   * @private\n   */\n  _handleVisibilityChange () {\n    const visible = !document[this._hidden]\n    debug(visible ? 'Page Visible' : 'Page Hidden')\n    // Emit the event\n    this.emit('visibilityChange', visible)\n  }\n}\n\nmodule.exports = VisibilityChangeEmitter\n","'use strict'\n\nconst getTime = require('./time')\n\nclass Retimer {\n  constructor (callback, timeout, args) {\n    const that = this\n\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._args = args\n    this._triggered = false\n\n    this._timerWrapper = () => {\n      if (that._rescheduled > 0) {\n        that._scheduled = that._rescheduled - (getTime() - that._started)\n        that._schedule(that._scheduled)\n      } else {\n        that._triggered = true\n        callback.apply(null, that._args)\n      }\n    }\n\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  reschedule (timeout) {\n    if (!timeout) {\n      timeout = this._scheduled\n    }\n    const now = getTime()\n    if ((now + timeout) - (this._started + this._scheduled) < 0) {\n      clearTimeout(this._timer)\n      this._schedule(timeout)\n    } else if (!this._triggered) {\n      this._started = now\n      this._rescheduled = timeout\n    } else {\n      this._schedule(timeout)\n    }\n  }\n\n  _schedule (timeout) {\n    this._triggered = false\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  clear () {\n    clearTimeout(this._timer)\n  }\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  let args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    /* eslint-disable no-var */\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n","'use strict'\n\nmodule.exports = function getTime () {\n  return Date.now()\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:circuit'), {\n  error: debug('libp2p:circuit:err')\n})\n\nconst errCode = require('err-code')\nconst mafmt = require('mafmt')\nconst { Multiaddr } = require('multiaddr')\nconst PeerId = require('peer-id')\nconst { CircuitRelay: CircuitPB } = require('./protocol')\nconst { codes } = require('../errors')\n\nconst toConnection = require('libp2p-utils/src/stream-to-ma-conn')\n\nconst { relay: multicodec } = require('./multicodec')\nconst createListener = require('./listener')\nconst { handleCanHop, handleHop, hop } = require('./circuit/hop')\nconst { handleStop } = require('./circuit/stop')\nconst StreamHandler = require('./circuit/stream-handler')\n\nconst transportSymbol = Symbol.for('@libp2p/js-libp2p-circuit/circuit')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n */\n\nclass Circuit {\n  /**\n   * Creates an instance of the Circuit Transport.\n   *\n   * @class\n   * @param {object} options\n   * @param {import('../')} options.libp2p\n   * @param {import('../upgrader')} options.upgrader\n   */\n  constructor ({ libp2p, upgrader }) {\n    this._dialer = libp2p.dialer\n    this._registrar = libp2p.registrar\n    this._connectionManager = libp2p.connectionManager\n    this._upgrader = upgrader\n    this._options = libp2p._config.relay\n    this._libp2p = libp2p\n    this.peerId = libp2p.peerId\n\n    this._registrar.handle(multicodec, this._onProtocol.bind(this))\n  }\n\n  /**\n   * @param {Object} props\n   * @param {Connection} props.connection\n   * @param {MuxedStream} props.stream\n   */\n  async _onProtocol ({ connection, stream }) {\n    /** @type {import('./circuit/stream-handler')} */\n    const streamHandler = new StreamHandler({ stream })\n    const request = await streamHandler.read()\n\n    if (!request) {\n      return\n    }\n\n    const circuit = this\n    let virtualConnection\n\n    switch (request.type) {\n      case CircuitPB.Type.CAN_HOP: {\n        log('received CAN_HOP request from %s', connection.remotePeer.toB58String())\n        await handleCanHop({ circuit, connection, streamHandler })\n        break\n      }\n      case CircuitPB.Type.HOP: {\n        log('received HOP request from %s', connection.remotePeer.toB58String())\n        virtualConnection = await handleHop({\n          connection,\n          request,\n          streamHandler,\n          circuit\n        })\n        break\n      }\n      case CircuitPB.Type.STOP: {\n        log('received STOP request from %s', connection.remotePeer.toB58String())\n        virtualConnection = await handleStop({\n          connection,\n          request,\n          streamHandler\n        })\n        break\n      }\n      default: {\n        log('Request of type %s not supported', request.type)\n      }\n    }\n\n    if (virtualConnection) {\n      // @ts-ignore dst peer will not be undefined\n      const remoteAddr = new Multiaddr(request.dstPeer.addrs[0])\n      // @ts-ignore src peer will not be undefined\n      const localAddr = new Multiaddr(request.srcPeer.addrs[0])\n      const maConn = toConnection({\n        stream: virtualConnection,\n        remoteAddr,\n        localAddr\n      })\n      const type = request.type === CircuitPB.Type.HOP ? 'relay' : 'inbound'\n      log('new %s connection %s', type, maConn.remoteAddr)\n\n      const conn = await this._upgrader.upgradeInbound(maConn)\n      log('%s connection %s upgraded', type, maConn.remoteAddr)\n      this.handler && this.handler(conn)\n    }\n  }\n\n  /**\n   * Dial a peer over a relay\n   *\n   * @param {Multiaddr} ma - the multiaddr of the peer to dial\n   * @param {Object} options - dial options\n   * @param {AbortSignal} [options.signal] - An optional abort signal\n   * @returns {Promise<Connection>} - the connection\n   */\n  async dial (ma, options) {\n    // Check the multiaddr to see if it contains a relay and a destination peer\n    const addrs = ma.toString().split('/p2p-circuit')\n    const relayAddr = new Multiaddr(addrs[0])\n    const destinationAddr = new Multiaddr(addrs[addrs.length - 1])\n    const relayId = relayAddr.getPeerId()\n    const destinationId = destinationAddr.getPeerId()\n\n    if (!relayId || !destinationId) {\n      const errMsg = 'Circuit relay dial failed as addresses did not have peer id'\n      log.error(errMsg)\n      throw errCode(new Error(errMsg), codes.ERR_RELAYED_DIAL)\n    }\n\n    const relayPeer = PeerId.createFromCID(relayId)\n    const destinationPeer = PeerId.createFromCID(destinationId)\n\n    let disconnectOnFailure = false\n    let relayConnection = this._connectionManager.get(relayPeer)\n    if (!relayConnection) {\n      relayConnection = await this._dialer.connectToPeer(relayAddr, options)\n      disconnectOnFailure = true\n    }\n\n    try {\n      const virtualConnection = await hop({\n        connection: relayConnection,\n        request: {\n          type: CircuitPB.Type.HOP,\n          srcPeer: {\n            id: this.peerId.toBytes(),\n            addrs: this._libp2p.multiaddrs.map(addr => addr.bytes)\n          },\n          dstPeer: {\n            id: destinationPeer.toBytes(),\n            addrs: [new Multiaddr(destinationAddr).bytes]\n          }\n        }\n      })\n\n      const localAddr = relayAddr.encapsulate(`/p2p-circuit/p2p/${this.peerId.toB58String()}`)\n      const maConn = toConnection({\n        stream: virtualConnection,\n        remoteAddr: ma,\n        localAddr\n      })\n      log('new outbound connection %s', maConn.remoteAddr)\n\n      return this._upgrader.upgradeOutbound(maConn)\n    } catch (err) {\n      log.error('Circuit relay dial failed', err)\n      disconnectOnFailure && await relayConnection.close()\n      throw err\n    }\n  }\n\n  /**\n   * Create a listener\n   *\n   * @param {any} options\n   * @param {Function} handler\n   * @returns {import('libp2p-interfaces/src/transport/types').Listener}\n   */\n  createListener (options, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    // Called on successful HOP and STOP requests\n    this.handler = handler\n\n    return createListener(this._libp2p)\n  }\n\n  /**\n   * Filter check for all Multiaddrs that this transport can dial on\n   *\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]}\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter((ma) => {\n      return mafmt.Circuit.matches(ma)\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Circuit'\n  }\n\n  /**\n   * Checks if the given value is a Transport instance.\n   *\n   * @param {any} other\n   * @returns {other is Transport}\n   */\n  static isTransport (other) {\n    return Boolean(other && other[transportSymbol])\n  }\n}\n\nmodule.exports = Circuit\n","'use strict'\n\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @typedef {import('./types').MatchesFunction} MatchesFunction\n * @typedef {import('./types').PartialMatchesFunction} PartialMatchesFunction\n * @typedef {import('./types').Mafmt} Mafmt\n */\n\n/*\n * Valid combinations\n */\nconst DNS4 = base('dns4')\nconst DNS6 = base('dns6')\nconst DNSADDR = base('dnsaddr')\nconst DNS = or(\n  base('dns'),\n  DNSADDR,\n  DNS4,\n  DNS6\n)\n\nconst IP = or(base('ip4'), base('ip6'))\nconst TCP = or(\n  and(IP, base('tcp')),\n  and(DNS, base('tcp'))\n)\nconst UDP = and(IP, base('udp'))\nconst UTP = and(UDP, base('utp'))\n\nconst QUIC = and(UDP, base('quic'))\n\nconst WebSockets = or(\n  and(TCP, base('ws')),\n  and(DNS, base('ws'))\n)\n\nconst WebSocketsSecure = or(\n  and(TCP, base('wss')),\n  and(DNS, base('wss'))\n)\n\nconst HTTP = or(\n  and(TCP, base('http')),\n  and(IP, base('http')),\n  and(DNS, base('http'))\n)\n\nconst HTTPS = or(\n  and(TCP, base('https')),\n  and(IP, base('https')),\n  and(DNS, base('https'))\n)\n\nconst WebRTCStar = or(\n  and(WebSockets, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSockets, base('p2p-webrtc-star')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'))\n)\n\nconst WebSocketStar = or(\n  and(WebSockets, base('p2p-websocket-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')),\n  and(WebSockets, base('p2p-websocket-star')),\n  and(WebSocketsSecure, base('p2p-websocket-star'))\n)\n\nconst WebRTCDirect = or(\n  and(HTTP, base('p2p-webrtc-direct'), base('p2p')),\n  and(HTTPS, base('p2p-webrtc-direct'), base('p2p')),\n  and(HTTP, base('p2p-webrtc-direct')),\n  and(HTTPS, base('p2p-webrtc-direct'))\n)\n\nconst Reliable = or(\n  WebSockets,\n  WebSocketsSecure,\n  HTTP,\n  HTTPS,\n  WebRTCStar,\n  WebRTCDirect,\n  TCP,\n  UTP,\n  QUIC,\n  DNS\n)\n\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nconst Stardust = or(\n  and(Reliable, base('p2p-stardust'), base('p2p')),\n  and(Reliable, base('p2p-stardust'))\n)\n\nconst _P2P = or(\n  and(Reliable, base('p2p')),\n  WebRTCStar,\n  WebRTCDirect,\n  base('p2p')\n)\n\nconst _Circuit = or(\n  and(_P2P, base('p2p-circuit'), _P2P),\n  and(_P2P, base('p2p-circuit')),\n  and(base('p2p-circuit'), _P2P),\n  and(Reliable, base('p2p-circuit')),\n  and(base('p2p-circuit'), Reliable),\n  base('p2p-circuit')\n)\n\nconst CircuitRecursive = () => or(\n  and(_Circuit, CircuitRecursive),\n  _Circuit\n)\n\nconst Circuit = CircuitRecursive()\n\nconst P2P = or(\n  and(Circuit, _P2P, Circuit),\n  and(_P2P, Circuit),\n  and(Circuit, _P2P),\n  Circuit,\n  _P2P\n)\n\nmodule.exports = {\n  DNS,\n  DNS4,\n  DNS6,\n  DNSADDR,\n  IP,\n  TCP,\n  UDP,\n  QUIC,\n  UTP,\n  HTTP,\n  HTTPS,\n  WebSockets,\n  WebSocketsSecure,\n  WebSocketStar,\n  WebRTCStar,\n  WebRTCDirect,\n  Reliable,\n  Stardust,\n  Circuit,\n  P2P,\n  IPFS: P2P\n}\n\n/*\n * Validation funcs\n */\n\n/**\n * @param {PartialMatchesFunction} partialMatch\n */\nfunction makeMatchesFunction (partialMatch) {\n  /**\n   * @type {MatchesFunction}\n   */\n  function matches (a) {\n    if (!Multiaddr.isMultiaddr(a)) {\n      try {\n        a = new Multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n    const out = partialMatch(a.protoNames())\n    if (out === null) {\n      return false\n    }\n\n    if (out === true || out === false) {\n      return out\n    }\n\n    return out.length === 0\n  }\n\n  return matches\n}\n\n/**\n * @param {Array<Mafmt | (() => Mafmt)>} args\n * @returns {Mafmt}\n */\nfunction and (...args) {\n  /**\n   * @type {PartialMatchesFunction}\n   */\n  function partialMatch (a) {\n    if (a.length < args.length) {\n      return null\n    }\n\n    /** @type {boolean | string[] | null} */\n    let out = a\n\n    args.some((arg) => {\n      out = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n\n      if (Array.isArray(out)) {\n        a = out\n      }\n\n      if (out === null) {\n        return true\n      }\n\n      return false\n    })\n\n    return out\n  }\n\n  return {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n}\n\n/**\n * @param {Array<Mafmt | (() => Mafmt)>} args\n * @returns {Mafmt}\n */\nfunction or (...args) {\n  /**\n   * @type {PartialMatchesFunction}\n   */\n  function partialMatch (a) {\n    let out = null\n    args.some((arg) => {\n      const res = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n      if (res) {\n        out = res\n        return true\n      }\n      return false\n    })\n\n    return out\n  }\n\n  const result = {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n\n  return result\n}\n\n/**\n * @param {string} n\n * @returns {Mafmt}\n */\nfunction base (n) {\n  const name = n\n\n  /**\n   * @type {MatchesFunction}\n   */\n  function matches (a) {\n    if (typeof a === 'string') {\n      try {\n        a = new Multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n\n    const pnames = a.protoNames()\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * @type {PartialMatchesFunction}\n   */\n  function partialMatch (protos) {\n    if (protos.length === 0) {\n      return null\n    }\n\n    if (protos[0] === name) {\n      return protos.slice(1)\n    }\n    return null\n  }\n\n  return {\n    toString: function () { return name },\n    matches: matches,\n    partialMatch: partialMatch\n  }\n}\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.CircuitRelay = (function() {\n\n    /**\n     * Properties of a CircuitRelay.\n     * @exports ICircuitRelay\n     * @interface ICircuitRelay\n     * @property {CircuitRelay.Type|null} [type] CircuitRelay type\n     * @property {CircuitRelay.IPeer|null} [srcPeer] CircuitRelay srcPeer\n     * @property {CircuitRelay.IPeer|null} [dstPeer] CircuitRelay dstPeer\n     * @property {CircuitRelay.Status|null} [code] CircuitRelay code\n     */\n\n    /**\n     * Constructs a new CircuitRelay.\n     * @exports CircuitRelay\n     * @classdesc Represents a CircuitRelay.\n     * @implements ICircuitRelay\n     * @constructor\n     * @param {ICircuitRelay=} [p] Properties to set\n     */\n    function CircuitRelay(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * CircuitRelay type.\n     * @member {CircuitRelay.Type} type\n     * @memberof CircuitRelay\n     * @instance\n     */\n    CircuitRelay.prototype.type = 1;\n\n    /**\n     * CircuitRelay srcPeer.\n     * @member {CircuitRelay.IPeer|null|undefined} srcPeer\n     * @memberof CircuitRelay\n     * @instance\n     */\n    CircuitRelay.prototype.srcPeer = null;\n\n    /**\n     * CircuitRelay dstPeer.\n     * @member {CircuitRelay.IPeer|null|undefined} dstPeer\n     * @memberof CircuitRelay\n     * @instance\n     */\n    CircuitRelay.prototype.dstPeer = null;\n\n    /**\n     * CircuitRelay code.\n     * @member {CircuitRelay.Status} code\n     * @memberof CircuitRelay\n     * @instance\n     */\n    CircuitRelay.prototype.code = 100;\n\n    /**\n     * Encodes the specified CircuitRelay message. Does not implicitly {@link CircuitRelay.verify|verify} messages.\n     * @function encode\n     * @memberof CircuitRelay\n     * @static\n     * @param {ICircuitRelay} m CircuitRelay message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CircuitRelay.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n            w.uint32(8).int32(m.type);\n        if (m.srcPeer != null && Object.hasOwnProperty.call(m, \"srcPeer\"))\n            $root.CircuitRelay.Peer.encode(m.srcPeer, w.uint32(18).fork()).ldelim();\n        if (m.dstPeer != null && Object.hasOwnProperty.call(m, \"dstPeer\"))\n            $root.CircuitRelay.Peer.encode(m.dstPeer, w.uint32(26).fork()).ldelim();\n        if (m.code != null && Object.hasOwnProperty.call(m, \"code\"))\n            w.uint32(32).int32(m.code);\n        return w;\n    };\n\n    /**\n     * Decodes a CircuitRelay message from the specified reader or buffer.\n     * @function decode\n     * @memberof CircuitRelay\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {CircuitRelay} CircuitRelay\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CircuitRelay.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.CircuitRelay();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.type = r.int32();\n                break;\n            case 2:\n                m.srcPeer = $root.CircuitRelay.Peer.decode(r, r.uint32());\n                break;\n            case 3:\n                m.dstPeer = $root.CircuitRelay.Peer.decode(r, r.uint32());\n                break;\n            case 4:\n                m.code = r.int32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a CircuitRelay message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof CircuitRelay\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {CircuitRelay} CircuitRelay\n     */\n    CircuitRelay.fromObject = function fromObject(d) {\n        if (d instanceof $root.CircuitRelay)\n            return d;\n        var m = new $root.CircuitRelay();\n        switch (d.type) {\n        case \"HOP\":\n        case 1:\n            m.type = 1;\n            break;\n        case \"STOP\":\n        case 2:\n            m.type = 2;\n            break;\n        case \"STATUS\":\n        case 3:\n            m.type = 3;\n            break;\n        case \"CAN_HOP\":\n        case 4:\n            m.type = 4;\n            break;\n        }\n        if (d.srcPeer != null) {\n            if (typeof d.srcPeer !== \"object\")\n                throw TypeError(\".CircuitRelay.srcPeer: object expected\");\n            m.srcPeer = $root.CircuitRelay.Peer.fromObject(d.srcPeer);\n        }\n        if (d.dstPeer != null) {\n            if (typeof d.dstPeer !== \"object\")\n                throw TypeError(\".CircuitRelay.dstPeer: object expected\");\n            m.dstPeer = $root.CircuitRelay.Peer.fromObject(d.dstPeer);\n        }\n        switch (d.code) {\n        case \"SUCCESS\":\n        case 100:\n            m.code = 100;\n            break;\n        case \"HOP_SRC_ADDR_TOO_LONG\":\n        case 220:\n            m.code = 220;\n            break;\n        case \"HOP_DST_ADDR_TOO_LONG\":\n        case 221:\n            m.code = 221;\n            break;\n        case \"HOP_SRC_MULTIADDR_INVALID\":\n        case 250:\n            m.code = 250;\n            break;\n        case \"HOP_DST_MULTIADDR_INVALID\":\n        case 251:\n            m.code = 251;\n            break;\n        case \"HOP_NO_CONN_TO_DST\":\n        case 260:\n            m.code = 260;\n            break;\n        case \"HOP_CANT_DIAL_DST\":\n        case 261:\n            m.code = 261;\n            break;\n        case \"HOP_CANT_OPEN_DST_STREAM\":\n        case 262:\n            m.code = 262;\n            break;\n        case \"HOP_CANT_SPEAK_RELAY\":\n        case 270:\n            m.code = 270;\n            break;\n        case \"HOP_CANT_RELAY_TO_SELF\":\n        case 280:\n            m.code = 280;\n            break;\n        case \"STOP_SRC_ADDR_TOO_LONG\":\n        case 320:\n            m.code = 320;\n            break;\n        case \"STOP_DST_ADDR_TOO_LONG\":\n        case 321:\n            m.code = 321;\n            break;\n        case \"STOP_SRC_MULTIADDR_INVALID\":\n        case 350:\n            m.code = 350;\n            break;\n        case \"STOP_DST_MULTIADDR_INVALID\":\n        case 351:\n            m.code = 351;\n            break;\n        case \"STOP_RELAY_REFUSED\":\n        case 390:\n            m.code = 390;\n            break;\n        case \"MALFORMED_MESSAGE\":\n        case 400:\n            m.code = 400;\n            break;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a CircuitRelay message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof CircuitRelay\n     * @static\n     * @param {CircuitRelay} m CircuitRelay\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    CircuitRelay.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.type = o.enums === String ? \"HOP\" : 1;\n            d.srcPeer = null;\n            d.dstPeer = null;\n            d.code = o.enums === String ? \"SUCCESS\" : 100;\n        }\n        if (m.type != null && m.hasOwnProperty(\"type\")) {\n            d.type = o.enums === String ? $root.CircuitRelay.Type[m.type] : m.type;\n        }\n        if (m.srcPeer != null && m.hasOwnProperty(\"srcPeer\")) {\n            d.srcPeer = $root.CircuitRelay.Peer.toObject(m.srcPeer, o);\n        }\n        if (m.dstPeer != null && m.hasOwnProperty(\"dstPeer\")) {\n            d.dstPeer = $root.CircuitRelay.Peer.toObject(m.dstPeer, o);\n        }\n        if (m.code != null && m.hasOwnProperty(\"code\")) {\n            d.code = o.enums === String ? $root.CircuitRelay.Status[m.code] : m.code;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this CircuitRelay to JSON.\n     * @function toJSON\n     * @memberof CircuitRelay\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    CircuitRelay.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Status enum.\n     * @name CircuitRelay.Status\n     * @enum {number}\n     * @property {number} SUCCESS=100 SUCCESS value\n     * @property {number} HOP_SRC_ADDR_TOO_LONG=220 HOP_SRC_ADDR_TOO_LONG value\n     * @property {number} HOP_DST_ADDR_TOO_LONG=221 HOP_DST_ADDR_TOO_LONG value\n     * @property {number} HOP_SRC_MULTIADDR_INVALID=250 HOP_SRC_MULTIADDR_INVALID value\n     * @property {number} HOP_DST_MULTIADDR_INVALID=251 HOP_DST_MULTIADDR_INVALID value\n     * @property {number} HOP_NO_CONN_TO_DST=260 HOP_NO_CONN_TO_DST value\n     * @property {number} HOP_CANT_DIAL_DST=261 HOP_CANT_DIAL_DST value\n     * @property {number} HOP_CANT_OPEN_DST_STREAM=262 HOP_CANT_OPEN_DST_STREAM value\n     * @property {number} HOP_CANT_SPEAK_RELAY=270 HOP_CANT_SPEAK_RELAY value\n     * @property {number} HOP_CANT_RELAY_TO_SELF=280 HOP_CANT_RELAY_TO_SELF value\n     * @property {number} STOP_SRC_ADDR_TOO_LONG=320 STOP_SRC_ADDR_TOO_LONG value\n     * @property {number} STOP_DST_ADDR_TOO_LONG=321 STOP_DST_ADDR_TOO_LONG value\n     * @property {number} STOP_SRC_MULTIADDR_INVALID=350 STOP_SRC_MULTIADDR_INVALID value\n     * @property {number} STOP_DST_MULTIADDR_INVALID=351 STOP_DST_MULTIADDR_INVALID value\n     * @property {number} STOP_RELAY_REFUSED=390 STOP_RELAY_REFUSED value\n     * @property {number} MALFORMED_MESSAGE=400 MALFORMED_MESSAGE value\n     */\n    CircuitRelay.Status = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[100] = \"SUCCESS\"] = 100;\n        values[valuesById[220] = \"HOP_SRC_ADDR_TOO_LONG\"] = 220;\n        values[valuesById[221] = \"HOP_DST_ADDR_TOO_LONG\"] = 221;\n        values[valuesById[250] = \"HOP_SRC_MULTIADDR_INVALID\"] = 250;\n        values[valuesById[251] = \"HOP_DST_MULTIADDR_INVALID\"] = 251;\n        values[valuesById[260] = \"HOP_NO_CONN_TO_DST\"] = 260;\n        values[valuesById[261] = \"HOP_CANT_DIAL_DST\"] = 261;\n        values[valuesById[262] = \"HOP_CANT_OPEN_DST_STREAM\"] = 262;\n        values[valuesById[270] = \"HOP_CANT_SPEAK_RELAY\"] = 270;\n        values[valuesById[280] = \"HOP_CANT_RELAY_TO_SELF\"] = 280;\n        values[valuesById[320] = \"STOP_SRC_ADDR_TOO_LONG\"] = 320;\n        values[valuesById[321] = \"STOP_DST_ADDR_TOO_LONG\"] = 321;\n        values[valuesById[350] = \"STOP_SRC_MULTIADDR_INVALID\"] = 350;\n        values[valuesById[351] = \"STOP_DST_MULTIADDR_INVALID\"] = 351;\n        values[valuesById[390] = \"STOP_RELAY_REFUSED\"] = 390;\n        values[valuesById[400] = \"MALFORMED_MESSAGE\"] = 400;\n        return values;\n    })();\n\n    /**\n     * Type enum.\n     * @name CircuitRelay.Type\n     * @enum {number}\n     * @property {number} HOP=1 HOP value\n     * @property {number} STOP=2 STOP value\n     * @property {number} STATUS=3 STATUS value\n     * @property {number} CAN_HOP=4 CAN_HOP value\n     */\n    CircuitRelay.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"HOP\"] = 1;\n        values[valuesById[2] = \"STOP\"] = 2;\n        values[valuesById[3] = \"STATUS\"] = 3;\n        values[valuesById[4] = \"CAN_HOP\"] = 4;\n        return values;\n    })();\n\n    CircuitRelay.Peer = (function() {\n\n        /**\n         * Properties of a Peer.\n         * @memberof CircuitRelay\n         * @interface IPeer\n         * @property {Uint8Array} id Peer id\n         * @property {Array.<Uint8Array>|null} [addrs] Peer addrs\n         */\n\n        /**\n         * Constructs a new Peer.\n         * @memberof CircuitRelay\n         * @classdesc Represents a Peer.\n         * @implements IPeer\n         * @constructor\n         * @param {CircuitRelay.IPeer=} [p] Properties to set\n         */\n        function Peer(p) {\n            this.addrs = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Peer id.\n         * @member {Uint8Array} id\n         * @memberof CircuitRelay.Peer\n         * @instance\n         */\n        Peer.prototype.id = $util.newBuffer([]);\n\n        /**\n         * Peer addrs.\n         * @member {Array.<Uint8Array>} addrs\n         * @memberof CircuitRelay.Peer\n         * @instance\n         */\n        Peer.prototype.addrs = $util.emptyArray;\n\n        /**\n         * Encodes the specified Peer message. Does not implicitly {@link CircuitRelay.Peer.verify|verify} messages.\n         * @function encode\n         * @memberof CircuitRelay.Peer\n         * @static\n         * @param {CircuitRelay.IPeer} m Peer message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Peer.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            w.uint32(10).bytes(m.id);\n            if (m.addrs != null && m.addrs.length) {\n                for (var i = 0; i < m.addrs.length; ++i)\n                    w.uint32(18).bytes(m.addrs[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a Peer message from the specified reader or buffer.\n         * @function decode\n         * @memberof CircuitRelay.Peer\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {CircuitRelay.Peer} Peer\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Peer.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.CircuitRelay.Peer();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.id = r.bytes();\n                    break;\n                case 2:\n                    if (!(m.addrs && m.addrs.length))\n                        m.addrs = [];\n                    m.addrs.push(r.bytes());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            if (!m.hasOwnProperty(\"id\"))\n                throw $util.ProtocolError(\"missing required 'id'\", { instance: m });\n            return m;\n        };\n\n        /**\n         * Creates a Peer message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof CircuitRelay.Peer\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {CircuitRelay.Peer} Peer\n         */\n        Peer.fromObject = function fromObject(d) {\n            if (d instanceof $root.CircuitRelay.Peer)\n                return d;\n            var m = new $root.CircuitRelay.Peer();\n            if (d.id != null) {\n                if (typeof d.id === \"string\")\n                    $util.base64.decode(d.id, m.id = $util.newBuffer($util.base64.length(d.id)), 0);\n                else if (d.id.length)\n                    m.id = d.id;\n            }\n            if (d.addrs) {\n                if (!Array.isArray(d.addrs))\n                    throw TypeError(\".CircuitRelay.Peer.addrs: array expected\");\n                m.addrs = [];\n                for (var i = 0; i < d.addrs.length; ++i) {\n                    if (typeof d.addrs[i] === \"string\")\n                        $util.base64.decode(d.addrs[i], m.addrs[i] = $util.newBuffer($util.base64.length(d.addrs[i])), 0);\n                    else if (d.addrs[i].length)\n                        m.addrs[i] = d.addrs[i];\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a Peer message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof CircuitRelay.Peer\n         * @static\n         * @param {CircuitRelay.Peer} m Peer\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Peer.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.addrs = [];\n            }\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.id = \"\";\n                else {\n                    d.id = [];\n                    if (o.bytes !== Array)\n                        d.id = $util.newBuffer(d.id);\n                }\n            }\n            if (m.id != null && m.hasOwnProperty(\"id\")) {\n                d.id = o.bytes === String ? $util.base64.encode(m.id, 0, m.id.length) : o.bytes === Array ? Array.prototype.slice.call(m.id) : m.id;\n            }\n            if (m.addrs && m.addrs.length) {\n                d.addrs = [];\n                for (var j = 0; j < m.addrs.length; ++j) {\n                    d.addrs[j] = o.bytes === String ? $util.base64.encode(m.addrs[j], 0, m.addrs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.addrs[j]) : m.addrs[j];\n                }\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Peer to JSON.\n         * @function toJSON\n         * @memberof CircuitRelay.Peer\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Peer.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Peer;\n    })();\n\n    return CircuitRelay;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst { source: abortable } = require('abortable-iterator')\nconst debug = require('debug')\nconst log = debug('libp2p:stream:converter')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n *\n * @typedef {Object} Timeline\n * @property {number} open - connection opening timestamp.\n * @property {number} [upgraded] - connection upgraded timestamp.\n * @property {number} [close]\n */\n\n/**\n * Convert a duplex iterable into a MultiaddrConnection.\n * https://github.com/libp2p/interface-transport#multiaddrconnection\n *\n * @param {object} streamProperties\n * @param {MuxedStream} streamProperties.stream\n * @param {Multiaddr} streamProperties.remoteAddr\n * @param {Multiaddr} streamProperties.localAddr\n * @param {object} [options]\n * @param {AbortSignal} [options.signal]\n * @returns {import('libp2p-interfaces/src/transport/types').MultiaddrConnection}\n */\nfunction streamToMaConnection ({ stream, remoteAddr, localAddr }, options = {}) {\n  const { sink, source } = stream\n  const maConn = {\n    /**\n     * @param {Uint8Array} source\n     */\n    async sink (source) {\n      if (options.signal) {\n        // @ts-ignore ts infers source template will be a number\n        source = abortable(source, options.signal)\n      }\n\n      try {\n        await sink(source)\n      } catch (err) {\n        // If aborted we can safely ignore\n        if (err.type !== 'aborted') {\n          // If the source errored the socket will already have been destroyed by\n          // toIterable.duplex(). If the socket errored it will already be\n          // destroyed. There's nothing to do here except log the error & return.\n          log(err)\n        }\n      }\n      close()\n    },\n    source: options.signal ? abortable(source, options.signal) : source,\n    conn: stream,\n    localAddr,\n    remoteAddr,\n    /** @type {Timeline} */\n    timeline: { open: Date.now(), close: undefined },\n    close () {\n      sink(new Uint8Array(0))\n      return close()\n    }\n  }\n\n  function close () {\n    if (!maConn.timeline.close) {\n      maConn.timeline.close = Date.now()\n    }\n    return Promise.resolve()\n  }\n\n  return maConn\n}\n\nmodule.exports = streamToMaConnection\n","const getIterator = require('get-iterator')\nconst AbortError = require('./AbortError')\n\n// Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\nconst toAbortableSource = (source, signal, options) => (\n  toMultiAbortableSource(source, Array.isArray(signal) ? signal : [{ signal, options }])\n)\n\nconst toMultiAbortableSource = (source, signals) => {\n  source = getIterator(source)\n  signals = signals.map(({ signal, options }) => ({ signal, options: options || {} }))\n\n  async function * abortable () {\n    let nextAbortHandler\n    const abortHandler = () => {\n      if (nextAbortHandler) nextAbortHandler()\n    }\n\n    for (const { signal } of signals) {\n      signal.addEventListener('abort', abortHandler)\n    }\n\n    while (true) {\n      let result\n      try {\n        for (const { signal, options } of signals) {\n          if (signal.aborted) {\n            const { abortMessage, abortCode } = options\n            throw new AbortError(abortMessage, abortCode)\n          }\n        }\n\n        const abort = new Promise((resolve, reject) => {\n          nextAbortHandler = () => {\n            const { options } = signals.find(({ signal }) => signal.aborted)\n            const { abortMessage, abortCode } = options\n            reject(new AbortError(abortMessage, abortCode))\n          }\n        })\n\n        // Race the iterator and the abort signals\n        result = await Promise.race([abort, source.next()])\n        nextAbortHandler = null\n      } catch (err) {\n        for (const { signal } of signals) {\n          signal.removeEventListener('abort', abortHandler)\n        }\n\n        // Might not have been aborted by a known signal\n        const aborter = signals.find(({ signal }) => signal.aborted)\n        const isKnownAborter = err.type === 'aborted' && aborter\n\n        if (isKnownAborter && aborter.options.onAbort) {\n          // Do any custom abort handling for the iterator\n          await aborter.options.onAbort(source)\n        }\n\n        // End the iterator if it is a generator\n        if (typeof source.return === 'function') {\n          await source.return()\n        }\n\n        if (isKnownAborter && aborter.options.returnOnAbort) {\n          return\n        }\n\n        throw err\n      }\n\n      if (result.done) break\n      yield result.value\n    }\n\n    for (const { signal } of signals) {\n      signal.removeEventListener('abort', abortHandler)\n    }\n  }\n\n  return abortable()\n}\n\nconst toAbortableSink = (sink, signal, options) => (\n  toMultiAbortableSink(sink, Array.isArray(signal) ? signal : [{ signal, options }])\n)\n\nconst toMultiAbortableSink = (sink, signals) => source => (\n  sink(toMultiAbortableSource(source, signals))\n)\n\nconst toAbortableDuplex = (duplex, signal, options) => (\n  toMultiAbortableDuplex(duplex, Array.isArray(signal) ? signal : [{ signal, options }])\n)\n\nconst toMultiAbortableDuplex = (duplex, signals) => ({\n  sink: toMultiAbortableSink(duplex.sink, signals),\n  source: toMultiAbortableSource(duplex.source, signals)\n})\n\nmodule.exports = toAbortableSource\nmodule.exports.AbortError = AbortError\nmodule.exports.source = toAbortableSource\nmodule.exports.sink = toAbortableSink\nmodule.exports.transform = toAbortableSink\nmodule.exports.duplex = toAbortableDuplex\n","// If the passed object is an (async) iterable, then get the iterator\n// If it's probably an iterator already (i.e. has next function) return it\n// else throw\nmodule.exports = function getIterator (obj) {\n  if (obj) {\n    if (typeof obj[Symbol.iterator] === 'function') {\n      return obj[Symbol.iterator]()\n    }\n    if (typeof obj[Symbol.asyncIterator] === 'function') {\n      return obj[Symbol.asyncIterator]()\n    }\n    if (typeof obj.next === 'function') {\n      return obj // probably an iterator\n    }\n  }\n  throw new Error('argument is not an iterator or iterable')\n}\n","module.exports = class AbortError extends Error {\n  constructor (message, code) {\n    super(message || 'The operation was aborted')\n    this.type = 'aborted'\n    this.code = code || 'ABORT_ERR'\n  }\n}\n","'use strict'\n\nmodule.exports = {\n  relay: '/libp2p/circuit/relay/0.1.0'\n}\n","'use strict'\n\nconst { EventEmitter } = require('events')\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @typedef {import('libp2p-interfaces/src/transport/types').Listener} Listener\n */\n\n/**\n * @param {import('../')} libp2p\n * @returns {Listener} a transport listener\n */\nmodule.exports = (libp2p) => {\n  const listeningAddrs = new Map()\n\n  /**\n   * Add swarm handler and listen for incoming connections\n   *\n   * @param {Multiaddr} addr\n   * @returns {Promise<void>}\n   */\n  async function listen (addr) {\n    const addrString = String(addr).split('/p2p-circuit').find(a => a !== '')\n\n    const relayConn = await libp2p.dial(new Multiaddr(addrString))\n    const relayedAddr = relayConn.remoteAddr.encapsulate('/p2p-circuit')\n\n    listeningAddrs.set(relayConn.remotePeer.toB58String(), relayedAddr)\n    listener.emit('listening')\n  }\n\n  /**\n   * Get fixed up multiaddrs\n   *\n   * NOTE: This method will grab the peers multiaddrs and expand them such that:\n   *\n   * a) If it's an existing /p2p-circuit address for a specific relay i.e.\n   * `/ip4/0.0.0.0/tcp/0/ipfs/QmRelay/p2p-circuit` this method will expand the\n   * address to `/ip4/0.0.0.0/tcp/0/ipfs/QmRelay/p2p-circuit/ipfs/QmPeer` where\n   * `QmPeer` is this peers id\n   * b) If it's not a /p2p-circuit address, it will encapsulate the address as a /p2p-circuit\n   * addr, such when dialing over a relay with this address, it will create the circuit using\n   * the encapsulated transport address. This is useful when for example, a peer should only\n   * be dialed over TCP rather than any other transport\n   *\n   * @returns {Multiaddr[]}\n   */\n  function getAddrs () {\n    const addrs = []\n    for (const addr of listeningAddrs.values()) {\n      addrs.push(addr)\n    }\n    return addrs\n  }\n\n  /** @type Listener */\n  const listener = Object.assign(new EventEmitter(), {\n    close: () => Promise.resolve(),\n    listen,\n    getAddrs\n  })\n\n  // Remove listeningAddrs when a peer disconnects\n  libp2p.connectionManager.on('peer:disconnect', (connection) => {\n    const deleted = listeningAddrs.delete(connection.remotePeer.toB58String())\n\n    if (deleted) {\n      // Announce listen addresses change\n      listener.emit('close')\n    }\n  })\n\n  return listener\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:circuit:hop'), {\n  error: debug('libp2p:circuit:hop:err')\n})\nconst errCode = require('err-code')\n\nconst PeerId = require('peer-id')\nconst { validateAddrs } = require('./utils')\nconst StreamHandler = require('./stream-handler')\nconst { CircuitRelay: CircuitPB } = require('../protocol')\nconst { pipe } = require('it-pipe')\nconst { codes: Errors } = require('../../errors')\n\nconst { stop } = require('./stop')\n\nconst multicodec = require('./../multicodec')\n\n/**\n * @typedef {import('../protocol').ICircuitRelay} ICircuitRelay\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('../transport')} Transport\n */\n\n/**\n * @typedef {Object} HopRequest\n * @property {Connection} connection\n * @property {ICircuitRelay} request\n * @property {StreamHandler} streamHandler\n * @property {Transport} circuit\n */\n\n/**\n * @param {HopRequest} options\n * @returns {Promise<void>}\n */\nasync function handleHop ({\n  connection,\n  request,\n  streamHandler,\n  circuit\n}) {\n  // Ensure hop is enabled\n  if (!circuit._options.hop.enabled) {\n    log('HOP request received but we are not acting as a relay')\n    return streamHandler.end({\n      type: CircuitPB.Type.STATUS,\n      code: CircuitPB.Status.HOP_CANT_SPEAK_RELAY\n    })\n  }\n\n  // Validate the HOP request has the required input\n  try {\n    validateAddrs(request, streamHandler)\n  } catch (err) {\n    return log.error('invalid hop request via peer %s', connection.remotePeer.toB58String(), err)\n  }\n\n  if (!request.dstPeer) {\n    log('HOP request received but we do not receive a dstPeer')\n    return\n  }\n\n  // Get the connection to the destination (stop) peer\n  const destinationPeer = new PeerId(request.dstPeer.id)\n\n  const destinationConnection = circuit._connectionManager.get(destinationPeer)\n  if (!destinationConnection && !circuit._options.hop.active) {\n    log('HOP request received but we are not connected to the destination peer')\n    return streamHandler.end({\n      type: CircuitPB.Type.STATUS,\n      code: CircuitPB.Status.HOP_NO_CONN_TO_DST\n    })\n  }\n\n  // TODO: Handle being an active relay\n  if (!destinationConnection) {\n    return\n  }\n\n  // Handle the incoming HOP request by performing a STOP request\n  const stopRequest = {\n    type: CircuitPB.Type.STOP,\n    dstPeer: request.dstPeer,\n    srcPeer: request.srcPeer\n  }\n\n  let destinationStream\n  try {\n    destinationStream = await stop({\n      connection: destinationConnection,\n      request: stopRequest\n    })\n  } catch (err) {\n    return log.error(err)\n  }\n\n  log('hop request from %s is valid', connection.remotePeer.toB58String())\n  streamHandler.write({\n    type: CircuitPB.Type.STATUS,\n    code: CircuitPB.Status.SUCCESS\n  })\n  const sourceStream = streamHandler.rest()\n\n  // Short circuit the two streams to create the relayed connection\n  return pipe(\n    sourceStream,\n    destinationStream,\n    sourceStream\n  )\n}\n\n/**\n * Performs a HOP request to a relay peer, to request a connection to another\n * peer. A new, virtual, connection will be created between the two via the relay.\n *\n * @param {object} options\n * @param {Connection} options.connection - Connection to the relay\n * @param {ICircuitRelay} options.request\n * @returns {Promise<MuxedStream>}\n */\nasync function hop ({\n  connection,\n  request\n}) {\n  // Create a new stream to the relay\n  const { stream } = await connection.newStream([multicodec.relay])\n  // Send the HOP request\n  const streamHandler = new StreamHandler({ stream })\n  streamHandler.write(request)\n\n  const response = await streamHandler.read()\n\n  if (!response) {\n    throw errCode(new Error('HOP request had no response'), Errors.ERR_HOP_REQUEST_FAILED)\n  }\n\n  if (response.code === CircuitPB.Status.SUCCESS) {\n    log('hop request was successful')\n    return streamHandler.rest()\n  }\n\n  log('hop request failed with code %d, closing stream', response.code)\n  streamHandler.close()\n  throw errCode(new Error(`HOP request failed with code ${response.code}`), Errors.ERR_HOP_REQUEST_FAILED)\n}\n\n/**\n * Performs a CAN_HOP request to a relay peer, in order to understand its capabilities.\n *\n * @param {object} options\n * @param {Connection} options.connection - Connection to the relay\n * @returns {Promise<boolean>}\n */\nasync function canHop ({\n  connection\n}) {\n  // Create a new stream to the relay\n  const { stream } = await connection.newStream([multicodec.relay])\n  // Send the HOP request\n  const streamHandler = new StreamHandler({ stream })\n  streamHandler.write({\n    type: CircuitPB.Type.CAN_HOP\n  })\n\n  const response = await streamHandler.read()\n  await streamHandler.close()\n\n  if (!response || response.code !== CircuitPB.Status.SUCCESS) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Creates an unencoded CAN_HOP response based on the Circuits configuration\n *\n * @param {Object} options\n * @param {Connection} options.connection\n * @param {StreamHandler} options.streamHandler\n * @param {Transport} options.circuit\n * @private\n */\nfunction handleCanHop ({\n  connection,\n  streamHandler,\n  circuit\n}) {\n  const canHop = circuit._options.hop.enabled\n  log('can hop (%s) request from %s', canHop, connection.remotePeer.toB58String())\n  streamHandler.end({\n    type: CircuitPB.Type.STATUS,\n    code: canHop ? CircuitPB.Status.SUCCESS : CircuitPB.Status.HOP_CANT_SPEAK_RELAY\n  })\n}\n\nmodule.exports = {\n  handleHop,\n  hop,\n  canHop,\n  handleCanHop\n}\n","'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst { CircuitRelay } = require('../protocol')\n\n/**\n * @typedef {import('./stream-handler')} StreamHandler\n * @typedef {import('../protocol').ICircuitRelay} ICircuitRelay\n */\n\n/**\n * Write a response\n *\n * @param {StreamHandler} streamHandler\n * @param {import('../protocol').CircuitRelay.Status} status\n */\nfunction writeResponse (streamHandler, status) {\n  streamHandler.write({\n    type: CircuitRelay.Type.STATUS,\n    code: status\n  })\n}\n\n/**\n * Validate incomming HOP/STOP message\n *\n * @param {ICircuitRelay} msg - A CircuitRelay unencoded protobuf message\n * @param {StreamHandler} streamHandler\n */\nfunction validateAddrs (msg, streamHandler) {\n  try {\n    if (msg.dstPeer && msg.dstPeer.addrs) {\n      msg.dstPeer.addrs.forEach((addr) => {\n        return new Multiaddr(addr)\n      })\n    }\n  } catch (err) {\n    writeResponse(streamHandler, msg.type === CircuitRelay.Type.HOP\n      ? CircuitRelay.Status.HOP_DST_MULTIADDR_INVALID\n      : CircuitRelay.Status.STOP_DST_MULTIADDR_INVALID)\n    throw err\n  }\n\n  try {\n    if (msg.srcPeer && msg.srcPeer.addrs) {\n      msg.srcPeer.addrs.forEach((addr) => {\n        return new Multiaddr(addr)\n      })\n    }\n  } catch (err) {\n    writeResponse(streamHandler, msg.type === CircuitRelay.Type.HOP\n      ? CircuitRelay.Status.HOP_SRC_MULTIADDR_INVALID\n      : CircuitRelay.Status.STOP_SRC_MULTIADDR_INVALID)\n    throw err\n  }\n}\n\nmodule.exports = {\n  validateAddrs\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:circuit:stream-handler'), {\n  error: debug('libp2p:circuit:stream-handler:err')\n})\n\nconst lp = require('it-length-prefixed')\n// @ts-ignore it-handshake does not export types\nconst handshake = require('it-handshake')\nconst { CircuitRelay } = require('../protocol')\n\n/**\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('../protocol').ICircuitRelay} ICircuitRelay\n */\n\nclass StreamHandler {\n  /**\n   * Create a stream handler for connection\n   *\n   * @class\n   * @param {object} options\n   * @param {MuxedStream} options.stream - A duplex iterable\n   * @param {number} [options.maxLength = 4096] - max bytes length of message\n   */\n  constructor ({ stream, maxLength = 4096 }) {\n    this.stream = stream\n\n    this.shake = handshake(this.stream)\n    // @ts-ignore options are not optional\n    this.decoder = lp.decode.fromReader(this.shake.reader, { maxDataLength: maxLength })\n  }\n\n  /**\n   * Read and decode message\n   *\n   * @async\n   */\n  async read () {\n    const msg = await this.decoder.next()\n    if (msg.value) {\n      const value = CircuitRelay.decode(msg.value.slice())\n      log('read message type', value.type)\n      return value\n    }\n\n    log('read received no value, closing stream')\n    // End the stream, we didn't get data\n    this.close()\n  }\n\n  /**\n   * Encode and write array of buffers\n   *\n   * @param {ICircuitRelay} msg - An unencoded CircuitRelay protobuf message\n   * @returns {void}\n   */\n  write (msg) {\n    log('write message type %s', msg.type)\n    // @ts-ignore lp.encode expects type type 'Buffer | BufferList', not 'Uint8Array'\n    this.shake.write(lp.encode.single(CircuitRelay.encode(msg).finish()))\n  }\n\n  /**\n   * Return the handshake rest stream and invalidate handler\n   *\n   * @returns {*} A duplex iterable\n   */\n  rest () {\n    this.shake.rest()\n    return this.shake.stream\n  }\n\n  /**\n   * @param {ICircuitRelay} msg - An unencoded CircuitRelay protobuf message\n   */\n  end (msg) {\n    this.write(msg)\n    this.close()\n  }\n\n  /**\n   * Close the stream\n   *\n   * @returns {void}\n   */\n  close () {\n    log('closing the stream')\n    this.rest().sink([])\n  }\n}\n\nmodule.exports = StreamHandler\n","'use strict'\n\n/**\n * @typedef {import('./types').EncoderOptions} EncoderOptions\n * @typedef {import('./types').DecoderOptions} DecoderOptions\n */\n\nexports.encode = require('./encode')\nexports.decode = require('./decode')\n\nexports.varintEncode = require('./varint-encode')\nexports.varintDecode = require('./varint-decode')\n\nexports.int32BEEncode = require('./int32BE-encode')\nexports.int32BEDecode = require('./int32BE-decode')\n","'use strict'\n\nconst { Buffer } = require('buffer')\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\nconst varintEncode = require('./varint-encode')\n\nconst MIN_POOL_SIZE = 8 // Varint.encode(Number.MAX_SAFE_INTEGER).length\nconst DEFAULT_POOL_SIZE = 10 * 1024\n\n/**\n * @param {import('./types').EncoderOptions} [options]\n */\nfunction encode (options) {\n  options = options || {}\n\n  const poolSize = Math.max(options.poolSize || DEFAULT_POOL_SIZE, options.minPoolSize || MIN_POOL_SIZE)\n  const encodeLength = options.lengthEncoder || varintEncode\n\n  /**\n   * @param {AsyncIterable<BufferList>} source\n   */\n  const encoder = async function * (source) {\n    let pool = Buffer.alloc(poolSize)\n    let poolOffset = 0\n\n    for await (const chunk of source) {\n      encodeLength(chunk.length, pool, poolOffset)\n      const encodedLength = pool.slice(poolOffset, poolOffset + encodeLength.bytes)\n      poolOffset += encodeLength.bytes\n\n      if (pool.length - poolOffset < MIN_POOL_SIZE) {\n        pool = Buffer.alloc(poolSize)\n        poolOffset = 0\n      }\n\n      yield new BufferList().append(encodedLength).append(chunk)\n      // yield Buffer.concat([encodedLength, chunk])\n    }\n  }\n\n  return encoder\n}\n\n/**\n * @param {BufferList | Buffer} chunk\n * @param {import('./types').EncoderOptions} [options]\n */\nencode.single = (chunk, options) => {\n  options = options || {}\n  const encodeLength = options.lengthEncoder || varintEncode\n  return new BufferList([encodeLength(chunk.length), chunk.slice()])\n}\n\nmodule.exports = encode\nmodule.exports.MIN_POOL_SIZE = MIN_POOL_SIZE\nmodule.exports.DEFAULT_POOL_SIZE = DEFAULT_POOL_SIZE\n",null,null,null,"'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n","'use strict'\n\n// @ts-ignore no types\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n/**\n * Encode the passed length `value` to the `target` buffer at the given `offset`\n *\n * @type {import('./types').LengthEncoderFunction}\n */\n// @ts-ignore cannot declare expected bytes property\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset)\n  varintEncode.bytes = Varint.encode.bytes\n  // If no target, create Buffer from returned array\n  return target || Buffer.from(ret)\n}\n\nmodule.exports = varintEncode\n","'use strict'\n\nconst { Buffer } = require('buffer')\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\nconst varintDecode = require('./varint-decode')\n\n// Maximum length of the length section of the message\nconst MAX_LENGTH_LENGTH = 8 // Varint.encode(Number.MAX_SAFE_INTEGER).length\n// Maximum length of the data section of the message\nconst MAX_DATA_LENGTH = 1024 * 1024 * 4\n\nconst Empty = Buffer.alloc(0)\nconst ReadModes = { LENGTH: 'readLength', DATA: 'readData' }\n\nconst ReadHandlers = {\n  /**\n   * @param {BufferList} chunk\n   * @param {BufferList} buffer\n   * @param {import('./types').ReadState | undefined} state\n   * @param {import('./types').DecoderOptions} options\n   * @returns {import('./types').ReadResult}\n   */\n  [ReadModes.LENGTH]: (chunk, buffer, state, options) => {\n    // console.log(ReadModes.LENGTH, chunk.length)\n    buffer = buffer.append(chunk)\n\n    let dataLength\n    try {\n      dataLength = options.lengthDecoder(buffer)\n    } catch (err) {\n      if (buffer.length > options.maxLengthLength) {\n        throw Object.assign(err, { message: 'message length too long', code: 'ERR_MSG_LENGTH_TOO_LONG' })\n      }\n      if (err instanceof RangeError) {\n        return { mode: ReadModes.LENGTH, buffer, chunk: undefined, state: undefined, data: undefined }\n      }\n      throw err\n    }\n\n    if (dataLength > options.maxDataLength) {\n      throw Object.assign(new Error('message data too long'), { code: 'ERR_MSG_DATA_TOO_LONG' })\n    }\n\n    chunk = buffer.shallowSlice(options.lengthDecoder.bytes)\n    buffer = new BufferList()\n\n    if (options.onLength) options.onLength(dataLength)\n\n    if (dataLength <= 0) {\n      if (options.onData) options.onData(Empty)\n      return { mode: ReadModes.LENGTH, chunk, buffer, data: Empty }\n    }\n\n    return { mode: ReadModes.DATA, chunk, buffer, state: { dataLength }, data: undefined }\n  },\n\n  /**\n   * @param {BufferList} chunk\n   * @param {BufferList} buffer\n   * @param {import('./types').ReadState | undefined} state\n   * @param {import('./types').DecoderOptions} options\n   * @returns {import('./types').ReadResult}\n   */\n  [ReadModes.DATA]: (chunk, buffer, state, options) => {\n    // console.log(ReadModes.DATA, chunk.length)\n    buffer = buffer.append(chunk)\n\n    if (!state) {\n      throw new Error('state is required')\n    }\n\n    if (buffer.length < state.dataLength) {\n      return { mode: ReadModes.DATA, buffer, state, chunk: undefined, data: undefined }\n    }\n\n    const { dataLength } = state\n    const data = buffer.shallowSlice(0, dataLength)\n\n    const nextChunk = buffer.length > dataLength ? buffer.shallowSlice(dataLength) : undefined\n    buffer = new BufferList()\n\n    if (options.onData) options.onData(data)\n    return { mode: ReadModes.LENGTH, chunk: nextChunk, buffer, state: undefined, data }\n  }\n}\n\n/**\n * @param {any} [options]\n */\nfunction decode (options) {\n  options = options || {}\n\n  /**\n   * @type {import('./types').DecoderOptions}\n   */\n  const opts = {\n    lengthDecoder: options.lengthDecoder || varintDecode,\n    maxLengthLength: options.maxLengthLength || MAX_LENGTH_LENGTH,\n    maxDataLength: options.maxDataLength || MAX_DATA_LENGTH,\n    onLength: options.onLength,\n    onData: options.onData\n  }\n\n  /**\n   * @param {AsyncIterable<BufferList>} source\n   */\n  const decoder = async function * (source) {\n    let buffer = new BufferList()\n    let mode = ReadModes.LENGTH // current parsing mode\n    let state // accumulated state for the current mode\n\n    for await (const chunk of source) {\n      /** @type {BufferList | undefined} */\n      let nextChunk = chunk\n\n      // Each chunk may contain multiple messages - keep calling handler for the\n      // current parsing mode until all handlers have consumed the chunk.\n      while (nextChunk) {\n        const result = ReadHandlers[mode](nextChunk, buffer, state, opts)\n\n        mode = result.mode\n        nextChunk = result.chunk\n        buffer = result.buffer\n        state = result.state\n\n        if (result.data) {\n          yield result.data\n        }\n      }\n    }\n\n    if (buffer.length) {\n      throw Object.assign(new Error('unexpected end of input'), { code: 'ERR_UNEXPECTED_EOF' })\n    }\n  }\n\n  return decoder\n}\n\n/**\n * @param {*} reader\n * @param {import('./types').DecoderOptions} [options]\n * @returns\n */\ndecode.fromReader = (reader, options) => {\n  let byteLength = 1 // Read single byte chunks until the length is known\n\n  const varByteSource = {\n    [Symbol.asyncIterator] () { return this },\n    next: async () => {\n      try {\n        return await reader.next(byteLength)\n      } catch (err) {\n        if (err.code === 'ERR_UNDER_READ') {\n          return { done: true, value: null }\n        }\n        throw err\n      } finally {\n        // Reset the byteLength so we continue to check for varints\n        byteLength = 1\n      }\n    }\n  }\n\n  /**\n   * Once the length has been parsed, read chunk for that length\n   *\n   * @param {number} l\n   */\n  const onLength = l => { byteLength = l }\n  return decode({\n    ...(options || {}),\n    onLength\n  })(varByteSource)\n}\n\nmodule.exports = decode\nmodule.exports.MAX_LENGTH_LENGTH = MAX_LENGTH_LENGTH\nmodule.exports.MAX_DATA_LENGTH = MAX_DATA_LENGTH\n","'use strict'\n\n// @ts-ignore no types\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n/**\n * @param {any} bl\n */\nconst toBufferProxy = bl => new Proxy({}, {\n  get: (_, prop) => {\n    // @ts-ignore magic\n    return prop[0] === 'l' ? bl[prop] : bl.get(parseInt(prop))\n  }\n})\n\n/**\n * @type {import('./types').LengthDecoderFunction}\n */\n// @ts-ignore cannot declare expected bytes property\nconst varintDecode = data => {\n  const len = Varint.decode(Buffer.isBuffer(data) ? data : toBufferProxy(data))\n  varintDecode.bytes = Varint.decode.bytes\n  return len\n}\n\nmodule.exports = varintDecode\n","'use strict'\n\nconst { Buffer } = require('buffer')\n\n/**\n * @param {number} value\n * @param {Buffer} target\n * @param {number} offset\n */\nconst int32BEEncode = (value, target, offset) => {\n  target = target || Buffer.allocUnsafe(4)\n  target.writeInt32BE(value, offset)\n  return target\n}\n\nint32BEEncode.bytes = 4 // Always because fixed length\n\nmodule.exports = int32BEEncode\n","'use strict'\n\n/**\n * @param {import('buffer').Buffer} data\n */\nconst int32BEDecode = data => {\n  if (data.length < 4) throw RangeError('Could not decode int32BE')\n  return data.readInt32BE(0)\n}\n\nint32BEDecode.bytes = 4 // Always because fixed length\n\nmodule.exports = int32BEDecode\n","'use strict'\n\nconst Reader = require('it-reader')\nconst Writer = require('it-pushable')\nconst defer = require('p-defer')\n\n// Convert a duplex stream into a reader and writer and rest stream\nmodule.exports = stream => {\n  const writer = Writer() // Write bytes on demand to the sink\n  const reader = Reader(stream.source) // Read bytes on demand from the source\n\n  // Waits for a source to be passed to the rest stream's sink\n  const sourcePromise = defer()\n  let sinkErr\n\n  const sinkPromise = stream.sink((async function * () {\n    yield * writer\n    const source = await sourcePromise.promise\n    yield * source\n  })())\n\n  sinkPromise.catch(err => {\n    sinkErr = err\n  })\n\n  const rest = {\n    sink: source => {\n      if (sinkErr) {\n        return Promise.reject(sinkErr)\n      }\n\n      sourcePromise.resolve(source)\n      return sinkPromise\n    },\n    source: reader\n  }\n\n  return {\n    reader,\n    writer,\n    stream: rest,\n    rest: () => writer.end(),\n    write: writer.push,\n    read: async () => {\n      return (await reader.next()).value\n    }\n  }\n}\n","const BufferList = require('bl/BufferList')\n\nmodule.exports = source => {\n  const reader = (async function * () {\n    let bytes = yield // Allows us to receive 8 when reader.next(8) is called\n    let bl = new BufferList()\n\n    for await (const chunk of source) {\n      if (!bytes) {\n        bytes = yield bl.append(chunk)\n        bl = new BufferList()\n        continue\n      }\n\n      bl.append(chunk)\n\n      while (bl.length >= bytes) {\n        const data = bl.shallowSlice(0, bytes)\n        bl.consume(bytes)\n        bytes = yield data\n\n        // If we no longer want a specific byte length, we yield the rest now\n        if (!bytes) {\n          if (bl.length) {\n            bytes = yield bl\n            bl = new BufferList()\n          }\n          break // bytes is null and/or no more buffer to yield\n        }\n      }\n    }\n\n    // Consumer wants more bytes but the source has ended and our buffer\n    // is not big enough to satisfy.\n    if (bytes) {\n      throw Object.assign(\n        new Error(`stream ended before ${bytes} bytes became available`),\n        { code: 'ERR_UNDER_READ', buffer: bl }\n      )\n    }\n  })()\n\n  reader.next()\n  return reader\n}\n","'use strict';\n\nconst pDefer = () => {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n};\n\nmodule.exports = pDefer;\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:circuit:stop'), {\n  error: debug('libp2p:circuit:stop:err')\n})\n\nconst { CircuitRelay: CircuitPB } = require('../protocol')\nconst multicodec = require('../multicodec')\nconst StreamHandler = require('./stream-handler')\nconst { validateAddrs } = require('./utils')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('../protocol').ICircuitRelay} ICircuitRelay\n */\n\n/**\n * Handles incoming STOP requests\n *\n * @private\n * @param {Object} options\n * @param {Connection} options.connection\n * @param {ICircuitRelay} options.request - The CircuitRelay protobuf request (unencoded)\n * @param {StreamHandler} options.streamHandler\n * @returns {Promise<MuxedStream>|void} Resolves a duplex iterable\n */\nmodule.exports.handleStop = function handleStop ({\n  connection,\n  request,\n  streamHandler\n}) {\n  // Validate the STOP request has the required input\n  try {\n    validateAddrs(request, streamHandler)\n  } catch (err) {\n    return log.error('invalid stop request via peer %s', connection.remotePeer.toB58String(), err)\n  }\n\n  // The request is valid\n  log('stop request is valid')\n  streamHandler.write({\n    type: CircuitPB.Type.STATUS,\n    code: CircuitPB.Status.SUCCESS\n  })\n  return streamHandler.rest()\n}\n\n/**\n * Creates a STOP request\n *\n * @private\n * @param {Object} options\n * @param {Connection} options.connection\n * @param {ICircuitRelay} options.request - The CircuitRelay protobuf request (unencoded)\n * @returns {Promise<MuxedStream|void>} Resolves a duplex iterable\n */\nmodule.exports.stop = async function stop ({\n  connection,\n  request\n}) {\n  const { stream } = await connection.newStream([multicodec.relay])\n  log('starting stop request to %s', connection.remotePeer.toB58String())\n  const streamHandler = new StreamHandler({ stream })\n\n  streamHandler.write(request)\n  const response = await streamHandler.read()\n\n  if (!response) {\n    return streamHandler.close()\n  }\n\n  if (response.code === CircuitPB.Status.SUCCESS) {\n    log('stop request to %s was successful', connection.remotePeer.toB58String())\n    return streamHandler.rest()\n  }\n\n  log('stop request failed with code %d', response.code)\n  streamHandler.close()\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:relay'), {\n  error: debug('libp2p:relay:err')\n})\n\nconst {\n  setDelayedInterval,\n  clearDelayedInterval\n// @ts-ignore set-delayed-interval does not export types\n} = require('set-delayed-interval')\n\nconst AutoRelay = require('./auto-relay')\nconst { namespaceToCid } = require('./utils')\nconst {\n  RELAY_RENDEZVOUS_NS\n} = require('./constants')\n\n/**\n * @typedef {import('../')} Libp2p\n *\n * @typedef {Object} RelayAdvertiseOptions\n * @property {number} [bootDelay = ADVERTISE_BOOT_DELAY]\n * @property {boolean} [enabled = true]\n * @property {number} [ttl = ADVERTISE_TTL]\n *\n * @typedef {Object} HopOptions\n * @property {boolean} [enabled = false]\n * @property {boolean} [active = false]\n *\n * @typedef {Object} AutoRelayOptions\n * @property {number} [maxListeners = 2] - maximum number of relays to listen.\n * @property {boolean} [enabled = false]\n */\n\nclass Relay {\n  /**\n   * Creates an instance of Relay.\n   *\n   * @class\n   * @param {Libp2p} libp2p\n   */\n  constructor (libp2p) {\n    this._libp2p = libp2p\n    this._options = {\n      ...libp2p._config.relay\n    }\n\n    // Create autoRelay if enabled\n    this._autoRelay = this._options.autoRelay.enabled && new AutoRelay({ libp2p, ...this._options.autoRelay })\n\n    this._advertiseService = this._advertiseService.bind(this)\n  }\n\n  /**\n   * Start Relay service.\n   *\n   * @returns {void}\n   */\n  start () {\n    // Advertise service if HOP enabled\n    const canHop = this._options.hop.enabled\n\n    if (canHop && this._options.advertise.enabled) {\n      this._timeout = setDelayedInterval(\n        this._advertiseService, this._options.advertise.ttl, this._options.advertise.bootDelay\n      )\n    }\n  }\n\n  /**\n   * Stop Relay service.\n   *\n   * @returns {void}\n   */\n  stop () {\n    clearDelayedInterval(this._timeout)\n  }\n\n  /**\n   * Advertise hop relay service in the network.\n   *\n   * @returns {Promise<void>}\n   */\n  async _advertiseService () {\n    try {\n      const cid = await namespaceToCid(RELAY_RENDEZVOUS_NS)\n      await this._libp2p.contentRouting.provide(cid)\n    } catch (err) {\n      if (err.code === 'NO_ROUTERS_AVAILABLE') {\n        log.error('a content router, such as a DHT, must be provided in order to advertise the relay service', err)\n        // Stop the advertise\n        this.stop()\n      } else {\n        log.error(err)\n      }\n    }\n  }\n}\n\nmodule.exports = Relay\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:auto-relay'), {\n  error: debug('libp2p:auto-relay:err')\n})\n\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst { Multiaddr } = require('multiaddr')\nconst PeerId = require('peer-id')\n\nconst { relay: multicodec } = require('./multicodec')\nconst { canHop } = require('./circuit/hop')\nconst { namespaceToCid } = require('./utils')\nconst {\n  CIRCUIT_PROTO_CODE,\n  HOP_METADATA_KEY,\n  HOP_METADATA_VALUE,\n  RELAY_RENDEZVOUS_NS\n} = require('./constants')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('../peer-store/address-book').Address} Address\n */\n\n/**\n * @typedef {Object} AutoRelayProperties\n * @property {import('../')} libp2p\n *\n * @typedef {Object} AutoRelayOptions\n * @property {number} [maxListeners = 1] - maximum number of relays to listen.\n */\n\nclass AutoRelay {\n  /**\n   * Creates an instance of AutoRelay.\n   *\n   * @class\n   * @param {AutoRelayProperties & AutoRelayOptions} props\n   */\n  constructor ({ libp2p, maxListeners = 1 }) {\n    this._libp2p = libp2p\n    this._peerId = libp2p.peerId\n    this._peerStore = libp2p.peerStore\n    this._connectionManager = libp2p.connectionManager\n    this._transportManager = libp2p.transportManager\n    this._addressSorter = libp2p.dialer.addressSorter\n\n    this.maxListeners = maxListeners\n\n    /**\n     * @type {Set<string>}\n     */\n    this._listenRelays = new Set()\n\n    this._onProtocolChange = this._onProtocolChange.bind(this)\n    this._onPeerDisconnected = this._onPeerDisconnected.bind(this)\n\n    this._peerStore.on('change:protocols', this._onProtocolChange)\n    this._connectionManager.on('peer:disconnect', this._onPeerDisconnected)\n  }\n\n  /**\n   * Check if a peer supports the relay protocol.\n   * If the protocol is not supported, check if it was supported before and remove it as a listen relay.\n   * If the protocol is supported, check if the peer supports **HOP** and add it as a listener if\n   * inside the threshold.\n   *\n   * @param {Object} props\n   * @param {PeerId} props.peerId\n   * @param {string[]} props.protocols\n   * @returns {Promise<void>}\n   */\n  async _onProtocolChange ({ peerId, protocols }) {\n    const id = peerId.toB58String()\n\n    // Check if it has the protocol\n    const hasProtocol = protocols.find(protocol => protocol === multicodec)\n\n    // If no protocol, check if we were keeping the peer before as a listenRelay\n    if (!hasProtocol && this._listenRelays.has(id)) {\n      this._removeListenRelay(id)\n      return\n    } else if (!hasProtocol || this._listenRelays.has(id)) {\n      return\n    }\n\n    // If protocol, check if can hop, store info in the metadataBook and listen on it\n    try {\n      const connection = this._connectionManager.get(peerId)\n      if (!connection) {\n        return\n      }\n\n      // Do not hop on a relayed connection\n      if (connection.remoteAddr.protoCodes().includes(CIRCUIT_PROTO_CODE)) {\n        log(`relayed connection to ${id} will not be used to hop on`)\n        return\n      }\n\n      const supportsHop = await canHop({ connection })\n\n      if (supportsHop) {\n        this._peerStore.metadataBook.set(peerId, HOP_METADATA_KEY, uint8ArrayFromString(HOP_METADATA_VALUE))\n        await this._addListenRelay(connection, id)\n      }\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Peer disconnects.\n   *\n   * @param {Connection} connection - connection to the peer\n   * @returns {void}\n   */\n  _onPeerDisconnected (connection) {\n    const peerId = connection.remotePeer\n    const id = peerId.toB58String()\n\n    // Not listening on this relay\n    if (!this._listenRelays.has(id)) {\n      return\n    }\n\n    this._removeListenRelay(id)\n  }\n\n  /**\n   * Attempt to listen on the given relay connection.\n   *\n   * @private\n   * @param {Connection} connection - connection to the peer\n   * @param {string} id - peer identifier string\n   * @returns {Promise<void>}\n   */\n  async _addListenRelay (connection, id) {\n    // Check if already listening on enough relays\n    if (this._listenRelays.size >= this.maxListeners) {\n      return\n    }\n\n    // Get peer known addresses and sort them per public addresses first\n    const remoteAddrs = this._peerStore.addressBook.getMultiaddrsForPeer(\n      connection.remotePeer, this._addressSorter\n    )\n\n    if (!remoteAddrs || !remoteAddrs.length) {\n      return\n    }\n\n    const listenAddr = `${remoteAddrs[0].toString()}/p2p-circuit`\n    this._listenRelays.add(id)\n\n    // Attempt to listen on relay\n    try {\n      await this._transportManager.listen([new Multiaddr(listenAddr)])\n      // Announce multiaddrs will update on listen success by TransportManager event being triggered\n    } catch (err) {\n      log.error(err)\n      this._listenRelays.delete(id)\n    }\n  }\n\n  /**\n   * Remove listen relay.\n   *\n   * @private\n   * @param {string} id - peer identifier string.\n   * @returns {void}\n   */\n  _removeListenRelay (id) {\n    if (this._listenRelays.delete(id)) {\n      // TODO: this should be responsibility of the connMgr\n      this._listenOnAvailableHopRelays([id])\n    }\n  }\n\n  /**\n   * Try to listen on available hop relay connections.\n   * The following order will happen while we do not have enough relays.\n   * 1. Check the metadata store for known relays, try to listen on the ones we are already connected.\n   * 2. Dial and try to listen on the peers we know that support hop but are not connected.\n   * 3. Search the network.\n   *\n   * @param {string[]} [peersToIgnore]\n   * @returns {Promise<void>}\n   */\n  async _listenOnAvailableHopRelays (peersToIgnore = []) {\n    // TODO: The peer redial issue on disconnect should be handled by connection gating\n    // Check if already listening on enough relays\n    if (this._listenRelays.size >= this.maxListeners) {\n      return\n    }\n\n    const knownHopsToDial = []\n\n    // Check if we have known hop peers to use and attempt to listen on the already connected\n    for (const [id, metadataMap] of this._peerStore.metadataBook.data.entries()) {\n      // Continue to next if listening on this or peer to ignore\n      if (this._listenRelays.has(id) || peersToIgnore.includes(id)) {\n        continue\n      }\n\n      const supportsHop = metadataMap.get(HOP_METADATA_KEY)\n\n      // Continue to next if it does not support Hop\n      if (!supportsHop || uint8ArrayToString(supportsHop) !== HOP_METADATA_VALUE) {\n        continue\n      }\n\n      const peerId = PeerId.createFromCID(id)\n      const connection = this._connectionManager.get(peerId)\n\n      // If not connected, store for possible later use.\n      if (!connection) {\n        knownHopsToDial.push(peerId)\n        continue\n      }\n\n      await this._addListenRelay(connection, id)\n\n      // Check if already listening on enough relays\n      if (this._listenRelays.size >= this.maxListeners) {\n        return\n      }\n    }\n\n    // Try to listen on known peers that are not connected\n    for (const peerId of knownHopsToDial) {\n      const connection = await this._libp2p.dial(peerId)\n      await this._addListenRelay(connection, peerId.toB58String())\n\n      // Check if already listening on enough relays\n      if (this._listenRelays.size >= this.maxListeners) {\n        return\n      }\n    }\n\n    // Try to find relays to hop on the network\n    try {\n      const cid = await namespaceToCid(RELAY_RENDEZVOUS_NS)\n      for await (const provider of this._libp2p.contentRouting.findProviders(cid)) {\n        if (!provider.multiaddrs.length) {\n          continue\n        }\n        const peerId = provider.id\n\n        this._peerStore.addressBook.add(peerId, provider.multiaddrs)\n        const connection = await this._libp2p.dial(peerId)\n\n        await this._addListenRelay(connection, peerId.toB58String())\n\n        // Check if already listening on enough relays\n        if (this._listenRelays.size >= this.maxListeners) {\n          return\n        }\n      }\n    } catch (err) {\n      log.error(err)\n    }\n  }\n}\n\nmodule.exports = AutoRelay\n","'use strict'\n\nconst CID = require('cids')\nconst multihashing = require('multihashing-async')\n\nconst TextEncoder = require('ipfs-utils/src/text-encoder')\n\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\nmodule.exports.namespaceToCid = async (namespace) => {\n  const bytes = new TextEncoder().encode(namespace)\n  const hash = await multihashing(bytes, 'sha2-256')\n\n  return new CID(hash)\n}\n","'use strict'\n\nconst errcode = require('err-code')\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\nconst equals = require('uint8arrays/equals')\n\n/**\n * @typedef {import(\"./types\").Digest} Digest\n * @typedef {import(\"multihashes\").HashName} HashName\n */\n\n/**\n * Hash the given `bytes` using the algorithm specified by `alg`.\n *\n * @param {Uint8Array} bytes - The value to hash.\n * @param {HashName} alg - The algorithm to use eg 'sha1'\n * @param {number} [length] - Optionally trim the result to this length.\n * @returns {Promise<Uint8Array>}\n */\nasync function Multihashing (bytes, alg, length) {\n  const digest = await Multihashing.digest(bytes, alg, length)\n  return multihash.encode(digest, alg, length)\n}\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Uint8Array} bytes - The value to hash.\n * @param {HashName} alg - The algorithm to use eg 'sha1'\n * @param {number} [length] - Optionally trim the result to this length.\n * @returns {Promise<Uint8Array>}\n */\nMultihashing.digest = async (bytes, alg, length) => {\n  const hash = Multihashing.createHash(alg)\n  const digest = await hash(bytes)\n  return length ? digest.slice(0, length) : digest\n}\n\n/**\n * Creates a function that hashes with the given algorithm\n *\n * @param {HashName} alg - The algorithm to use eg 'sha1'\n * @returns {Digest} - The hash function corresponding to `alg`\n */\nMultihashing.createHash = function (alg) {\n  if (!alg) {\n    const e = errcode(new Error('hash algorithm must be specified'), 'ERR_HASH_ALGORITHM_NOT_SPECIFIED')\n    throw e\n  }\n\n  const code = multihash.coerceCode(alg)\n  if (!Multihashing.functions[code]) {\n    throw errcode(new Error(`multihash function '${alg}' not yet supported`), 'ERR_HASH_ALGORITHM_NOT_SUPPORTED')\n  }\n\n  return Multihashing.functions[code]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n *\n * @type {Record<number, Digest>}\n */\n// @ts-ignore - most of those functions aren't typed\nMultihashing.functions = {\n  // identity\n  0x00: crypto.identity,\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n\n/**\n * @param {Uint8Array} bytes\n * @param {Uint8Array} hash\n * @returns {Promise<boolean>}\n */\nMultihashing.validate = async (bytes, hash) => {\n  const newHash = await Multihashing(bytes, multihash.decode(hash).name)\n\n  return equals(hash, newHash)\n}\n\nmodule.exports = Multihashing\n","'use strict'\n\nconst sha3 = require('js-sha3')\n// @ts-ignore - no types available\nconst mur = require('murmurhash3js-revisited')\nconst { factory: sha } = require('./sha')\nconst { fromNumberTo32BitBuf } = require('./utils')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n// Note that although this function doesn't do any asynchronous work, we mark\n// the function as async because it must return a Promise to match the API\n// for other functions that do perform asynchronous work (see sha.browser.js)\n// eslint-disable-next-line\n/**\n * @param {string} algorithm\n * @returns {import('./types').Digest}\n */\nconst hash = (algorithm) => async (data) => {\n  switch (algorithm) {\n    case 'sha3-224':\n      return new Uint8Array(sha3.sha3_224.arrayBuffer(data))\n    case 'sha3-256':\n      return new Uint8Array(sha3.sha3_256.arrayBuffer(data))\n    case 'sha3-384':\n      return new Uint8Array(sha3.sha3_384.arrayBuffer(data))\n    case 'sha3-512':\n      return new Uint8Array(sha3.sha3_512.arrayBuffer(data))\n    case 'shake-128':\n      return new Uint8Array(sha3.shake128.create(128).update(data).arrayBuffer())\n    case 'shake-256':\n      return new Uint8Array(sha3.shake256.create(256).update(data).arrayBuffer())\n    case 'keccak-224':\n      return new Uint8Array(sha3.keccak224.arrayBuffer(data))\n    case 'keccak-256':\n      return new Uint8Array(sha3.keccak256.arrayBuffer(data))\n    case 'keccak-384':\n      return new Uint8Array(sha3.keccak384.arrayBuffer(data))\n    case 'keccak-512':\n      return new Uint8Array(sha3.keccak512.arrayBuffer(data))\n    case 'murmur3-128':\n      return uint8ArrayFromString(mur.x64.hash128(data), 'base16')\n    case 'murmur3-32':\n      return fromNumberTo32BitBuf(mur.x86.hash32(data))\n\n    default:\n      throw new TypeError(`${algorithm} is not a supported algorithm`)\n  }\n}\n\n/** @type {import('./types').Digest} */\nconst identity = data => data\n\nmodule.exports = {\n  identity,\n  sha1: sha('sha1'),\n  sha2256: sha('sha2-256'),\n  sha2512: sha('sha2-512'),\n  dblSha2256: sha('dbl-sha2-256'),\n  sha3224: hash('sha3-224'),\n  sha3256: hash('sha3-256'),\n  sha3384: hash('sha3-384'),\n  sha3512: hash('sha3-512'),\n  shake128: hash('shake-128'),\n  shake256: hash('shake-256'),\n  keccak224: hash('keccak-224'),\n  keccak256: hash('keccak-256'),\n  keccak384: hash('keccak-384'),\n  keccak512: hash('keccak-512'),\n  murmur3128: hash('murmur3-128'),\n  murmur332: hash('murmur3-32'),\n  addBlake: require('./blake')\n}\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","'use strict'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nconst fromNumberTo32BitBuf = (number) => {\n  const bytes = new Uint8Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return bytes\n}\n\nmodule.exports = {\n  fromNumberTo32BitBuf\n}\n","'use strict'\n\n// @ts-ignore - no types available\nconst blake = require('blakejs')\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\n// Note that although this function doesn't do any asynchronous work, we mark\n// the function as async because it must return a Promise to match the API\n// for other functions that do perform asynchronous work (see sha.browser.js)\n// eslint-disable-next-line\n\n/**\n * @param {number} size\n * @param {any} hf\n * @returns {import('./types').Digest}\n */\nconst makeB2Hash = (size, hf) => async (data) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, data)\n  return hf.digest(ctx)\n}\n\n/**\n * @param {Record<number, import('./types').Digest>} table\n */\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","'use strict'\n\nmodule.exports = TextEncoder\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:dialer'), {\n  error: debug('libp2p:dialer:err')\n})\nconst errCode = require('err-code')\nconst { Multiaddr } = require('multiaddr')\n// @ts-ignore timeout-abourt-controles does not export types\nconst TimeoutController = require('timeout-abort-controller')\nconst { anySignal } = require('any-signal')\n\nconst DialRequest = require('./dial-request')\nconst { publicAddressesFirst } = require('libp2p-utils/src/address-sort')\nconst getPeer = require('../get-peer')\n\nconst { codes } = require('../errors')\nconst {\n  DIAL_TIMEOUT,\n  MAX_PARALLEL_DIALS,\n  MAX_PER_PEER_DIALS\n} = require('../constants')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('../peer-store')} PeerStore\n * @typedef {import('../peer-store/address-book').Address} Address\n * @typedef {import('../transport-manager')} TransportManager\n */\n\n/**\n * @typedef {Object} DialerProperties\n * @property {PeerStore} peerStore\n * @property {TransportManager} transportManager\n *\n * @typedef {(addr:Multiaddr) => Promise<string[]>} Resolver\n *\n * @typedef {Object} DialerOptions\n * @property {(addresses: Address[]) => Address[]} [options.addressSorter = publicAddressesFirst] - Sort the known addresses of a peer before trying to dial.\n * @property {number} [maxParallelDials = MAX_PARALLEL_DIALS] - Number of max concurrent dials.\n * @property {number} [maxDialsPerPeer = MAX_PER_PEER_DIALS] - Number of max concurrent dials per peer.\n * @property {number} [dialTimeout = DIAL_TIMEOUT] - How long a dial attempt is allowed to take.\n * @property {Record<string, Resolver>} [resolvers = {}] - multiaddr resolvers to use when dialing\n *\n * @typedef DialTarget\n * @property {string} id\n * @property {Multiaddr[]} addrs\n *\n * @typedef PendingDial\n * @property {DialRequest} dialRequest\n * @property {TimeoutController} controller\n * @property {Promise<Connection>} promise\n * @property {function():void} destroy\n */\n\nclass Dialer {\n  /**\n   * @class\n   * @param {DialerProperties & DialerOptions} options\n   */\n  constructor ({\n    transportManager,\n    peerStore,\n    addressSorter = publicAddressesFirst,\n    maxParallelDials = MAX_PARALLEL_DIALS,\n    dialTimeout = DIAL_TIMEOUT,\n    maxDialsPerPeer = MAX_PER_PEER_DIALS,\n    resolvers = {}\n  }) {\n    this.transportManager = transportManager\n    this.peerStore = peerStore\n    this.addressSorter = addressSorter\n    this.maxParallelDials = maxParallelDials\n    this.timeout = dialTimeout\n    this.maxDialsPerPeer = maxDialsPerPeer\n    this.tokens = [...new Array(maxParallelDials)].map((_, index) => index)\n    this._pendingDials = new Map()\n\n    for (const [key, value] of Object.entries(resolvers)) {\n      Multiaddr.resolvers.set(key, value)\n    }\n  }\n\n  /**\n   * Clears any pending dials\n   */\n  destroy () {\n    for (const dial of this._pendingDials.values()) {\n      try {\n        dial.controller.abort()\n      } catch (err) {\n        log.error(err)\n      }\n    }\n    this._pendingDials.clear()\n  }\n\n  /**\n   * Connects to a given `peer` by dialing all of its known addresses.\n   * The dial to the first address that is successfully able to upgrade a connection\n   * will be used.\n   *\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] - An AbortController signal\n   * @returns {Promise<Connection>}\n   */\n  async connectToPeer (peer, options = {}) {\n    const dialTarget = await this._createDialTarget(peer)\n\n    if (!dialTarget.addrs.length) {\n      throw errCode(new Error('The dial request has no addresses'), codes.ERR_NO_VALID_ADDRESSES)\n    }\n    const pendingDial = this._pendingDials.get(dialTarget.id) || this._createPendingDial(dialTarget, options)\n\n    try {\n      const connection = await pendingDial.promise\n      log('dial succeeded to %s', dialTarget.id)\n      return connection\n    } catch (err) {\n      // Error is a timeout\n      if (pendingDial.controller.signal.aborted) {\n        err.code = codes.ERR_TIMEOUT\n      }\n      log.error(err)\n      throw err\n    } finally {\n      pendingDial.destroy()\n    }\n  }\n\n  /**\n   * Creates a DialTarget. The DialTarget is used to create and track\n   * the DialRequest to a given peer.\n   * If a multiaddr is received it should be the first address attempted.\n   *\n   * @private\n   * @param {PeerId|Multiaddr|string} peer - A PeerId or Multiaddr\n   * @returns {Promise<DialTarget>}\n   */\n  async _createDialTarget (peer) {\n    const { id, multiaddrs } = getPeer(peer)\n\n    if (multiaddrs) {\n      this.peerStore.addressBook.add(id, multiaddrs)\n    }\n\n    let knownAddrs = this.peerStore.addressBook.getMultiaddrsForPeer(id, this.addressSorter) || []\n\n    // If received a multiaddr to dial, it should be the first to use\n    // But, if we know other multiaddrs for the peer, we should try them too.\n    if (Multiaddr.isMultiaddr(peer)) {\n      knownAddrs = knownAddrs.filter((addr) => !peer.equals(addr))\n      knownAddrs.unshift(peer)\n    }\n\n    /** @type {Multiaddr[]} */\n    const addrs = []\n    for (const a of knownAddrs) {\n      const resolvedAddrs = await this._resolve(a)\n      resolvedAddrs.forEach(ra => addrs.push(ra))\n    }\n\n    return {\n      id: id.toB58String(),\n      addrs\n    }\n  }\n\n  /**\n   * Creates a PendingDial that wraps the underlying DialRequest\n   *\n   * @private\n   * @param {DialTarget} dialTarget\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] - An AbortController signal\n   * @returns {PendingDial}\n   */\n  _createPendingDial (dialTarget, options = {}) {\n    /**\n     * @param {Multiaddr} addr\n     * @param {{ signal: { aborted: any; }; }} options\n     */\n    const dialAction = (addr, options) => {\n      if (options.signal.aborted) throw errCode(new Error('already aborted'), codes.ERR_ALREADY_ABORTED)\n      return this.transportManager.dial(addr, options)\n    }\n\n    const dialRequest = new DialRequest({\n      addrs: dialTarget.addrs,\n      dialAction,\n      dialer: this\n    })\n\n    // Combine the timeout signal and options.signal, if provided\n    const timeoutController = new TimeoutController(this.timeout)\n    const signals = [timeoutController.signal]\n    options.signal && signals.push(options.signal)\n    const signal = anySignal(signals)\n\n    const pendingDial = {\n      dialRequest,\n      controller: timeoutController,\n      promise: dialRequest.run({ ...options, signal }),\n      destroy: () => {\n        timeoutController.clear()\n        this._pendingDials.delete(dialTarget.id)\n      }\n    }\n    this._pendingDials.set(dialTarget.id, pendingDial)\n    return pendingDial\n  }\n\n  /**\n   * @param {number} num\n   */\n  getTokens (num) {\n    const total = Math.min(num, this.maxDialsPerPeer, this.tokens.length)\n    const tokens = this.tokens.splice(0, total)\n    log('%d tokens request, returning %d, %d remaining', num, total, this.tokens.length)\n    return tokens\n  }\n\n  /**\n   * @param {number} token\n   */\n  releaseToken (token) {\n    // Guard against duplicate releases\n    if (this.tokens.indexOf(token) > -1) return\n    log('token %d released', token)\n    this.tokens.push(token)\n  }\n\n  /**\n   * Resolve multiaddr recursively.\n   *\n   * @param {Multiaddr} ma\n   * @returns {Promise<Multiaddr[]>}\n   */\n  async _resolve (ma) {\n    // TODO: recursive logic should live in multiaddr once dns4/dns6 support is in place\n    // Now only supporting resolve for dnsaddr\n    const resolvableProto = ma.protoNames().includes('dnsaddr')\n\n    // Multiaddr is not resolvable? End recursion!\n    if (!resolvableProto) {\n      return [ma]\n    }\n\n    const resolvedMultiaddrs = await this._resolveRecord(ma)\n    const recursiveMultiaddrs = await Promise.all(resolvedMultiaddrs.map((nm) => {\n      return this._resolve(nm)\n    }))\n\n    const addrs = recursiveMultiaddrs.flat()\n    return addrs.reduce((array, newM) => {\n      if (!array.find(m => m.equals(newM))) {\n        array.push(newM)\n      }\n      return array\n    }, /** @type  {Multiaddr[]} */([]))\n  }\n\n  /**\n   * Resolve a given multiaddr. If this fails, an empty array will be returned\n   *\n   * @param {Multiaddr} ma\n   * @returns {Promise<Multiaddr[]>}\n   */\n  async _resolveRecord (ma) {\n    try {\n      ma = new Multiaddr(ma.toString()) // Use current multiaddr module\n      const multiaddrs = await ma.resolve()\n      return multiaddrs\n    } catch (_) {\n      log.error(`multiaddr ${ma} could not be resolved`)\n      return []\n    }\n  }\n}\n\nmodule.exports = Dialer\n","/* globals self, window */\n'use strict'\n\n// Get around https://github.com/mysticatea/abort-controller/pull/22\nconst { AbortController } =\n  typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n    /* otherwise */ : require('abort-controller')\n\nconst retimer = require('retimer')\n\nclass TimeoutController extends AbortController {\n  /**\n   * @constructor\n   * @param {number} ms milliseconds\n   */\n  constructor (ms) {\n    super()\n    this._ms = ms\n    this._timer = retimer(() => this.abort(), ms)\n    // Patch for safari not supported extending built in classes\n    Object.setPrototypeOf(this, TimeoutController.prototype)\n  }\n\n  /**\n   * Aborts the controller and clears the timer\n   */\n  abort () {\n    this._timer.clear()\n    return super.abort()\n  }\n\n  /**\n   * Clears the timer\n   */\n  clear () {\n    this._timer.clear()\n  }\n\n  /**\n   * Resets the timer\n   */\n  reset () {\n    this._timer.clear()\n    this._timer = retimer(() => this.abort(), this._ms)\n  }\n}\n\nmodule.exports = TimeoutController\nmodule.exports.TimeoutController = TimeoutController\n","/*globals self, window */\n\"use strict\"\n\n/*eslint-disable @mysticatea/prettier */\nconst { AbortController, AbortSignal } =\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    /* otherwise */ undefined\n/*eslint-enable @mysticatea/prettier */\n\nmodule.exports = AbortController\nmodule.exports.AbortSignal = AbortSignal\nmodule.exports.default = AbortController\n","'use strict'\n\nvar getTime = require('./time')\n\nfunction Retimer (callback, timeout, args) {\n  var that = this\n\n  this._started = getTime()\n  this._rescheduled = 0\n  this._scheduled = timeout\n  this._args = args\n\n  this._timer = setTimeout(timerWrapper, timeout)\n\n  function timerWrapper () {\n    if (that._rescheduled > 0) {\n      that._scheduled = that._rescheduled - (getTime() - that._started)\n      that._timer = setTimeout(timerWrapper, that._scheduled)\n      that._rescheduled = 0\n    } else {\n      callback.apply(null, that._args)\n    }\n  }\n}\n\nRetimer.prototype.reschedule = function (timeout) {\n  var now = getTime()\n  if ((now + timeout) - (this._started + this._scheduled) < 0) {\n    return false\n  } else {\n    this._started = now\n    this._rescheduled = timeout\n    return true\n  }\n}\n\nRetimer.prototype.clear = function () {\n  clearTimeout(this._timer)\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  var args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n","'use strict'\n\nmodule.exports = function getTime () {\n  return Date.now()\n}\n","const { AbortController } = require('native-abort-controller')\n\n/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\nfunction anySignal (signals) {\n  const controller = new AbortController()\n\n  function onAbort () {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue\n    if (signal.aborted) {\n      onAbort()\n      break\n    }\n    signal.addEventListener('abort', onAbort)\n  }\n\n  return controller.signal\n}\n\nmodule.exports = anySignal\nmodule.exports.anySignal = anySignal\n","'use strict'\n\nlet impl\n\nif (globalThis.AbortController && globalThis.AbortSignal) {\n  impl = globalThis\n} else {\n  impl = require('abort-controller')\n}\n\nmodule.exports = {\n  AbortController: impl.AbortController,\n  AbortSignal: impl.AbortSignal\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst AbortController = require('abort-controller').default\nconst { anySignal } = require('any-signal')\n// @ts-ignore p-fifo does not export types\nconst FIFO = require('p-fifo')\nconst pAny = require('p-any')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('./')} Dialer\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @typedef {Object} DialOptions\n * @property {AbortSignal} signal\n *\n * @typedef {Object} DialRequestOptions\n * @property {Multiaddr[]} addrs\n * @property {(m: Multiaddr, options: DialOptions) => Promise<Connection>} dialAction\n * @property {Dialer} dialer\n */\n\nclass DialRequest {\n  /**\n   * Manages running the `dialAction` on multiple provided `addrs` in parallel\n   * up to a maximum determined by the number of tokens returned\n   * from `dialer.getTokens`. Once a DialRequest is created, it can be\n   * started using `DialRequest.run(options)`. Once a single dial has succeeded,\n   * all other dials in the request will be cancelled.\n   *\n   * @class\n   * @param {DialRequestOptions} options\n   */\n  constructor ({\n    addrs,\n    dialAction,\n    dialer\n  }) {\n    this.addrs = addrs\n    this.dialer = dialer\n    this.dialAction = dialAction\n  }\n\n  /**\n   * @async\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] - An AbortController signal\n   * @returns {Promise<Connection>}\n   */\n  async run (options = {}) {\n    const tokens = this.dialer.getTokens(this.addrs.length)\n    // If no tokens are available, throw\n    if (tokens.length < 1) {\n      throw errCode(new Error('No dial tokens available'), 'ERR_NO_DIAL_TOKENS')\n    }\n\n    const tokenHolder = new FIFO()\n    tokens.forEach(token => tokenHolder.push(token))\n    const dialAbortControllers = this.addrs.map(() => new AbortController())\n    let completedDials = 0\n\n    try {\n      return await pAny(this.addrs.map(async (addr, i) => {\n        const token = await tokenHolder.shift() // get token\n        let conn\n        try {\n          const signal = dialAbortControllers[i].signal\n          conn = await this.dialAction(addr, { ...options, signal: options.signal ? anySignal([signal, options.signal]) : signal })\n          // Remove the successful AbortController so it is not aborted\n          dialAbortControllers.splice(i, 1)\n        } finally {\n          completedDials++\n          // If we have more or equal dials remaining than tokens, recycle the token, otherwise release it\n          if (this.addrs.length - completedDials >= tokens.length) {\n            tokenHolder.push(token)\n          } else {\n            this.dialer.releaseToken(tokens.splice(tokens.indexOf(token), 1)[0])\n          }\n        }\n\n        return conn\n      }))\n    } finally {\n      dialAbortControllers.map(c => c.abort()) // success/failure happened, abort everything else\n      tokens.forEach(token => this.dialer.releaseToken(token)) // release tokens back to the dialer\n    }\n  }\n}\n\nmodule.exports = DialRequest\n","const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n","'use strict';\nconst pSome = require('p-some');\nconst PCancelable = require('p-cancelable');\n\nmodule.exports = (iterable, options) => {\n\tconst anyCancelable = pSome(iterable, {...options, count: 1});\n\n\treturn PCancelable.fn(async onCancel => {\n\t\tonCancel(() => {\n\t\t\tanyCancelable.cancel();\n\t\t});\n\n\t\tconst [value] = await anyCancelable;\n\t\treturn value;\n\t})();\n};\n\nmodule.exports.AggregateError = pSome.AggregateError;\n","'use strict';\nconst AggregateError = require('aggregate-error');\nconst PCancelable = require('p-cancelable');\n\nclass FilterError extends Error { }\n\nconst pSome = (iterable, options) => new PCancelable((resolve, reject, onCancel) => {\n\tconst {\n\t\tcount,\n\t\tfilter = () => true\n\t} = options;\n\n\tif (!Number.isFinite(count)) {\n\t\treject(new TypeError(`Expected a finite number, got ${typeof options.count}`));\n\t\treturn;\n\t}\n\n\tconst values = [];\n\tconst errors = [];\n\tlet elementCount = 0;\n\tlet isSettled = false;\n\n\tconst completed = new Set();\n\tconst maybeSettle = () => {\n\t\tif (values.length === count) {\n\t\t\tresolve(values);\n\t\t\tisSettled = true;\n\t\t}\n\n\t\tif (elementCount - errors.length < count) {\n\t\t\treject(new AggregateError(errors));\n\t\t\tisSettled = true;\n\t\t}\n\n\t\treturn isSettled;\n\t};\n\n\tconst cancelPending = () => {\n\t\tfor (const promise of iterable) {\n\t\t\tif (!completed.has(promise) && typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\t\t}\n\t};\n\n\tonCancel(cancelPending);\n\n\tfor (const element of iterable) {\n\t\telementCount++;\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst value = await element;\n\n\t\t\t\tif (isSettled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!filter(value)) {\n\t\t\t\t\tthrow new FilterError('Value does not satisfy filter');\n\t\t\t\t}\n\n\t\t\t\tvalues.push(value);\n\t\t\t} catch (error) {\n\t\t\t\terrors.push(error);\n\t\t\t} finally {\n\t\t\t\tcompleted.add(element);\n\n\t\t\t\tif (!isSettled && maybeSettle()) {\n\t\t\t\t\tcancelPending();\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t}\n\n\tif (count > elementCount) {\n\t\treject(new RangeError(`Expected input to contain at least ${options.count} items, but contains ${elementCount} items`));\n\t\tcancelPending();\n\t}\n});\n\nmodule.exports = pSome;\nmodule.exports.AggregateError = AggregateError;\nmodule.exports.FilterError = FilterError;\n","'use strict';\nconst indentString = require('indent-string');\nconst cleanStack = require('clean-stack');\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nmodule.exports = AggregateError;\n","'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n","'use strict';\nconst os = require('os');\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();\n\nmodule.exports = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n","'use strict';\n\nclass CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nclass PCancelable {\n\tstatic fn(userFn) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFn(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n\nmodule.exports = PCancelable;\nmodule.exports.CancelError = CancelError;\n","/* eslint max-nested-callbacks: [\"error\", 5] */\n'use strict'\n\nconst sanitize = require('sanitize-filename')\nconst mergeOptions = require('merge-options')\nconst crypto = require('libp2p-crypto')\nconst { Key } = require('interface-datastore')\nconst CMS = require('./cms')\nconst errcode = require('err-code')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n// @ts-ignore node-forge sha512 types not exported\nrequire('node-forge/lib/sha512')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @typedef {Object} DekOptions\n * @property {string} hash\n * @property {string} salt\n * @property {number} iterationCount\n * @property {number} keyLength\n *\n * @typedef {Object} KeychainOptions\n * @property {string} pass\n * @property {DekOptions} [dek]\n */\n\n/**\n * Information about a key.\n *\n * @typedef {Object} KeyInfo\n * @property {string} id - The universally unique key id.\n * @property {string} name - The local key name.\n */\n\nconst keyPrefix = '/pkcs8/'\nconst infoPrefix = '/info/'\nconst privates = new WeakMap()\n\n// NIST SP 800-132\nconst NIST = {\n  minKeyLength: 112 / 8,\n  minSaltLength: 128 / 8,\n  minIterationCount: 1000\n}\n\nconst defaultOptions = {\n  // See https://cryptosense.com/parametesr-choice-for-pbkdf2/\n  dek: {\n    keyLength: 512 / 8,\n    iterationCount: 10000,\n    salt: 'you should override this value with a crypto secure random number',\n    hash: 'sha2-512'\n  }\n}\n\n/**\n * @param {string} name\n */\nfunction validateKeyName (name) {\n  if (!name) return false\n  if (typeof name !== 'string') return false\n  return name === sanitize(name.trim())\n}\n\n/**\n * Throws an error after a delay\n *\n * This assumes than an error indicates that the keychain is under attack. Delay returning an\n * error to make brute force attacks harder.\n *\n * @param {string|Error} err - The error\n * @returns {Promise<never>}\n * @private\n */\nasync function throwDelayed (err) {\n  const min = 200\n  const max = 1000\n  const delay = Math.random() * (max - min) + min\n\n  await new Promise(resolve => setTimeout(resolve, delay))\n  throw err\n}\n\n/**\n * Converts a key name into a datastore name.\n *\n * @param {string} name\n * @returns {Key}\n * @private\n */\nfunction DsName (name) {\n  return new Key(keyPrefix + name)\n}\n\n/**\n * Converts a key name into a datastore info name.\n *\n * @param {string} name\n * @returns {Key}\n * @private\n */\nfunction DsInfoName (name) {\n  return new Key(infoPrefix + name)\n}\n\n/**\n * Manages the lifecycle of a key. Keys are encrypted at rest using PKCS #8.\n *\n * A key in the store has two entries\n * - '/info/*key-name*', contains the KeyInfo for the key\n * - '/pkcs8/*key-name*', contains the PKCS #8 for the key\n *\n */\nclass Keychain {\n  /**\n   * Creates a new instance of a key chain.\n   *\n   * @param {Datastore} store - where the key are.\n   * @param {KeychainOptions} options\n   * @class\n   */\n  constructor (store, options) {\n    if (!store) {\n      throw new Error('store is required')\n    }\n    this.store = store\n\n    this.opts = mergeOptions(defaultOptions, options)\n\n    // Enforce NIST SP 800-132\n    if (this.opts.pass && this.opts.pass.length < 20) {\n      throw new Error('pass must be least 20 characters')\n    }\n    if (this.opts.dek.keyLength < NIST.minKeyLength) {\n      throw new Error(`dek.keyLength must be least ${NIST.minKeyLength} bytes`)\n    }\n    if (this.opts.dek.salt.length < NIST.minSaltLength) {\n      throw new Error(`dek.saltLength must be least ${NIST.minSaltLength} bytes`)\n    }\n    if (this.opts.dek.iterationCount < NIST.minIterationCount) {\n      throw new Error(`dek.iterationCount must be least ${NIST.minIterationCount}`)\n    }\n\n    const dek = this.opts.pass\n      ? crypto.pbkdf2(\n        this.opts.pass,\n        this.opts.dek.salt,\n        this.opts.dek.iterationCount,\n        this.opts.dek.keyLength,\n        this.opts.dek.hash)\n      : ''\n\n    privates.set(this, { dek })\n  }\n\n  /**\n   * Gets an object that can encrypt/decrypt protected data\n   * using the Cryptographic Message Syntax (CMS).\n   *\n   * CMS describes an encapsulation syntax for data protection. It\n   * is used to digitally sign, digest, authenticate, or encrypt\n   * arbitrary message content.\n   *\n   * @returns {CMS}\n   */\n  get cms () {\n    return new CMS(this, privates.get(this).dek)\n  }\n\n  /**\n   * Generates the options for a keychain.  A random salt is produced.\n   *\n   * @returns {Object}\n   */\n  static generateOptions () {\n    const options = Object.assign({}, defaultOptions)\n    const saltLength = Math.ceil(NIST.minSaltLength / 3) * 3 // no base64 padding\n    options.dek.salt = uint8ArrayToString(crypto.randomBytes(saltLength), 'base64')\n    return options\n  }\n\n  /**\n   * Gets an object that can encrypt/decrypt protected data.\n   * The default options for a keychain.\n   *\n   * @returns {Object}\n   */\n  static get options () {\n    return defaultOptions\n  }\n\n  /**\n   * Create a new key.\n   *\n   * @param {string} name - The local key name; cannot already exist.\n   * @param {string} type - One of the key types; 'rsa'.\n   * @param {number} [size = 2048] - The key size in bits. Used for rsa keys only.\n   * @returns {Promise<KeyInfo>}\n   */\n  async createKey (name, type, size = 2048) {\n    const self = this\n\n    if (!validateKeyName(name) || name === 'self') {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n\n    if (typeof type !== 'string') {\n      return throwDelayed(errcode(new Error(`Invalid key type '${type}'`), 'ERR_INVALID_KEY_TYPE'))\n    }\n\n    const dsname = DsName(name)\n    const exists = await self.store.has(dsname)\n    if (exists) return throwDelayed(errcode(new Error(`Key '${name}' already exists`), 'ERR_KEY_ALREADY_EXISTS'))\n\n    switch (type.toLowerCase()) {\n      case 'rsa':\n        if (!Number.isSafeInteger(size) || size < 2048) {\n          return throwDelayed(errcode(new Error(`Invalid RSA key size ${size}`), 'ERR_INVALID_KEY_SIZE'))\n        }\n        break\n      default:\n        break\n    }\n\n    let keyInfo\n    try {\n      // @ts-ignore Differences between several crypto return types need to be fixed in libp2p-crypto\n      const keypair = await crypto.keys.generateKeyPair(type, size)\n      const kid = await keypair.id()\n      /** @type {string} */\n      const dek = privates.get(this).dek\n      const pem = await keypair.export(dek)\n      keyInfo = {\n        name: name,\n        id: kid\n      }\n      const batch = self.store.batch()\n      batch.put(dsname, uint8ArrayFromString(pem))\n      batch.put(DsInfoName(name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n\n      await batch.commit()\n    } catch (err) {\n      return throwDelayed(err)\n    }\n\n    return keyInfo\n  }\n\n  /**\n   * List all the keys.\n   *\n   * @returns {Promise<KeyInfo[]>}\n   */\n  async listKeys () {\n    const self = this\n    const query = {\n      prefix: infoPrefix\n    }\n\n    const info = []\n    for await (const value of self.store.query(query)) {\n      info.push(JSON.parse(uint8ArrayToString(value.value)))\n    }\n\n    return info\n  }\n\n  /**\n   * Find a key by it's id.\n   *\n   * @param {string} id - The universally unique key identifier.\n   * @returns {Promise<KeyInfo|undefined>}\n   */\n  async findKeyById (id) {\n    try {\n      const keys = await this.listKeys()\n      return keys.find((k) => k.id === id)\n    } catch (err) {\n      return throwDelayed(err)\n    }\n  }\n\n  /**\n   * Find a key by it's name.\n   *\n   * @param {string} name - The local key name.\n   * @returns {Promise<KeyInfo>}\n   */\n  async findKeyByName (name) {\n    if (!validateKeyName(name)) {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n\n    const dsname = DsInfoName(name)\n    try {\n      const res = await this.store.get(dsname)\n      return JSON.parse(uint8ArrayToString(res))\n    } catch (err) {\n      return throwDelayed(errcode(new Error(`Key '${name}' does not exist. ${err.message}`), 'ERR_KEY_NOT_FOUND'))\n    }\n  }\n\n  /**\n   * Remove an existing key.\n   *\n   * @param {string} name - The local key name; must already exist.\n   * @returns {Promise<KeyInfo>}\n   */\n  async removeKey (name) {\n    const self = this\n    if (!validateKeyName(name) || name === 'self') {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n    const dsname = DsName(name)\n    const keyInfo = await self.findKeyByName(name)\n    const batch = self.store.batch()\n    batch.delete(dsname)\n    batch.delete(DsInfoName(name))\n    await batch.commit()\n    return keyInfo\n  }\n\n  /**\n   * Rename a key\n   *\n   * @param {string} oldName - The old local key name; must already exist.\n   * @param {string} newName - The new local key name; must not already exist.\n   * @returns {Promise<KeyInfo>}\n   */\n  async renameKey (oldName, newName) {\n    const self = this\n    if (!validateKeyName(oldName) || oldName === 'self') {\n      return throwDelayed(errcode(new Error(`Invalid old key name '${oldName}'`), 'ERR_OLD_KEY_NAME_INVALID'))\n    }\n    if (!validateKeyName(newName) || newName === 'self') {\n      return throwDelayed(errcode(new Error(`Invalid new key name '${newName}'`), 'ERR_NEW_KEY_NAME_INVALID'))\n    }\n    const oldDsname = DsName(oldName)\n    const newDsname = DsName(newName)\n    const oldInfoName = DsInfoName(oldName)\n    const newInfoName = DsInfoName(newName)\n\n    const exists = await self.store.has(newDsname)\n    if (exists) return throwDelayed(errcode(new Error(`Key '${newName}' already exists`), 'ERR_KEY_ALREADY_EXISTS'))\n\n    try {\n      const pem = await self.store.get(oldDsname)\n      const res = await self.store.get(oldInfoName)\n\n      const keyInfo = JSON.parse(uint8ArrayToString(res))\n      keyInfo.name = newName\n      const batch = self.store.batch()\n      batch.put(newDsname, pem)\n      batch.put(newInfoName, uint8ArrayFromString(JSON.stringify(keyInfo)))\n      batch.delete(oldDsname)\n      batch.delete(oldInfoName)\n      await batch.commit()\n      return keyInfo\n    } catch (err) {\n      return throwDelayed(err)\n    }\n  }\n\n  /**\n   * Export an existing key as a PEM encrypted PKCS #8 string\n   *\n   * @param {string} name - The local key name; must already exist.\n   * @param {string} password - The password\n   * @returns {Promise<string>}\n   */\n  async exportKey (name, password) {\n    if (!validateKeyName(name)) {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n    if (!password) {\n      return throwDelayed(errcode(new Error('Password is required'), 'ERR_PASSWORD_REQUIRED'))\n    }\n\n    const dsname = DsName(name)\n    try {\n      const res = await this.store.get(dsname)\n      const pem = uint8ArrayToString(res)\n      /** @type {string} */\n      const dek = privates.get(this).dek\n      const privateKey = await crypto.keys.import(pem, dek)\n      return privateKey.export(password)\n    } catch (err) {\n      return throwDelayed(err)\n    }\n  }\n\n  /**\n   * Import a new key from a PEM encoded PKCS #8 string\n   *\n   * @param {string} name - The local key name; must not already exist.\n   * @param {string} pem - The PEM encoded PKCS #8 string\n   * @param {string} password - The password.\n   * @returns {Promise<KeyInfo>}\n   */\n  async importKey (name, pem, password) {\n    const self = this\n    if (!validateKeyName(name) || name === 'self') {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n    if (!pem) {\n      return throwDelayed(errcode(new Error('PEM encoded key is required'), 'ERR_PEM_REQUIRED'))\n    }\n    const dsname = DsName(name)\n    const exists = await self.store.has(dsname)\n    if (exists) return throwDelayed(errcode(new Error(`Key '${name}' already exists`), 'ERR_KEY_ALREADY_EXISTS'))\n\n    let privateKey\n    try {\n      privateKey = await crypto.keys.import(pem, password)\n    } catch (err) {\n      return throwDelayed(errcode(new Error('Cannot read the key, most likely the password is wrong'), 'ERR_CANNOT_READ_KEY'))\n    }\n\n    let kid\n    try {\n      kid = await privateKey.id()\n      /** @type {string} */\n      const dek = privates.get(this).dek\n      pem = await privateKey.export(dek)\n    } catch (err) {\n      return throwDelayed(err)\n    }\n\n    const keyInfo = {\n      name: name,\n      id: kid\n    }\n    const batch = self.store.batch()\n    batch.put(dsname, uint8ArrayFromString(pem))\n    batch.put(DsInfoName(name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n    await batch.commit()\n\n    return keyInfo\n  }\n\n  /**\n   * Import a peer key\n   *\n   * @param {string} name - The local key name; must not already exist.\n   * @param {PeerId} peer - The PEM encoded PKCS #8 string\n   * @returns {Promise<KeyInfo>}\n   */\n  async importPeer (name, peer) {\n    const self = this\n    if (!validateKeyName(name)) {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n    if (!peer || !peer.privKey) {\n      return throwDelayed(errcode(new Error('Peer.privKey is required'), 'ERR_MISSING_PRIVATE_KEY'))\n    }\n\n    const privateKey = peer.privKey\n    const dsname = DsName(name)\n    const exists = await self.store.has(dsname)\n    if (exists) return throwDelayed(errcode(new Error(`Key '${name}' already exists`), 'ERR_KEY_ALREADY_EXISTS'))\n\n    try {\n      const kid = await privateKey.id()\n      /** @type {string} */\n      const dek = privates.get(this).dek\n      const pem = await privateKey.export(dek)\n      const keyInfo = {\n        name: name,\n        id: kid\n      }\n      const batch = self.store.batch()\n      batch.put(dsname, uint8ArrayFromString(pem))\n      batch.put(DsInfoName(name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n      await batch.commit()\n      return keyInfo\n    } catch (err) {\n      return throwDelayed(err)\n    }\n  }\n\n  /**\n   * Gets the private key as PEM encoded PKCS #8 string.\n   *\n   * @param {string} name\n   * @returns {Promise<string>}\n   */\n  async _getPrivateKey (name) {\n    if (!validateKeyName(name)) {\n      return throwDelayed(errcode(new Error(`Invalid key name '${name}'`), 'ERR_INVALID_KEY_NAME'))\n    }\n\n    try {\n      const dsname = DsName(name)\n      const res = await this.store.get(dsname)\n      return uint8ArrayToString(res)\n    } catch (err) {\n      return throwDelayed(errcode(new Error(`Key '${name}' does not exist. ${err.message}`), 'ERR_KEY_NOT_FOUND'))\n    }\n  }\n}\n\nmodule.exports = Keychain\n","/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n","'use strict';\n\nvar truncate = require(\"./lib/truncate\");\nvar getLength = require(\"utf8-byte-length/browser\");\nmodule.exports = truncate.bind(null, getLength);\n","'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n","'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      }\n      else {\n        byteLength += 3;\n      }\n    }\n    else if (codePoint <= 0x7f ) {\n      byteLength += 1;\n    }\n    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    }\n    else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};\n","'use strict'\n\nconst hmac = require('./hmac')\nconst aes = require('./aes')\nconst keys = require('./keys')\n\nexports.aes = aes\nexports.hmac = hmac\nexports.keys = keys\nexports.randomBytes = require('./random-bytes')\nexports.pbkdf2 = require('./pbkdf2')\n","'use strict'\n\nconst ciphers = require('./ciphers')\nconst cipherMode = require('./cipher-mode')\n\nexports.create = async function (key, iv) { // eslint-disable-line require-await\n  const mode = cipherMode(key)\n  const cipher = ciphers.createCipheriv(mode, key, iv)\n  const decipher = ciphers.createDecipheriv(mode, key, iv)\n\n  const res = {\n    async encrypt (data) { // eslint-disable-line require-await\n      return cipher.update(data)\n    },\n\n    async decrypt (data) { // eslint-disable-line require-await\n      return decipher.update(data)\n    }\n  }\n\n  return res\n}\n","'use strict'\n\nrequire('node-forge/lib/aes')\nconst forge = require('node-forge/lib/forge')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nmodule.exports = {\n  createCipheriv: (mode, key, iv) => {\n    const cipher2 = forge.cipher.createCipher('AES-CTR', uint8ArrayToString(key, 'ascii'))\n    cipher2.start({ iv: uint8ArrayToString(iv, 'ascii') })\n    return {\n      update: (data) => {\n        cipher2.update(forge.util.createBuffer(uint8ArrayToString(data, 'ascii')))\n        return uint8ArrayFromString(cipher2.output.getBytes(), 'ascii')\n      }\n    }\n  },\n  createDecipheriv: (mode, key, iv) => {\n    const cipher2 = forge.cipher.createDecipher('AES-CTR', uint8ArrayToString(key, 'ascii'))\n    cipher2.start({ iv: uint8ArrayToString(iv, 'ascii') })\n    return {\n      update: (data) => {\n        cipher2.update(forge.util.createBuffer(uint8ArrayToString(data, 'ascii')))\n        return uint8ArrayFromString(cipher2.output.getBytes(), 'ascii')\n      }\n    }\n  }\n}\n","'use strict'\n\nconst errcode = require('err-code')\n\nconst CIPHER_MODES = {\n  16: 'aes-128-ctr',\n  32: 'aes-256-ctr'\n}\n\nmodule.exports = function (key) {\n  const mode = CIPHER_MODES[key.length]\n  if (!mode) {\n    const modes = Object.entries(CIPHER_MODES).map(([k, v]) => `${k} (${v})`).join(' / ')\n    throw errcode(new Error(`Invalid key length ${key.length} bytes. Must be ${modes}`), 'ERR_INVALID_KEY_LENGTH')\n  }\n  return mode\n}\n","'use strict'\n\nconst forgePbkdf2 = require('node-forge/lib/pbkdf2')\nconst forgeUtil = require('node-forge/lib/util')\nconst errcode = require('err-code')\n\n/**\n * Maps an IPFS hash name to its node-forge equivalent.\n *\n * See https://github.com/multiformats/multihash/blob/master/hashtable.csv\n *\n * @private\n */\nconst hashName = {\n  sha1: 'sha1',\n  'sha2-256': 'sha256',\n  'sha2-512': 'sha512'\n}\n\n/**\n * Computes the Password-Based Key Derivation Function 2.\n *\n * @param {string} password\n * @param {string} salt\n * @param {number} iterations\n * @param {number} keySize - (in bytes)\n * @param {string} hash - The hash name ('sha1', 'sha2-512, ...)\n * @returns {string} - A new password\n */\nfunction pbkdf2 (password, salt, iterations, keySize, hash) {\n  const hasher = hashName[hash]\n  if (!hasher) {\n    const types = Object.keys(hashName).join(' / ')\n    throw errcode(new Error(`Hash '${hash}' is unknown or not supported. Must be ${types}`), 'ERR_UNSUPPORTED_HASH_TYPE')\n  }\n  const dek = forgePbkdf2(\n    password,\n    salt,\n    iterations,\n    keySize,\n    hasher)\n  return forgeUtil.encode64(dek)\n}\n\nmodule.exports = pbkdf2\n","'use strict'\n\n/**\n * @typedef {import('./types').Datastore} Datastore\n * @typedef {import('./types').Batch} Batch\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').Pair} Pair\n */\n\nconst Key = require('./key')\nconst MemoryDatastore = require('./memory')\nconst utils = require('./utils')\nconst Errors = require('./errors')\nconst Adapter = require('./adapter')\n\nmodule.exports = {\n  Key,\n  MemoryDatastore,\n  utils,\n  Errors,\n  Adapter\n}\n","'use strict'\n\nconst { nanoid } = require('nanoid')\nconst { utf8Encoder, utf8Decoder } = require('./utils')\n\nconst symbol = Symbol.for('@ipfs/interface-datastore/key')\nconst pathSepS = '/'\nconst pathSepB = utf8Encoder.encode(pathSepS)\nconst pathSep = pathSepB[0]\n\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nclass Key {\n  /**\n   * @param {string | Uint8Array} s\n   * @param {boolean} [clean]\n   */\n  constructor (s, clean) {\n    if (typeof s === 'string') {\n      this._buf = utf8Encoder.encode(s)\n    } else if (s instanceof Uint8Array) {\n      this._buf = s\n    } else {\n      throw new Error('Invalid key, should be String of Uint8Array')\n    }\n\n    if (clean == null) {\n      clean = true\n    }\n\n    if (clean) {\n      this.clean()\n    }\n\n    if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n      throw new Error('Invalid key')\n    }\n  }\n\n  /**\n   * Convert to the string representation\n   *\n   * @param {string} [encoding='utf8'] - The encoding to use.\n   * @returns {string}\n   */\n  toString (encoding = 'utf8') {\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n      return utf8Decoder.decode(this._buf)\n    }\n\n    return new TextDecoder(encoding).decode(this._buf)\n  }\n\n  /**\n   * Return the Uint8Array representation of the key\n   *\n   * @returns {Uint8Array}\n   */\n  uint8Array () {\n    return this._buf\n  }\n\n  get [symbol] () {\n    return true\n  }\n\n  /**\n   * Return string representation of the key\n   *\n   * @returns {string}\n   */\n  get [Symbol.toStringTag] () {\n    return `Key(${this.toString()})`\n  }\n\n  /**\n   * Constructs a key out of a namespace array.\n   *\n   * @param {Array<string>} list - The array of namespaces\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * Key.withNamespaces(['one', 'two'])\n   * // => Key('/one/two')\n   * ```\n   */\n  static withNamespaces (list) {\n    return new Key(list.join(pathSepS))\n  }\n\n  /**\n   * Returns a randomly (uuid) generated key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * Key.random()\n   * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n   * ```\n   */\n  static random () {\n    return new Key(nanoid().replace(/-/g, ''))\n  }\n\n  /**\n   * Cleanup the current key\n   *\n   * @returns {void}\n   */\n  clean () {\n    if (!this._buf || this._buf.byteLength === 0) {\n      this._buf = pathSepB\n    }\n\n    if (this._buf[0] !== pathSep) {\n      const bytes = new Uint8Array(this._buf.byteLength + 1)\n      bytes.fill(pathSep, 0, 1)\n      bytes.set(this._buf, 1)\n      this._buf = bytes\n    }\n\n    // normalize does not remove trailing slashes\n    while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n      this._buf = this._buf.subarray(0, -1)\n    }\n  }\n\n  /**\n   * Check if the given key is sorted lower than ourself.\n   *\n   * @param {Key} key - The other Key to check against\n   * @returns {boolean}\n   */\n  less (key) {\n    const list1 = this.list()\n    const list2 = key.list()\n\n    for (let i = 0; i < list1.length; i++) {\n      if (list2.length < i + 1) {\n        return false\n      }\n\n      const c1 = list1[i]\n      const c2 = list2[i]\n\n      if (c1 < c2) {\n        return true\n      } else if (c1 > c2) {\n        return false\n      }\n    }\n\n    return list1.length < list2.length\n  }\n\n  /**\n   * Returns the key with all parts in reversed order.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n   * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n   * ```\n   */\n  reverse () {\n    return Key.withNamespaces(this.list().slice().reverse())\n  }\n\n  /**\n   * Returns the `namespaces` making up this Key.\n   *\n   * @returns {Array<string>}\n   */\n  namespaces () {\n    return this.list()\n  }\n\n  /** Returns the \"base\" namespace of this key.\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n   * // => 'Actor:JohnCleese'\n   * ```\n   */\n  baseNamespace () {\n    const ns = this.namespaces()\n    return ns[ns.length - 1]\n  }\n\n  /**\n   * Returns the `list` representation of this key.\n   *\n   * @returns {Array<string>}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n   * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n   * ```\n   */\n  list () {\n    return this.toString().split(pathSepS).slice(1)\n  }\n\n  /**\n   * Returns the \"type\" of this key (value of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n   * // => 'Actor'\n   * ```\n   */\n  type () {\n    return namespaceType(this.baseNamespace())\n  }\n\n  /**\n   * Returns the \"name\" of this key (field of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n   * // => 'JohnCleese'\n   * ```\n   */\n  name () {\n    return namespaceValue(this.baseNamespace())\n  }\n\n  /**\n   * Returns an \"instance\" of this type key (appends value to namespace).\n   *\n   * @param {string} s - The string to append.\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   * ```\n   */\n  instance (s) {\n    return new Key(this.toString() + ':' + s)\n  }\n\n  /**\n   * Returns the \"path\" of this key (parent + type).\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n   * // => Key('/Comedy/MontyPython/Actor')\n   * ```\n   */\n  path () {\n    let p = this.parent().toString()\n    if (!p.endsWith(pathSepS)) {\n      p += pathSepS\n    }\n    p += this.type()\n    return new Key(p)\n  }\n\n  /**\n   * Returns the `parent` Key of this Key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n   * // => Key(\"/Comedy/MontyPython\")\n   * ```\n   */\n  parent () {\n    const list = this.list()\n    if (list.length === 1) {\n      return new Key(pathSepS)\n    }\n\n    return new Key(list.slice(0, -1).join(pathSepS))\n  }\n\n  /**\n   * Returns the `child` Key of this Key.\n   *\n   * @param {Key} key - The child Key to add\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   * ```\n   */\n  child (key) {\n    if (this.toString() === pathSepS) {\n      return key\n    } else if (key.toString() === pathSepS) {\n      return this\n    }\n\n    return new Key(this.toString() + key.toString(), false)\n  }\n\n  /**\n   * Returns whether this key is a prefix of `other`\n   *\n   * @param {Key} other - The other key to test against\n   * @returns {boolean}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n   * // => true\n   * ```\n   */\n  isAncestorOf (other) {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return other.toString().startsWith(this.toString())\n  }\n\n  /**\n   * Returns whether this key is a contains another as prefix.\n   *\n   * @param {Key} other - The other Key to test against\n   * @returns {boolean}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n   * // => true\n   * ```\n   */\n  isDecendantOf (other) {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return this.toString().startsWith(other.toString())\n  }\n\n  /**\n   * Checks if this key has only one namespace.\n   *\n   * @returns {boolean}\n   *\n   */\n  isTopLevel () {\n    return this.list().length === 1\n  }\n\n  /**\n   * Concats one or more Keys into one new Key.\n   *\n   * @param {Array<Key>} keys - The array of keys to concatenate\n   * @returns {Key}\n   */\n  concat (...keys) {\n    return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))])\n  }\n\n  /**\n   * Check if value is a Key instance\n   *\n   * @param {any} value - Value to check\n   * @returns {value is Key}\n   */\n  static isKey (value) {\n    return value instanceof Key || Boolean(value && value[symbol])\n  }\n}\n\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType (ns) {\n  const parts = ns.split(':')\n  if (parts.length < 2) {\n    return ''\n  }\n  return parts.slice(0, -1).join(':')\n}\n\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue (ns) {\n  const parts = ns.split(':')\n  return parts[parts.length - 1]\n}\n\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<T|T[]>} arr\n * @returns {T[]}\n */\nfunction flatten (arr) {\n  return /** @type {T[]} */([]).concat(...arr)\n}\n\nmodule.exports = Key\n","let crypto = require('crypto')\n\nlet { urlAlphabet } = require('./url-alphabet/index.cjs')\n\n// It is best to make fewer, larger requests to the crypto module to\n// avoid system call overhead. So, random numbers are generated in a\n// pool. The pool is a Buffer that is larger than the initial random\n// request size by this multiplier. The pool is enlarged if subsequent\n// requests exceed the maximum buffer size.\nconst POOL_SIZE_MULTIPLIER = 32\nlet pool, poolOffset\n\nlet random = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  }\n\n  let res = pool.subarray(poolOffset, poolOffset + bytes)\n  poolOffset += bytes\n  return res\n}\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n  let step = Math.ceil((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (let i = 0; i < step; i++)`.\n      let i = step\n      while (i--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let bytes = random(size)\n  let id = ''\n  // A compact alternative for `for (let i = 0; i < size; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nmodule.exports = { urlAlphabet }\n","'use strict'\n\nconst tempdir = require('ipfs-utils/src/temp-dir')\n\n/**\n * @template T\n * @typedef {import(\"./types\").Await<T>} PromiseOrValue\n */\n\n/**\n * @template T\n * @typedef {import(\"./types\").AwaitIterable<T>} AnyIterable\n */\n\nconst utf8Encoder = new TextEncoder()\nconst utf8Decoder = new TextDecoder('utf8')\n\n/**\n * Filter\n *\n * @template T\n * @param {AnyIterable<T>} iterable\n * @param {(item: T) => PromiseOrValue<boolean>} filterer\n * @returns {AsyncIterable<T>}\n */\nconst filter = (iterable, filterer) => {\n  return (async function * () {\n    for await (const value of iterable) {\n      const keep = await filterer(value)\n      if (!keep) continue\n      yield value\n    }\n  })()\n}\n\n// Not just sort, because the sorter is given all the values and should return\n// them all sorted\n/**\n * Sort All\n *\n * @template T\n * @param {AnyIterable<T>} iterable\n * @param {(items: T[]) => PromiseOrValue<T[]>} sorter\n * @returns {AsyncIterable<T>}\n */\nconst sortAll = (iterable, sorter) => {\n  return (async function * () {\n    let values = []\n    for await (const value of iterable) values.push(value)\n    values = await sorter(values)\n    for (const value of values) yield value\n  })()\n}\n\n/**\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {number} n\n * @returns {AsyncIterable<T>}\n */\nconst take = (iterable, n) => {\n  return (async function * () {\n    if (n <= 0) return\n    let i = 0\n    for await (const value of iterable) {\n      yield value\n      i++\n      if (i >= n) return\n    }\n  })()\n}\n\n/**\n *\n * @template T,O\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(item: T) => O} mapper\n * @returns {AsyncIterable<O>}\n */\nconst map = (iterable, mapper) => {\n  return (async function * () {\n    for await (const value of iterable) {\n      yield mapper(value)\n    }\n  })()\n}\n\n/**\n * @param {string} s\n * @param {string} r\n */\nconst replaceStartWith = (s, r) => {\n  const matcher = new RegExp('^' + r)\n  return s.replace(matcher, '')\n}\n\nmodule.exports = {\n  map,\n  take,\n  sortAll,\n  filter,\n  utf8Encoder,\n  utf8Decoder,\n  tmpdir: tempdir,\n  replaceStartWith\n}\n","'use strict'\n\nconst { nanoid } = require('nanoid')\n\n/**\n * Temporary folder\n *\n * @param {(uuid: string) => string} transform - Transform function to add prefixes or sufixes to the unique id\n * @returns {string} - Full real path to a temporary folder\n */\nconst tempdir = (transform = d => d) => {\n  return transform(nanoid())\n}\n\nmodule.exports = tempdir\n","'use strict'\n\nconst Key = require('./key')\nconst Adapter = require('./adapter')\nconst Errors = require('./errors')\n\n/**\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Datastore} Datastore\n * @typedef {import('./types').Options} Options\n */\n\n/**\n * @class MemoryDatastore\n * @implements {Datastore}\n */\nclass MemoryDatastore extends Adapter {\n  constructor () {\n    super()\n\n    /** @type {Record<string, Uint8Array>} */\n    this.data = {}\n  }\n\n  open () {\n    return Promise.resolve()\n  }\n\n  close () {\n    return Promise.resolve()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   */\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[key.toString()] = val\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[key.toString()]\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async has (key) { // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[key.toString()]\n  }\n\n  async * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: new Key(key), value }))\n  }\n}\n\nmodule.exports = MemoryDatastore\n","'use strict'\n\nconst { filter, sortAll, take, map } = require('./utils')\nconst drain = require('it-drain')\n\n/**\n * @typedef {import('./key')} Key\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Datastore} Datastore\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').Batch} Batch\n */\n\n/**\n * @template O\n * @typedef {import('./types').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Datastore}\n */\nclass Adapter {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {Key[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (e) =>\n        e.key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    if (q.keysOnly === true) {\n      return map(it, (e) => /** @type {Pair} */({ key: e.key }))\n    }\n\n    return it\n  }\n}\n\nmodule.exports = Adapter\n","'use strict'\n\nconst errCode = require('err-code')\n\n/**\n * @param {Error} [err]\n */\nfunction dbOpenFailedError (err) {\n  err = err || new Error('Cannot open database')\n  return errCode(err, 'ERR_DB_OPEN_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nfunction dbDeleteFailedError (err) {\n  err = err || new Error('Delete failed')\n  return errCode(err, 'ERR_DB_DELETE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nfunction dbWriteFailedError (err) {\n  err = err || new Error('Write failed')\n  return errCode(err, 'ERR_DB_WRITE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nfunction notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\n/**\n * @param {Error} [err]\n */\nfunction abortedError (err) {\n  err = err || new Error('Aborted')\n  return errCode(err, 'ERR_ABORTED')\n}\n\nmodule.exports = {\n  dbOpenFailedError,\n  dbDeleteFailedError,\n  dbWriteFailedError,\n  notFoundError,\n  abortedError\n}\n","'use strict'\n\n// @ts-ignore node-forge types not exported\nrequire('node-forge/lib/pkcs7')\n// @ts-ignore node-forge types not exported\nrequire('node-forge/lib/pbe')\n// @ts-ignore node-forge types not exported\nconst forge = require('node-forge/lib/forge')\nconst { certificateForKey, findAsync } = require('./util')\nconst errcode = require('err-code')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nconst privates = new WeakMap()\n\n/**\n * Cryptographic Message Syntax (aka PKCS #7)\n *\n * CMS describes an encapsulation syntax for data protection. It\n * is used to digitally sign, digest, authenticate, or encrypt\n * arbitrary message content.\n *\n * See RFC 5652 for all the details.\n */\nclass CMS {\n  /**\n   * Creates a new instance with a keychain\n   *\n   * @param {import('./index')} keychain - the available keys\n   * @param {string} dek\n   */\n  constructor (keychain, dek) {\n    if (!keychain) {\n      throw errcode(new Error('keychain is required'), 'ERR_KEYCHAIN_REQUIRED')\n    }\n\n    this.keychain = keychain\n    privates.set(this, { dek })\n  }\n\n  /**\n   * Creates some protected data.\n   *\n   * The output Uint8Array contains the PKCS #7 message in DER.\n   *\n   * @param {string} name - The local key name.\n   * @param {Uint8Array} plain - The data to encrypt.\n   * @returns {Promise<Uint8Array>}\n   */\n  async encrypt (name, plain) {\n    if (!(plain instanceof Uint8Array)) {\n      throw errcode(new Error('Plain data must be a Uint8Array'), 'ERR_INVALID_PARAMS')\n    }\n\n    const key = await this.keychain.findKeyByName(name)\n    const pem = await this.keychain._getPrivateKey(name)\n    /** @type {string} */\n    const dek = privates.get(this).dek\n    const privateKey = forge.pki.decryptRsaPrivateKey(pem, dek)\n    const certificate = await certificateForKey(key, privateKey)\n\n    // create a p7 enveloped message\n    const p7 = forge.pkcs7.createEnvelopedData()\n    p7.addRecipient(certificate)\n    p7.content = forge.util.createBuffer(plain)\n    p7.encrypt()\n\n    // convert message to DER\n    const der = forge.asn1.toDer(p7.toAsn1()).getBytes()\n    return uint8ArrayFromString(der, 'ascii')\n  }\n\n  /**\n   * Reads some protected data.\n   *\n   * The keychain must contain one of the keys used to encrypt the data.  If none of the keys\n   * exists, an Error is returned with the property 'missingKeys'.  It is array of key ids.\n   *\n   * @param {Uint8Array} cmsData - The CMS encrypted data to decrypt.\n   * @returns {Promise<Uint8Array>}\n   */\n  async decrypt (cmsData) {\n    if (!(cmsData instanceof Uint8Array)) {\n      throw errcode(new Error('CMS data is required'), 'ERR_INVALID_PARAMS')\n    }\n\n    let cms\n    try {\n      const buf = forge.util.createBuffer(uint8ArrayToString(cmsData, 'ascii'))\n      const obj = forge.asn1.fromDer(buf)\n      // @ts-ignore not defined\n      cms = forge.pkcs7.messageFromAsn1(obj)\n    } catch (err) {\n      throw errcode(new Error('Invalid CMS: ' + err.message), 'ERR_INVALID_CMS')\n    }\n\n    // Find a recipient whose key we hold. We only deal with recipient certs\n    // issued by ipfs (O=ipfs).\n    const recipients = cms.recipients\n      // @ts-ignore cms types not defined\n      .filter(r => r.issuer.find(a => a.shortName === 'O' && a.value === 'ipfs'))\n      // @ts-ignore cms types not defined\n      .filter(r => r.issuer.find(a => a.shortName === 'CN'))\n      // @ts-ignore cms types not defined\n      .map(r => {\n        return {\n          recipient: r,\n          // @ts-ignore cms types not defined\n          keyId: r.issuer.find(a => a.shortName === 'CN').value\n        }\n      })\n\n    const r = await findAsync(recipients, async (recipient) => {\n      try {\n        const key = await this.keychain.findKeyById(recipient.keyId)\n        if (key) return true\n      } catch (err) {\n        return false\n      }\n      return false\n    })\n\n    if (!r) {\n      // @ts-ignore cms types not defined\n      const missingKeys = recipients.map(r => r.keyId)\n      throw errcode(new Error('Decryption needs one of the key(s): ' + missingKeys.join(', ')), 'ERR_MISSING_KEYS', {\n        missingKeys\n      })\n    }\n\n    const key = await this.keychain.findKeyById(r.keyId)\n\n    if (!key) {\n      throw errcode(new Error('No key available to decrypto'), 'ERR_NO_KEY')\n    }\n\n    const pem = await this.keychain._getPrivateKey(key.name)\n    const dek = privates.get(this).dek\n    const privateKey = forge.pki.decryptRsaPrivateKey(pem, dek)\n    cms.decrypt(r.recipient, privateKey)\n    return uint8ArrayFromString(cms.content.getBytes(), 'ascii')\n  }\n}\n\nmodule.exports = CMS\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter.value,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = issuer.attributes;\n      error.actualIssuer = subject.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // check signature OID for supported signature types\n      if(child.signatureOid in oids) {\n        var oid = oids[child.signatureOid];\n        switch(oid) {\n          case 'sha1WithRSAEncryption':\n            md = forge.md.sha1.create();\n            break;\n          case 'md5WithRSAEncryption':\n            md = forge.md.md5.create();\n            break;\n          case 'sha256WithRSAEncryption':\n            md = forge.md.sha256.create();\n            break;\n          case 'sha384WithRSAEncryption':\n            md = forge.md.sha384.create();\n            break;\n          case 'sha512WithRSAEncryption':\n            md = forge.md.sha512.create();\n            break;\n          case 'RSASSA-PSS':\n            md = forge.md.sha256.create();\n            break;\n        }\n      }\n      if(md === null) {\n        var error = new Error('Could not compute certificate digest. ' +\n          'Unknown signature OID.');\n        error.signatureOid = child.signatureOid;\n        throw error;\n      }\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      var scheme;\n\n      switch(child.signatureOid) {\n        case oids.sha1WithRSAEncryption:\n          scheme = undefined; /* use PKCS#1 v1.5 padding scheme */\n          break;\n        case oids['RSASSA-PSS']:\n          var hash, mgf;\n\n          /* initialize mgf */\n          hash = oids[child.signatureParameters.mgf.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            var error = new Error('Unsupported MGF hash function.');\n            error.oid = child.signatureParameters.mgf.hash.algorithmOid;\n            error.name = hash;\n            throw error;\n          }\n\n          mgf = oids[child.signatureParameters.mgf.algorithmOid];\n          if(mgf === undefined || forge.mgf[mgf] === undefined) {\n            var error = new Error('Unsupported MGF function.');\n            error.oid = child.signatureParameters.mgf.algorithmOid;\n            error.name = mgf;\n            throw error;\n          }\n\n          mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n          /* initialize hash function */\n          hash = oids[child.signatureParameters.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            throw {\n              message: 'Unsupported RSASSA-PSS hash function.',\n              oid: child.signatureParameters.hash.algorithmOid,\n              name: hash\n            };\n          }\n\n          scheme = forge.pss.create(forge.md[hash].create(), mgf,\n            child.signatureParameters.saltLength);\n          break;\n      }\n\n      // verify signature on cert using public key\n      rval = cert.publicKey.verify(\n        md.digest().getBytes(), child.signature, scheme);\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // check signature OID for supported signature types\n    cert.md = null;\n    if(cert.signatureOid in oids) {\n      var oid = oids[cert.signatureOid];\n      switch(oid) {\n        case 'sha1WithRSAEncryption':\n          cert.md = forge.md.sha1.create();\n          break;\n        case 'md5WithRSAEncryption':\n          cert.md = forge.md.md5.create();\n          break;\n        case 'sha256WithRSAEncryption':\n          cert.md = forge.md.sha256.create();\n          break;\n        case 'sha384WithRSAEncryption':\n          cert.md = forge.md.sha384.create();\n          break;\n        case 'sha512WithRSAEncryption':\n          cert.md = forge.md.sha512.create();\n          break;\n        case 'RSASSA-PSS':\n          cert.md = forge.md.sha256.create();\n          break;\n      }\n    }\n    if(cert.md === null) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = cert.signatureOid;\n      throw error;\n    }\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer, imd);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject, smd);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // check signature OID for supported signature types\n    csr.md = null;\n    if(csr.signatureOid in oids) {\n      var oid = oids[csr.signatureOid];\n      switch(oid) {\n        case 'sha1WithRSAEncryption':\n          csr.md = forge.md.sha1.create();\n          break;\n        case 'md5WithRSAEncryption':\n          csr.md = forge.md.md5.create();\n          break;\n        case 'sha256WithRSAEncryption':\n          csr.md = forge.md.sha256.create();\n          break;\n        case 'sha384WithRSAEncryption':\n          csr.md = forge.md.sha384.create();\n          break;\n        case 'sha512WithRSAEncryption':\n          csr.md = forge.md.sha512.create();\n          break;\n        case 'RSASSA-PSS':\n          csr.md = forge.md.sha256.create();\n          break;\n      }\n    }\n    if(csr.md === null) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = csr.signatureOid;\n      throw error;\n    }\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      // check signature OID for supported signature types\n      if(csr.signatureOid in oids) {\n        // TODO: create DRY `OID to md` function\n        var oid = oids[csr.signatureOid];\n        switch(oid) {\n          case 'sha1WithRSAEncryption':\n            md = forge.md.sha1.create();\n            break;\n          case 'md5WithRSAEncryption':\n            md = forge.md.md5.create();\n            break;\n          case 'sha256WithRSAEncryption':\n            md = forge.md.sha256.create();\n            break;\n          case 'sha384WithRSAEncryption':\n            md = forge.md.sha384.create();\n            break;\n          case 'sha512WithRSAEncryption':\n            md = forge.md.sha512.create();\n            break;\n          case 'RSASSA-PSS':\n            md = forge.md.sha256.create();\n            break;\n        }\n      }\n      if(md === null) {\n        var error = new Error(\n          'Could not compute certification request digest. ' +\n          'Unknown signature OID.');\n        error.signatureOid = csr.signatureOid;\n        throw error;\n      }\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      var scheme;\n\n      switch(csr.signatureOid) {\n        case oids.sha1WithRSAEncryption:\n          /* use PKCS#1 v1.5 padding scheme */\n          break;\n        case oids['RSASSA-PSS']:\n          var hash, mgf;\n\n          /* initialize mgf */\n          hash = oids[csr.signatureParameters.mgf.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            var error = new Error('Unsupported MGF hash function.');\n            error.oid = csr.signatureParameters.mgf.hash.algorithmOid;\n            error.name = hash;\n            throw error;\n          }\n\n          mgf = oids[csr.signatureParameters.mgf.algorithmOid];\n          if(mgf === undefined || forge.mgf[mgf] === undefined) {\n            var error = new Error('Unsupported MGF function.');\n            error.oid = csr.signatureParameters.mgf.algorithmOid;\n            error.name = mgf;\n            throw error;\n          }\n\n          mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n          /* initialize hash function */\n          hash = oids[csr.signatureParameters.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            var error = new Error('Unsupported RSASSA-PSS hash function.');\n            error.oid = csr.signatureParameters.hash.algorithmOid;\n            error.name = hash;\n            throw error;\n          }\n\n          scheme = forge.pss.create(forge.md[hash].create(), mgf,\n            csr.signatureParameters.saltLength);\n          break;\n      }\n\n      // verify signature on csr using its public key\n      rval = csr.publicKey.verify(\n        md.digest().getBytes(), csr.signature, scheme);\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","// @ts-nocheck\n'use strict'\n\nrequire('node-forge/lib/x509')\nconst forge = require('node-forge/lib/forge')\nconst pki = forge.pki\n\n/**\n * Gets a self-signed X.509 certificate for the key.\n *\n * The output Uint8Array contains the PKCS #7 message in DER.\n *\n * TODO: move to libp2p-crypto package\n *\n * @param {KeyInfo} key - The id and name of the key\n * @param {RsaPrivateKey} privateKey - The naked key\n * @returns {Uint8Array}\n */\nconst certificateForKey = (key, privateKey) => {\n  const publicKey = pki.setRsaPublicKey(privateKey.n, privateKey.e)\n  const cert = pki.createCertificate()\n  cert.publicKey = publicKey\n  cert.serialNumber = '01'\n  cert.validity.notBefore = new Date()\n  cert.validity.notAfter = new Date()\n  cert.validity.notAfter.setFullYear(cert.validity.notBefore.getFullYear() + 10)\n  const attrs = [{\n    name: 'organizationName',\n    value: 'ipfs'\n  }, {\n    shortName: 'OU',\n    value: 'keystore'\n  }, {\n    name: 'commonName',\n    value: key.id\n  }]\n  cert.setSubject(attrs)\n  cert.setIssuer(attrs)\n  cert.setExtensions([{\n    name: 'basicConstraints',\n    cA: true\n  }, {\n    name: 'keyUsage',\n    keyCertSign: true,\n    digitalSignature: true,\n    nonRepudiation: true,\n    keyEncipherment: true,\n    dataEncipherment: true\n  }, {\n    name: 'extKeyUsage',\n    serverAuth: true,\n    clientAuth: true,\n    codeSigning: true,\n    emailProtection: true,\n    timeStamping: true\n  }, {\n    name: 'nsCertType',\n    client: true,\n    server: true,\n    email: true,\n    objsign: true,\n    sslCA: true,\n    emailCA: true,\n    objCA: true\n  }])\n  // self-sign certificate\n  cert.sign(privateKey)\n\n  return cert\n}\n\n/**\n * Finds the first item in a collection that is matched in the\n * `asyncCompare` function.\n *\n * `asyncCompare` is an async function that must\n * resolve to either `true` or `false`.\n *\n * @param {Array} array\n * @param {function(*)} asyncCompare - An async function that returns a boolean\n */\nasync function findAsync (array, asyncCompare) {\n  const promises = array.map(asyncCompare)\n  const results = await Promise.all(promises)\n  const index = results.findIndex(result => result)\n  return array[index]\n}\n\nmodule.exports = {\n  certificateForKey,\n  findAsync\n}\n","// @ts-nocheck\n'use strict'\n\nconst mergeOptions = require('merge-options')\nconst { pipe } = require('it-pipe')\nconst { tap } = require('streaming-iterables')\nconst oldPeerLRU = require('./old-peers')\nconst { METRICS: defaultOptions } = require('../constants')\nconst Stats = require('./stats')\n\nconst initialCounters = [\n  'dataReceived',\n  'dataSent'\n]\n\nconst directionToEvent = {\n  in: 'dataReceived',\n  out: 'dataSent'\n}\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('libp2p-interfaces/src/transport/types').MultiaddrConnection} MultiaddrConnection\n */\n\n/**\n * @typedef MetricsProperties\n * @property {import('../connection-manager')} connectionManager\n *\n * @typedef MetricsOptions\n * @property {number} [computeThrottleMaxQueueSize = defaultOptions.computeThrottleMaxQueueSize]\n * @property {number} [computeThrottleTimeout = defaultOptions.computeThrottleTimeout]\n * @property {number[]} [movingAverageIntervals = defaultOptions.movingAverageIntervals]\n * @property {number} [maxOldPeersRetention = defaultOptions.maxOldPeersRetention]\n */\n\nclass Metrics {\n  /**\n   * @class\n   * @param {MetricsProperties & MetricsOptions} options\n   */\n  constructor (options) {\n    this._options = mergeOptions(defaultOptions, options)\n    this._globalStats = new Stats(initialCounters, this._options)\n    this._peerStats = new Map()\n    this._protocolStats = new Map()\n    this._oldPeers = oldPeerLRU(this._options.maxOldPeersRetention)\n    this._running = false\n    this._onMessage = this._onMessage.bind(this)\n    this._connectionManager = options.connectionManager\n    this._connectionManager.on('peer:disconnect', (connection) => {\n      this.onPeerDisconnected(connection.remotePeer)\n    })\n  }\n\n  /**\n   * Must be called for stats to saved. Any data pushed for tracking\n   * will be ignored.\n   */\n  start () {\n    this._running = true\n  }\n\n  /**\n   * Stops all averages timers and prevents new data from being tracked.\n   * Once `stop` is called, `start` must be called to resume stats tracking.\n   */\n  stop () {\n    this._running = false\n    this._globalStats.stop()\n    for (const stats of this._peerStats.values()) {\n      stats.stop()\n    }\n    for (const stats of this._protocolStats.values()) {\n      stats.stop()\n    }\n  }\n\n  /**\n   * Gets the global `Stats` object\n   *\n   * @returns {Stats}\n   */\n  get global () {\n    return this._globalStats\n  }\n\n  /**\n   * Returns a list of `PeerId` strings currently being tracked\n   *\n   * @returns {string[]}\n   */\n  get peers () {\n    return Array.from(this._peerStats.keys())\n  }\n\n  /**\n   * Returns the `Stats` object for the given `PeerId` whether it\n   * is a live peer, or in the disconnected peer LRU cache.\n   *\n   * @param {PeerId} peerId\n   * @returns {Stats}\n   */\n  forPeer (peerId) {\n    const idString = peerId.toB58String()\n    return this._peerStats.get(idString) || this._oldPeers.get(idString)\n  }\n\n  /**\n   * Returns a list of all protocol strings currently being tracked.\n   *\n   * @returns {string[]}\n   */\n  get protocols () {\n    return Array.from(this._protocolStats.keys())\n  }\n\n  /**\n   * Returns the `Stats` object for the given `protocol`.\n   *\n   * @param {string} protocol\n   * @returns {Stats}\n   */\n  forProtocol (protocol) {\n    return this._protocolStats.get(protocol)\n  }\n\n  /**\n   * Should be called when all connections to a given peer\n   * have closed. The `Stats` collection for the peer will\n   * be stopped and moved to an LRU for temporary retention.\n   *\n   * @param {PeerId} peerId\n   */\n  onPeerDisconnected (peerId) {\n    const idString = peerId.toB58String()\n    const peerStats = this._peerStats.get(idString)\n    if (peerStats) {\n      peerStats.stop()\n      this._peerStats.delete(idString)\n      this._oldPeers.set(idString, peerStats)\n    }\n  }\n\n  /**\n   * Takes the metadata for a message and tracks it in the\n   * appropriate categories. If the protocol is present, protocol\n   * stats will also be tracked.\n   *\n   * @private\n   * @param {object} params\n   * @param {PeerId} params.remotePeer - Remote peer\n   * @param {string} [params.protocol] - Protocol string the stream is running\n   * @param {string} params.direction - One of ['in','out']\n   * @param {number} params.dataLength - Size of the message\n   * @returns {void}\n   */\n  _onMessage ({ remotePeer, protocol, direction, dataLength }) {\n    if (!this._running) return\n\n    const key = directionToEvent[direction]\n\n    let peerStats = this.forPeer(remotePeer)\n    if (!peerStats) {\n      peerStats = new Stats(initialCounters, this._options)\n      this._peerStats.set(remotePeer.toB58String(), peerStats)\n    }\n\n    // Peer and global stats\n    peerStats.push(key, dataLength)\n    this._globalStats.push(key, dataLength)\n\n    // Protocol specific stats\n    if (protocol) {\n      let protocolStats = this.forProtocol(protocol)\n      if (!protocolStats) {\n        protocolStats = new Stats(initialCounters, this._options)\n        this._protocolStats.set(protocol, protocolStats)\n      }\n      protocolStats.push(key, dataLength)\n    }\n  }\n\n  /**\n   * Replaces the `PeerId` string with the given `peerId`.\n   * If stats are already being tracked for the given `peerId`, the\n   * placeholder stats will be merged with the existing stats.\n   *\n   * @param {PeerId} placeholder - A peerId string\n   * @param {PeerId} peerId\n   * @returns {void}\n   */\n  updatePlaceholder (placeholder, peerId) {\n    if (!this._running) return\n    const placeholderStats = this.forPeer(placeholder)\n    const peerIdString = peerId.toB58String()\n    const existingStats = this.forPeer(peerId)\n    let mergedStats = placeholderStats\n\n    // If we already have stats, merge the two\n    if (existingStats) {\n      // If existing, merge\n      mergedStats = Metrics.mergeStats(existingStats, mergedStats)\n      // Attempt to delete from the old peers list just in case it was tracked there\n      this._oldPeers.delete(peerIdString)\n    }\n\n    this._peerStats.delete(placeholder.toB58String())\n    this._peerStats.set(peerIdString, mergedStats)\n    mergedStats.start()\n  }\n\n  /**\n   * Tracks data running through a given Duplex Iterable `stream`. If\n   * the `peerId` is not provided, a placeholder string will be created and\n   * returned. This allows lazy tracking of a peer when the peer is not yet known.\n   * When the `PeerId` is known, `Metrics.updatePlaceholder` should be called\n   * with the placeholder string returned from here, and the known `PeerId`.\n   *\n   * @param {Object} options\n   * @param {MultiaddrConnection} options.stream - A duplex iterable stream\n   * @param {PeerId} [options.remotePeer] - The id of the remote peer that's connected\n   * @param {string} [options.protocol] - The protocol the stream is running\n   * @returns {MultiaddrConnection} The peerId string or placeholder string\n   */\n  trackStream ({ stream, remotePeer, protocol }) {\n    const metrics = this\n    const _source = stream.source\n    stream.source = tap(chunk => metrics._onMessage({\n      remotePeer,\n      protocol,\n      direction: 'in',\n      dataLength: chunk.length\n    }))(_source)\n\n    const _sink = stream.sink\n    stream.sink = source => {\n      return pipe(\n        source,\n        tap(chunk => metrics._onMessage({\n          remotePeer,\n          protocol,\n          direction: 'out',\n          dataLength: chunk.length\n        })),\n        _sink\n      )\n    }\n\n    return stream\n  }\n\n  /**\n   * Merges `other` into `target`. `target` will be modified\n   * and returned.\n   *\n   * @param {Stats} target\n   * @param {Stats} other\n   * @returns {Stats}\n   */\n  static mergeStats (target, other) {\n    target.stop()\n    other.stop()\n\n    // Merge queues\n    target._queue = [...target._queue, ...other._queue]\n\n    // TODO: how to merge moving averages?\n    return target\n  }\n}\n\nmodule.exports = Metrics\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.streamingIterables = {}));\n}(this, (function (exports) { 'use strict';\n\n    async function* _batch(size, iterable) {\n        let dataBatch = [];\n        for await (const data of iterable) {\n            dataBatch.push(data);\n            if (dataBatch.length === size) {\n                yield dataBatch;\n                dataBatch = [];\n            }\n        }\n        if (dataBatch.length > 0) {\n            yield dataBatch;\n        }\n    }\n    function* _syncBatch(size, iterable) {\n        let dataBatch = [];\n        for (const data of iterable) {\n            dataBatch.push(data);\n            if (dataBatch.length === size) {\n                yield dataBatch;\n                dataBatch = [];\n            }\n        }\n        if (dataBatch.length > 0) {\n            yield dataBatch;\n        }\n    }\n    function batch(size, iterable) {\n        if (iterable === undefined) {\n            return curriedIterable => batch(size, curriedIterable);\n        }\n        if (iterable[Symbol.asyncIterator]) {\n            return _batch(size, iterable);\n        }\n        return _syncBatch(size, iterable);\n    }\n\n    function getIterator(iterable) {\n        if (typeof iterable.next === 'function') {\n            return iterable;\n        }\n        if (typeof iterable[Symbol.iterator] === 'function') {\n            return iterable[Symbol.iterator]();\n        }\n        if (typeof iterable[Symbol.asyncIterator] === 'function') {\n            return iterable[Symbol.asyncIterator]();\n        }\n        throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n    }\n\n    function defer() {\n        let reject;\n        let resolve;\n        const promise = new Promise((resolveFunc, rejectFunc) => {\n            resolve = resolveFunc;\n            reject = rejectFunc;\n        });\n        return {\n            promise,\n            reject,\n            resolve,\n        };\n    }\n\n    /// <reference lib=\"esnext.asynciterable\" />\n    function _buffer(size, iterable) {\n        const iterator = getIterator(iterable);\n        const resultQueue = [];\n        const readQueue = [];\n        let reading = false;\n        let ended = false;\n        function fulfillReadQueue() {\n            while (readQueue.length > 0 && resultQueue.length > 0) {\n                const readDeferred = readQueue.shift();\n                const { error, value } = resultQueue.shift();\n                if (error) {\n                    readDeferred.reject(error);\n                }\n                else {\n                    readDeferred.resolve({ done: false, value });\n                }\n            }\n            while (readQueue.length > 0 && ended) {\n                const { resolve } = readQueue.shift();\n                resolve({ done: true, value: undefined });\n            }\n        }\n        async function fillQueue() {\n            if (ended) {\n                return;\n            }\n            if (reading) {\n                return;\n            }\n            if (resultQueue.length >= size) {\n                return;\n            }\n            reading = true;\n            try {\n                const { done, value } = await iterator.next();\n                if (done) {\n                    ended = true;\n                }\n                else {\n                    resultQueue.push({ value });\n                }\n            }\n            catch (error) {\n                ended = true;\n                resultQueue.push({ error });\n            }\n            fulfillReadQueue();\n            reading = false;\n            fillQueue();\n        }\n        async function next() {\n            if (resultQueue.length > 0) {\n                const { error, value } = resultQueue.shift();\n                if (error) {\n                    throw error;\n                }\n                fillQueue();\n                return { done: false, value };\n            }\n            if (ended) {\n                return { done: true, value: undefined }; // stupid ts\n            }\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const asyncIterableIterator = {\n            next,\n            [Symbol.asyncIterator]: () => asyncIterableIterator,\n        };\n        return asyncIterableIterator;\n    }\n    function* syncBuffer(size, iterable) {\n        const valueQueue = [];\n        let e;\n        try {\n            for (const value of iterable) {\n                valueQueue.push(value);\n                if (valueQueue.length <= size) {\n                    continue;\n                }\n                yield valueQueue.shift();\n            }\n        }\n        catch (error) {\n            e = error;\n        }\n        for (const value of valueQueue) {\n            yield value;\n        }\n        if (e) {\n            throw e;\n        }\n    }\n    function buffer(size, iterable) {\n        if (iterable === undefined) {\n            return curriedIterable => buffer(size, curriedIterable);\n        }\n        if (size === 0) {\n            return iterable;\n        }\n        if (iterable[Symbol.asyncIterator]) {\n            return _buffer(size, iterable);\n        }\n        return syncBuffer(size, iterable);\n    }\n\n    async function _collect(iterable) {\n        const values = [];\n        for await (const value of iterable) {\n            values.push(value);\n        }\n        return values;\n    }\n    function collect(iterable) {\n        if (iterable[Symbol.asyncIterator]) {\n            return _collect(iterable);\n        }\n        return Array.from(iterable);\n    }\n\n    async function* _concat(iterables) {\n        for await (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    function* _syncConcat(iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    function concat(...iterables) {\n        const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n        if (hasAnyAsync) {\n            return _concat(iterables);\n        }\n        else {\n            return _syncConcat(iterables);\n        }\n    }\n\n    async function _consume(iterable) {\n        for await (const val of iterable) {\n            // do nothing\n        }\n    }\n    function consume(iterable) {\n        if (iterable[Symbol.asyncIterator]) {\n            return _consume(iterable);\n        }\n        for (const val of iterable) {\n            // do nothing\n        }\n    }\n\n    async function* _filter(filterFunc, iterable) {\n        for await (const data of iterable) {\n            if (await filterFunc(data)) {\n                yield data;\n            }\n        }\n    }\n    function filter(filterFunc, iterable) {\n        if (iterable === undefined) {\n            return (curriedIterable) => _filter(filterFunc, curriedIterable);\n        }\n        return _filter(filterFunc, iterable);\n    }\n\n    async function* flatten(iterable) {\n        for await (const maybeItr of iterable) {\n            if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n                yield* flatten(maybeItr);\n            }\n            else {\n                yield maybeItr;\n            }\n        }\n    }\n\n    async function* _map(func, iterable) {\n        for await (const val of iterable) {\n            yield await func(val);\n        }\n    }\n    function map(func, iterable) {\n        if (iterable === undefined) {\n            return curriedIterable => _map(func, curriedIterable);\n        }\n        return _map(func, iterable);\n    }\n\n    function flatMap(func, iterable) {\n        if (iterable === undefined) {\n            return curriedIterable => flatMap(func, curriedIterable);\n        }\n        return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n    }\n\n    function _flatTransform(concurrency, func, iterable) {\n        const iterator = getIterator(iterable);\n        const resultQueue = [];\n        const readQueue = [];\n        let ended = false;\n        let reading = false;\n        let inflightCount = 0;\n        let lastError = null;\n        function fulfillReadQueue() {\n            while (readQueue.length > 0 && resultQueue.length > 0) {\n                const { resolve } = readQueue.shift();\n                const value = resultQueue.shift();\n                resolve({ done: false, value });\n            }\n            while (readQueue.length > 0 && inflightCount === 0 && ended) {\n                const { resolve, reject } = readQueue.shift();\n                if (lastError) {\n                    reject(lastError);\n                    lastError = null;\n                }\n                else {\n                    resolve({ done: true, value: undefined });\n                }\n            }\n        }\n        async function fillQueue() {\n            if (ended) {\n                fulfillReadQueue();\n                return;\n            }\n            if (reading) {\n                return;\n            }\n            if (inflightCount + resultQueue.length >= concurrency) {\n                return;\n            }\n            reading = true;\n            inflightCount++;\n            try {\n                const { done, value } = await iterator.next();\n                if (done) {\n                    ended = true;\n                    inflightCount--;\n                    fulfillReadQueue();\n                }\n                else {\n                    mapAndQueue(value);\n                }\n            }\n            catch (error) {\n                ended = true;\n                inflightCount--;\n                lastError = error;\n                fulfillReadQueue();\n            }\n            reading = false;\n            fillQueue();\n        }\n        async function mapAndQueue(itrValue) {\n            try {\n                const value = await func(itrValue);\n                if (value && value[Symbol.asyncIterator]) {\n                    for await (const asyncVal of value) {\n                        resultQueue.push(asyncVal);\n                    }\n                }\n                else {\n                    resultQueue.push(value);\n                }\n            }\n            catch (error) {\n                ended = true;\n                lastError = error;\n            }\n            inflightCount--;\n            fulfillReadQueue();\n            fillQueue();\n        }\n        async function next() {\n            if (resultQueue.length === 0) {\n                const deferred = defer();\n                readQueue.push(deferred);\n                fillQueue();\n                return deferred.promise;\n            }\n            const value = resultQueue.shift();\n            fillQueue();\n            return { done: false, value };\n        }\n        const asyncIterableIterator = {\n            next,\n            [Symbol.asyncIterator]: () => asyncIterableIterator,\n        };\n        return asyncIterableIterator;\n    }\n    function flatTransform(concurrency, func, iterable) {\n        if (func === undefined) {\n            return (curriedFunc, curriedIterable) => curriedIterable\n                ? flatTransform(concurrency, curriedFunc, curriedIterable)\n                : flatTransform(concurrency, curriedFunc);\n        }\n        if (iterable === undefined) {\n            return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n        }\n        return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n    }\n\n    async function onceReadable(stream) {\n        return new Promise(resolve => {\n            stream.once('readable', () => {\n                resolve();\n            });\n        });\n    }\n    async function* _fromStream(stream) {\n        while (true) {\n            const data = stream.read();\n            if (data !== null) {\n                yield data;\n                continue;\n            }\n            if (stream._readableState.ended) {\n                break;\n            }\n            await onceReadable(stream);\n        }\n    }\n    function fromStream(stream) {\n        if (typeof stream[Symbol.asyncIterator] === 'function') {\n            return stream;\n        }\n        return _fromStream(stream);\n    }\n\n    async function* merge(...iterables) {\n        const sources = new Set(iterables.map(getIterator));\n        while (sources.size > 0) {\n            for (const iterator of sources) {\n                const nextVal = await iterator.next();\n                if (nextVal.done) {\n                    sources.delete(iterator);\n                }\n                else {\n                    yield nextVal.value;\n                }\n            }\n        }\n    }\n\n    function pipeline(firstFn, ...fns) {\n        let previousFn = firstFn();\n        for (const func of fns) {\n            previousFn = func(previousFn);\n        }\n        return previousFn;\n    }\n\n    async function* _parallelMap(concurrency, func, iterable) {\n        let transformError = null;\n        const wrapFunc = value => ({\n            value: func(value),\n        });\n        const stopOnError = async function* (source) {\n            for await (const value of source) {\n                if (transformError) {\n                    return;\n                }\n                yield value;\n            }\n        };\n        const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n        const itr = getIterator(output);\n        while (true) {\n            const { value, done } = await itr.next();\n            if (done) {\n                break;\n            }\n            try {\n                const val = await value.value;\n                if (!transformError) {\n                    yield val;\n                }\n            }\n            catch (error) {\n                transformError = error;\n            }\n        }\n        if (transformError) {\n            throw transformError;\n        }\n    }\n    function parallelMap(concurrency, func, iterable) {\n        if (func === undefined) {\n            return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n        }\n        if (iterable === undefined) {\n            return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n        }\n        if (concurrency === 1) {\n            return map(func, iterable);\n        }\n        return _parallelMap(concurrency, func, iterable);\n    }\n\n    function parallelFlatMap(concurrency, func, iterable) {\n        if (func === undefined) {\n            return (curriedFunc, curriedIterable) => curriedIterable\n                ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n                : parallelFlatMap(concurrency, curriedFunc);\n        }\n        if (iterable === undefined) {\n            return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n        }\n        return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n    }\n\n    /// <reference lib=\"esnext.asynciterable\" />\n    async function* parallelMerge(...iterables) {\n        const inputs = iterables.map(getIterator);\n        const concurrentWork = new Set();\n        const values = new Map();\n        let lastError = null;\n        let errCb = null;\n        let valueCb = null;\n        const notifyError = err => {\n            lastError = err;\n            if (errCb) {\n                errCb(err);\n            }\n        };\n        const notifyDone = value => {\n            if (valueCb) {\n                valueCb(value);\n            }\n        };\n        const waitForQueue = () => new Promise((resolve, reject) => {\n            if (lastError) {\n                reject(lastError);\n            }\n            if (values.size > 0) {\n                return resolve();\n            }\n            valueCb = resolve;\n            errCb = reject;\n        });\n        const queueNext = input => {\n            const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n                if (!done) {\n                    values.set(input, value);\n                }\n                concurrentWork.delete(nextVal);\n            });\n            concurrentWork.add(nextVal);\n            nextVal.then(notifyDone, notifyError);\n        };\n        for (const input of inputs) {\n            queueNext(input);\n        }\n        while (true) {\n            // We technically don't have to check `values.size` as the for loop should have emptied it\n            // However I haven't yet found specs verifying that behavior, only tests\n            // the guard in waitForQueue() checking for values is in place for the same reason\n            if (concurrentWork.size === 0 && values.size === 0) {\n                return;\n            }\n            await waitForQueue();\n            for (const [input, value] of values) {\n                values.delete(input);\n                yield value;\n                queueNext(input);\n            }\n        }\n    }\n\n    async function _reduce(func, start, iterable) {\n        let value = start;\n        for await (const nextItem of iterable) {\n            value = await func(value, nextItem);\n        }\n        return value;\n    }\n    function reduce(func, start, iterable) {\n        if (start === undefined) {\n            return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n        }\n        if (iterable === undefined) {\n            return (curriedIterable) => reduce(func, start, curriedIterable);\n        }\n        return _reduce(func, start, iterable);\n    }\n\n    async function* _take(count, iterable) {\n        let taken = 0;\n        for await (const val of iterable) {\n            yield await val;\n            taken++;\n            if (taken >= count) {\n                break;\n            }\n        }\n    }\n    function* _syncTake(count, iterable) {\n        let taken = 0;\n        for (const val of iterable) {\n            yield val;\n            taken++;\n            if (taken >= count) {\n                break;\n            }\n        }\n    }\n    function take(count, iterable) {\n        if (iterable === undefined) {\n            return curriedIterable => take(count, curriedIterable);\n        }\n        if (iterable[Symbol.asyncIterator]) {\n            return _take(count, iterable);\n        }\n        return _syncTake(count, iterable);\n    }\n\n    async function* _asyncTap(func, iterable) {\n        for await (const val of iterable) {\n            await func(val);\n            yield val;\n        }\n    }\n    function tap(func, iterable) {\n        if (iterable === undefined) {\n            return (curriedIterable) => _asyncTap(func, curriedIterable);\n        }\n        return _asyncTap(func, iterable);\n    }\n\n    function addTime(a, b) {\n        let seconds = a[0] + b[0];\n        let nanoseconds = a[1] + b[1];\n        if (nanoseconds >= 1000000000) {\n            const remainder = nanoseconds % 1000000000;\n            seconds += (nanoseconds - remainder) / 1000000000;\n            nanoseconds = remainder;\n        }\n        return [seconds, nanoseconds];\n    }\n    async function* _asyncTime(config, iterable) {\n        const itr = iterable[Symbol.asyncIterator]();\n        let total = [0, 0];\n        while (true) {\n            const start = process.hrtime();\n            const { value, done } = await itr.next();\n            const delta = process.hrtime(start);\n            total = addTime(total, delta);\n            if (config.progress) {\n                config.progress(delta, total);\n            }\n            if (done) {\n                if (config.total) {\n                    config.total(total);\n                }\n                return value;\n            }\n            yield value;\n        }\n    }\n    function* _syncTime(config, iterable) {\n        const itr = iterable[Symbol.iterator]();\n        let total = [0, 0];\n        while (true) {\n            const start = process.hrtime();\n            const { value, done } = itr.next();\n            const delta = process.hrtime(start);\n            total = addTime(total, delta);\n            if (config.progress) {\n                config.progress(delta, total);\n            }\n            if (done) {\n                if (config.total) {\n                    config.total(total);\n                }\n                return value;\n            }\n            yield value;\n        }\n    }\n    function time(config = {}, iterable) {\n        if (iterable === undefined) {\n            return curriedIterable => time(config, curriedIterable);\n        }\n        if (iterable[Symbol.asyncIterator] !== undefined) {\n            return _asyncTime(config, iterable);\n        }\n        else {\n            return _syncTime(config, iterable);\n        }\n    }\n\n    function _transform(concurrency, func, iterable) {\n        const iterator = getIterator(iterable);\n        const resultQueue = [];\n        const readQueue = [];\n        let ended = false;\n        let reading = false;\n        let inflightCount = 0;\n        let lastError = null;\n        function fulfillReadQueue() {\n            while (readQueue.length > 0 && resultQueue.length > 0) {\n                const { resolve } = readQueue.shift();\n                const value = resultQueue.shift();\n                resolve({ done: false, value });\n            }\n            while (readQueue.length > 0 && inflightCount === 0 && ended) {\n                const { resolve, reject } = readQueue.shift();\n                if (lastError) {\n                    reject(lastError);\n                    lastError = null;\n                }\n                else {\n                    resolve({ done: true, value: undefined });\n                }\n            }\n        }\n        async function fillQueue() {\n            if (ended) {\n                fulfillReadQueue();\n                return;\n            }\n            if (reading) {\n                return;\n            }\n            if (inflightCount + resultQueue.length >= concurrency) {\n                return;\n            }\n            reading = true;\n            inflightCount++;\n            try {\n                const { done, value } = await iterator.next();\n                if (done) {\n                    ended = true;\n                    inflightCount--;\n                    fulfillReadQueue();\n                }\n                else {\n                    mapAndQueue(value);\n                }\n            }\n            catch (error) {\n                ended = true;\n                inflightCount--;\n                lastError = error;\n                fulfillReadQueue();\n            }\n            reading = false;\n            fillQueue();\n        }\n        async function mapAndQueue(itrValue) {\n            try {\n                const value = await func(itrValue);\n                resultQueue.push(value);\n            }\n            catch (error) {\n                ended = true;\n                lastError = error;\n            }\n            inflightCount--;\n            fulfillReadQueue();\n            fillQueue();\n        }\n        async function next() {\n            if (resultQueue.length === 0) {\n                const deferred = defer();\n                readQueue.push(deferred);\n                fillQueue();\n                return deferred.promise;\n            }\n            const value = resultQueue.shift();\n            fillQueue();\n            return { done: false, value };\n        }\n        const asyncIterableIterator = {\n            next,\n            [Symbol.asyncIterator]: () => asyncIterableIterator,\n        };\n        return asyncIterableIterator;\n    }\n    function transform(concurrency, func, iterable) {\n        if (func === undefined) {\n            return (curriedFunc, curriedIterable) => curriedIterable\n                ? transform(concurrency, curriedFunc, curriedIterable)\n                : transform(concurrency, curriedFunc);\n        }\n        if (iterable === undefined) {\n            return (curriedIterable) => transform(concurrency, func, curriedIterable);\n        }\n        return _transform(concurrency, func, iterable);\n    }\n\n    async function _writeToStream(stream, iterable) {\n        let lastError = null;\n        let errCb = null;\n        let drainCb = null;\n        const notifyError = err => {\n            lastError = err;\n            if (errCb) {\n                errCb(err);\n            }\n        };\n        const notifyDrain = () => {\n            if (drainCb) {\n                drainCb();\n            }\n        };\n        const cleanup = () => {\n            stream.removeListener('error', notifyError);\n            stream.removeListener('drain', notifyDrain);\n        };\n        stream.once('error', notifyError);\n        const waitForDrain = () => new Promise((resolve, reject) => {\n            if (lastError) {\n                return reject(lastError);\n            }\n            stream.once('drain', notifyDrain);\n            drainCb = resolve;\n            errCb = reject;\n        });\n        for await (const value of iterable) {\n            if (stream.write(value) === false) {\n                await waitForDrain();\n            }\n            if (lastError) {\n                break;\n            }\n        }\n        cleanup();\n        if (lastError) {\n            throw lastError;\n        }\n    }\n    function writeToStream(stream, iterable) {\n        if (iterable === undefined) {\n            return (curriedIterable) => _writeToStream(stream, curriedIterable);\n        }\n        return _writeToStream(stream, iterable);\n    }\n\n    exports.batch = batch;\n    exports.buffer = buffer;\n    exports.collect = collect;\n    exports.concat = concat;\n    exports.consume = consume;\n    exports.filter = filter;\n    exports.flatMap = flatMap;\n    exports.flatTransform = flatTransform;\n    exports.flatten = flatten;\n    exports.fromStream = fromStream;\n    exports.getIterator = getIterator;\n    exports.map = map;\n    exports.merge = merge;\n    exports.parallelFlatMap = parallelFlatMap;\n    exports.parallelMap = parallelMap;\n    exports.parallelMerge = parallelMerge;\n    exports.pipeline = pipeline;\n    exports.reduce = reduce;\n    exports.take = take;\n    exports.tap = tap;\n    exports.time = time;\n    exports.transform = transform;\n    exports.writeToStream = writeToStream;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict'\n\nconst LRU = require('hashlru')\n\n/**\n * Creates and returns a Least Recently Used Cache\n *\n * @param {number} maxSize\n * @returns {any}\n */\nmodule.exports = (maxSize) => {\n  // @ts-ignore LRU expression is not callable\n  const patched = LRU(maxSize)\n  patched.delete = patched.remove\n  return patched\n}\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","// @ts-nocheck\n'use strict'\n\nconst EventEmitter = require('events')\nconst Big = require('bignumber.js')\nconst MovingAverage = require('moving-average')\nconst retimer = require('retimer')\n\nclass Stats extends EventEmitter {\n  /**\n   * A queue based manager for stat processing\n   *\n   * @class\n   * @param {string[]} initialCounters\n   * @param {any} options\n   */\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    this._queue = []\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    this._frequencyAccumulators = {}\n\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    const intervals = this._options.movingAverageIntervals\n\n    for (let i = 0; i < initialCounters.length; i++) {\n      const key = initialCounters[i]\n      this._stats[key] = Big(0)\n      this._movingAverages[key] = {}\n      for (let k = 0; k < intervals.length; k++) {\n        const interval = intervals[k]\n        const ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      }\n    }\n  }\n\n  /**\n   * Initializes the internal timer if there are items in the queue. This\n   * should only need to be called if `Stats.stop` was previously called, as\n   * `Stats.push` will also start the processing.\n   *\n   * @returns {void}\n   */\n  start () {\n    if (this._queue.length) {\n      this._resetComputeTimeout()\n    }\n  }\n\n  /**\n   * Stops processing and computing of stats by clearing the internal\n   * timer.\n   *\n   * @returns {void}\n   */\n  stop () {\n    if (this._timeout) {\n      this._timeout.clear()\n      this._timeout = null\n    }\n  }\n\n  /**\n   * Returns a clone of the current stats.\n   */\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  /**\n   * Returns a clone of the internal movingAverages\n   */\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  /**\n   * Returns a plain JSON object of the stats\n   *\n   * @returns {*}\n   */\n  toJSON () {\n    const snapshot = this.snapshot\n    const movingAverages = this.movingAverages\n    const data = {\n      dataReceived: snapshot.dataReceived.toString(),\n      dataSent: snapshot.dataSent.toString(),\n      movingAverages: {}\n    }\n\n    const counters = Object.keys(movingAverages)\n    for (const key of counters) {\n      data.movingAverages[key] = {}\n      for (const interval of Object.keys(movingAverages[key])) {\n        data.movingAverages[key][interval] = movingAverages[key][interval].movingAverage()\n      }\n    }\n\n    return data\n  }\n\n  /**\n   * Pushes the given operation data to the queue, along with the\n   * current Timestamp, then resets the update timer.\n   *\n   * @param {string} counter\n   * @param {number} inc\n   * @returns {void}\n   */\n  push (counter, inc) {\n    this._queue.push([counter, inc, Date.now()])\n    this._resetComputeTimeout()\n  }\n\n  /**\n   * Resets the timeout for triggering updates.\n   *\n   * @private\n   * @returns {void}\n   */\n  _resetComputeTimeout () {\n    this._timeout = retimer(this._update, this._nextTimeout())\n  }\n\n  /**\n   * Calculates and returns the timeout for the next update based on\n   * the urgency of the update.\n   *\n   * @private\n   * @returns {number}\n   */\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    const timeout = Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n    return timeout\n  }\n\n  /**\n   * If there are items in the queue, they will will be processed and\n   * the frequency for all items will be updated based on the Timestamp\n   * of the last item in the queue. The `update` event will also be emitted\n   * with the latest stats.\n   *\n   * If there are no items in the queue, no action is taken.\n   *\n   * @private\n   * @returns {void}\n   */\n  _update () {\n    this._timeout = null\n    if (this._queue.length) {\n      let last\n      for (last of this._queue) {\n        this._applyOp(last)\n      }\n      this._queue = []\n\n      this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  /**\n   * For each key in the stats, the frequency and moving averages\n   * will be updated via Stats._updateFrequencyFor based on the time\n   * difference between calls to this method.\n   *\n   * @private\n   * @param {Timestamp} latestTime\n   * @returns {void}\n   */\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    Object.keys(this._stats).forEach((key) => {\n      this._updateFrequencyFor(key, timeDiff, latestTime)\n    })\n\n    this._frequencyLastTime = latestTime\n  }\n\n  /**\n   * Updates the `movingAverages` for the given `key` and also\n   * resets the `frequencyAccumulator` for the `key`.\n   *\n   * @private\n   * @param {string} key\n   * @param {number} timeDiffMS - Time in milliseconds\n   * @param {Timestamp} latestTime - Time in ticks\n   * @returns {void}\n   */\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    // if `timeDiff` is zero, `hz` becomes Infinity, so we fallback to 1ms\n    const safeTimeDiff = timeDiffMS || 1\n    const hz = (count / safeTimeDiff) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n\n    const intervals = this._options.movingAverageIntervals\n\n    for (let i = 0; i < intervals.length; i++) {\n      const movingAverageInterval = intervals[i]\n      let movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    }\n  }\n\n  /**\n   * For the given operation, `op`, the stats and `frequencyAccumulator`\n   * will be updated or initialized if they don't already exist.\n   *\n   * @private\n   * @param {{string, number}[]} op\n   * @throws {InvalidNumber}\n   * @returns {void}\n   */\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error(`invalid increment number: ${inc}`)\n    }\n\n    let n\n\n    if (!Object.prototype.hasOwnProperty.call(this._stats, key)) {\n      n = this._stats[key] = Big(0)\n    } else {\n      n = this._stats[key]\n    }\n    this._stats[key] = n.plus(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n\nmodule.exports = Stats\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict'\n\nconst exp = Math.exp\n\nexports =\nmodule.exports =\nfunction MovingAverage (timespan) {\n  if (typeof timespan !== 'number') { throw new Error('must provide a timespan to the moving average constructor') }\n\n  if (timespan <= 0) { throw new Error('must provide a timespan > 0 to the moving average constructor') }\n\n  let ma     // moving average\n  let v = 0  // variance\n  let d = 0  // deviation\n  let f = 0  // forecast\n\n  let previousTime\n\n  let ret = {}\n\n  function alpha (t, pt) {\n    return 1 - (exp(-(t - pt) / timespan))\n  }\n\n  ret.push =\n  function push (time, value) {\n    if (previousTime) {\n      // calculate moving average\n      const a = alpha(time, previousTime)\n      const diff = value - ma\n      const incr = a * diff\n      ma = a * value + (1 - a) * ma\n      // calculate variance & deviation\n      v = (1 - a) * (v + diff * incr)\n      d = Math.sqrt(v)\n      // calculate forecast\n      f = ma + a * diff\n    } else {\n      ma = value\n    }\n    previousTime = time\n  }\n\n  // Exponential Moving Average\n\n  ret.movingAverage =\n  function movingAverage () {\n    return ma\n  }\n\n  // Variance\n  ret.variance =\n  function variance () {\n    return v\n  }\n\n  ret.deviation =\n  function deviation () {\n    return d\n  }\n\n  ret.forecast =\n  function forecast () {\n    return f\n  }\n\n  return ret\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:upgrader'), {\n  error: debug('libp2p:upgrader:err')\n})\nconst errCode = require('err-code')\n// @ts-ignore multistream-select does not export types\nconst Multistream = require('multistream-select')\nconst { Connection } = require('libp2p-interfaces/src/connection')\nconst PeerId = require('peer-id')\nconst { pipe } = require('it-pipe')\n// @ts-ignore mutable-proxy does not export types\nconst mutableProxy = require('mutable-proxy')\n\nconst { codes } = require('./errors')\n\n/**\n * @typedef {import('libp2p-interfaces/src/transport/types').MultiaddrConnection} MultiaddrConnection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxerFactory} MuxerFactory\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').Muxer} Muxer\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('libp2p-interfaces/src/crypto/types').Crypto} Crypto\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @typedef CryptoResult\n * @property {MultiaddrConnection} conn A duplex iterable\n * @property {PeerId} remotePeer\n * @property {string} protocol\n */\n\nclass Upgrader {\n  /**\n   * @param {object} options\n   * @param {PeerId} options.localPeer\n   * @param {import('./metrics')} [options.metrics]\n   * @param {Map<string, Crypto>} [options.cryptos]\n   * @param {Map<string, MuxerFactory>} [options.muxers]\n   * @param {(connection: Connection) => void} options.onConnection - Called when a connection is upgraded\n   * @param {(connection: Connection) => void} options.onConnectionEnd\n   */\n  constructor ({\n    localPeer,\n    metrics,\n    cryptos = new Map(),\n    muxers = new Map(),\n    onConnectionEnd = () => {},\n    onConnection = () => {}\n  }) {\n    this.localPeer = localPeer\n    this.metrics = metrics\n    this.cryptos = cryptos\n    this.muxers = muxers\n    /** @type {import(\"./pnet\") | null} */\n    this.protector = null\n    this.protocols = new Map()\n    this.onConnection = onConnection\n    this.onConnectionEnd = onConnectionEnd\n  }\n\n  /**\n   * Upgrades an inbound connection\n   *\n   * @async\n   * @param {MultiaddrConnection} maConn\n   * @returns {Promise<Connection>}\n   */\n  async upgradeInbound (maConn) {\n    let encryptedConn\n    let remotePeer\n    let upgradedConn\n    let Muxer\n    let cryptoProtocol\n    let setPeer\n    let proxyPeer\n\n    if (this.metrics) {\n      ({ setTarget: setPeer, proxy: proxyPeer } = mutableProxy())\n      const idString = (Math.random() * 1e9).toString(36) + Date.now()\n      setPeer({ toB58String: () => idString })\n      maConn = this.metrics.trackStream({ stream: maConn, remotePeer: proxyPeer })\n    }\n\n    log('Starting the inbound connection upgrade')\n\n    // Protect\n    let protectedConn = maConn\n    if (this.protector) {\n      protectedConn = await this.protector.protect(maConn)\n    }\n\n    try {\n      // Encrypt the connection\n      ({\n        conn: encryptedConn,\n        remotePeer,\n        protocol: cryptoProtocol\n      } = await this._encryptInbound(this.localPeer, protectedConn, this.cryptos))\n\n      // Multiplex the connection\n      if (this.muxers.size) {\n        ({ stream: upgradedConn, Muxer } = await this._multiplexInbound(encryptedConn, this.muxers))\n      } else {\n        upgradedConn = encryptedConn\n      }\n    } catch (err) {\n      log.error('Failed to upgrade inbound connection', err)\n      await maConn.close(err)\n      throw err\n    }\n\n    if (this.metrics) {\n      this.metrics.updatePlaceholder(proxyPeer, remotePeer)\n      setPeer(remotePeer)\n    }\n\n    log('Successfully upgraded inbound connection')\n\n    return this._createConnection({\n      cryptoProtocol,\n      direction: 'inbound',\n      maConn,\n      upgradedConn,\n      Muxer,\n      remotePeer\n    })\n  }\n\n  /**\n   * Upgrades an outbound connection\n   *\n   * @async\n   * @param {MultiaddrConnection} maConn\n   * @returns {Promise<Connection>}\n   */\n  async upgradeOutbound (maConn) {\n    const remotePeerId = PeerId.createFromB58String(maConn.remoteAddr.getPeerId())\n\n    let encryptedConn\n    let remotePeer\n    let upgradedConn\n    let cryptoProtocol\n    let Muxer\n    let setPeer\n    let proxyPeer\n\n    if (this.metrics) {\n      ({ setTarget: setPeer, proxy: proxyPeer } = mutableProxy())\n      const idString = (Math.random() * 1e9).toString(36) + Date.now()\n      setPeer({ toB58String: () => idString })\n      maConn = this.metrics.trackStream({ stream: maConn, remotePeer: proxyPeer })\n    }\n\n    log('Starting the outbound connection upgrade')\n\n    // Protect\n    let protectedConn = maConn\n    if (this.protector) {\n      protectedConn = await this.protector.protect(maConn)\n    }\n\n    try {\n      // Encrypt the connection\n      ({\n        conn: encryptedConn,\n        remotePeer,\n        protocol: cryptoProtocol\n      } = await this._encryptOutbound(this.localPeer, protectedConn, remotePeerId, this.cryptos))\n\n      // Multiplex the connection\n      if (this.muxers.size) {\n        ({ stream: upgradedConn, Muxer } = await this._multiplexOutbound(encryptedConn, this.muxers))\n      } else {\n        upgradedConn = encryptedConn\n      }\n    } catch (err) {\n      log.error('Failed to upgrade outbound connection', err)\n      await maConn.close(err)\n      throw err\n    }\n\n    if (this.metrics) {\n      this.metrics.updatePlaceholder(proxyPeer, remotePeer)\n      setPeer(remotePeer)\n    }\n\n    log('Successfully upgraded outbound connection')\n\n    return this._createConnection({\n      cryptoProtocol,\n      direction: 'outbound',\n      maConn,\n      upgradedConn,\n      Muxer,\n      remotePeer\n    })\n  }\n\n  /**\n   * A convenience method for generating a new `Connection`\n   *\n   * @private\n   * @param {object} options\n   * @param {string} options.cryptoProtocol - The crypto protocol that was negotiated\n   * @param {'inbound' | 'outbound'} options.direction - One of ['inbound', 'outbound']\n   * @param {MultiaddrConnection} options.maConn - The transport layer connection\n   * @param {MuxedStream | MultiaddrConnection} options.upgradedConn - A duplex connection returned from multiplexer and/or crypto selection\n   * @param {MuxerFactory} [options.Muxer] - The muxer to be used for muxing\n   * @param {PeerId} options.remotePeer - The peer the connection is with\n   * @returns {Connection}\n   */\n  _createConnection ({\n    cryptoProtocol,\n    direction,\n    maConn,\n    upgradedConn,\n    Muxer,\n    remotePeer\n  }) {\n    /** @type {import(\"libp2p-interfaces/src/stream-muxer/types\").Muxer} */\n    let muxer\n    let newStream\n    /** @type {Connection} */\n    let connection // eslint-disable-line prefer-const\n\n    if (Muxer) {\n      // Create the muxer\n      muxer = new Muxer({\n        // Run anytime a remote stream is created\n        onStream: async muxedStream => {\n          if (!connection) return\n          const mss = new Multistream.Listener(muxedStream)\n          try {\n            const { stream, protocol } = await mss.handle(Array.from(this.protocols.keys()))\n            log('%s: incoming stream opened on %s', direction, protocol)\n            if (this.metrics) this.metrics.trackStream({ stream, remotePeer, protocol })\n            connection.addStream(muxedStream, { protocol })\n            this._onStream({ connection, stream: { ...muxedStream, ...stream }, protocol })\n          } catch (err) {\n            log.error(err)\n          }\n        },\n        // Run anytime a stream closes\n        onStreamEnd: muxedStream => {\n          connection.removeStream(muxedStream.id)\n        }\n      })\n\n      newStream = async (/** @type {string | string[]} */ protocols) => {\n        log('%s: starting new stream on %s', direction, protocols)\n        const muxedStream = muxer.newStream()\n        const mss = new Multistream.Dialer(muxedStream)\n        try {\n          const { stream, protocol } = await mss.select(protocols)\n          if (this.metrics) this.metrics.trackStream({ stream, remotePeer, protocol })\n          return { stream: { ...muxedStream, ...stream }, protocol }\n        } catch (err) {\n          log.error('could not create new stream', err)\n          throw errCode(err, codes.ERR_UNSUPPORTED_PROTOCOL)\n        }\n      }\n\n      // Pipe all data through the muxer\n      pipe(upgradedConn, muxer, upgradedConn).catch(log.error)\n    }\n\n    const _timeline = maConn.timeline\n    maConn.timeline = new Proxy(_timeline, {\n      set: (...args) => {\n        if (connection && args[1] === 'close' && args[2] && !_timeline.close) {\n          // Wait for close to finish before notifying of the closure\n          (async () => {\n            try {\n              if (connection.stat.status === 'open') {\n                await connection.close()\n              }\n            } catch (err) {\n              log.error(err)\n            } finally {\n              this.onConnectionEnd(connection)\n            }\n          })()\n        }\n\n        return Reflect.set(...args)\n      }\n    })\n    maConn.timeline.upgraded = Date.now()\n\n    const errConnectionNotMultiplexed = () => {\n      throw errCode(new Error('connection is not multiplexed'), 'ERR_CONNECTION_NOT_MULTIPLEXED')\n    }\n\n    // Create the connection\n    connection = new Connection({\n      localAddr: maConn.localAddr,\n      remoteAddr: maConn.remoteAddr,\n      localPeer: this.localPeer,\n      remotePeer: remotePeer,\n      stat: {\n        direction,\n        // @ts-ignore\n        timeline: maConn.timeline,\n        multiplexer: Muxer && Muxer.multicodec,\n        encryption: cryptoProtocol\n      },\n      newStream: newStream || errConnectionNotMultiplexed,\n      getStreams: () => muxer ? muxer.streams : errConnectionNotMultiplexed(),\n      close: async (/** @type {Error | undefined} */ err) => {\n        await maConn.close(err)\n        // Ensure remaining streams are aborted\n        if (muxer) {\n          muxer.streams.map(stream => stream.abort())\n        }\n      }\n    })\n\n    this.onConnection(connection)\n\n    return connection\n  }\n\n  /**\n   * Routes incoming streams to the correct handler\n   *\n   * @private\n   * @param {object} options\n   * @param {Connection} options.connection - The connection the stream belongs to\n   * @param {MuxedStream} options.stream\n   * @param {string} options.protocol\n   */\n  _onStream ({ connection, stream, protocol }) {\n    const handler = this.protocols.get(protocol)\n    handler({ connection, stream, protocol })\n  }\n\n  /**\n   * Attempts to encrypt the incoming `connection` with the provided `cryptos`.\n   *\n   * @private\n   * @async\n   * @param {PeerId} localPeer - The initiators PeerId\n   * @param {*} connection\n   * @param {Map<string, Crypto>} cryptos\n   * @returns {Promise<CryptoResult>} An encrypted connection, remote peer `PeerId` and the protocol of the `Crypto` used\n   */\n  async _encryptInbound (localPeer, connection, cryptos) {\n    const mss = new Multistream.Listener(connection)\n    const protocols = Array.from(cryptos.keys())\n    log('handling inbound crypto protocol selection', protocols)\n\n    try {\n      const { stream, protocol } = await mss.handle(protocols)\n      const crypto = cryptos.get(protocol)\n      log('encrypting inbound connection...')\n\n      if (!crypto) {\n        throw new Error(`no crypto module found for ${protocol}`)\n      }\n\n      return {\n        ...await crypto.secureInbound(localPeer, stream),\n        protocol\n      }\n    } catch (err) {\n      throw errCode(err, codes.ERR_ENCRYPTION_FAILED)\n    }\n  }\n\n  /**\n   * Attempts to encrypt the given `connection` with the provided `cryptos`.\n   * The first `Crypto` module to succeed will be used\n   *\n   * @private\n   * @async\n   * @param {PeerId} localPeer - The initiators PeerId\n   * @param {MultiaddrConnection} connection\n   * @param {PeerId} remotePeerId\n   * @param {Map<string, Crypto>} cryptos\n   * @returns {Promise<CryptoResult>} An encrypted connection, remote peer `PeerId` and the protocol of the `Crypto` used\n   */\n  async _encryptOutbound (localPeer, connection, remotePeerId, cryptos) {\n    const mss = new Multistream.Dialer(connection)\n    const protocols = Array.from(cryptos.keys())\n    log('selecting outbound crypto protocol', protocols)\n\n    try {\n      const { stream, protocol } = await mss.select(protocols)\n      const crypto = cryptos.get(protocol)\n      log('encrypting outbound connection to %j', remotePeerId)\n\n      if (!crypto) {\n        throw new Error(`no crypto module found for ${protocol}`)\n      }\n\n      return {\n        ...await crypto.secureOutbound(localPeer, stream, remotePeerId),\n        protocol\n      }\n    } catch (err) {\n      throw errCode(err, codes.ERR_ENCRYPTION_FAILED)\n    }\n  }\n\n  /**\n   * Selects one of the given muxers via multistream-select. That\n   * muxer will be used for all future streams on the connection.\n   *\n   * @private\n   * @async\n   * @param {MultiaddrConnection} connection - A basic duplex connection to multiplex\n   * @param {Map<string, MuxerFactory>} muxers - The muxers to attempt multiplexing with\n   * @returns {Promise<{ stream: MuxedStream, Muxer?: MuxerFactory}>} A muxed connection\n   */\n  async _multiplexOutbound (connection, muxers) {\n    const dialer = new Multistream.Dialer(connection)\n    const protocols = Array.from(muxers.keys())\n    log('outbound selecting muxer %s', protocols)\n    try {\n      const { stream, protocol } = await dialer.select(protocols)\n      log('%s selected as muxer protocol', protocol)\n      const Muxer = muxers.get(protocol)\n      return { stream, Muxer }\n    } catch (err) {\n      throw errCode(err, codes.ERR_MUXER_UNAVAILABLE)\n    }\n  }\n\n  /**\n   * Registers support for one of the given muxers via multistream-select. The\n   * selected muxer will be used for all future streams on the connection.\n   *\n   * @private\n   * @async\n   * @param {MultiaddrConnection} connection - A basic duplex connection to multiplex\n   * @param {Map<string, MuxerFactory>} muxers - The muxers to attempt multiplexing with\n   * @returns {Promise<{ stream: MuxedStream, Muxer?: MuxerFactory}>} A muxed connection\n   */\n  async _multiplexInbound (connection, muxers) {\n    const listener = new Multistream.Listener(connection)\n    const protocols = Array.from(muxers.keys())\n    log('inbound handling muxers %s', protocols)\n    try {\n      const { stream, protocol } = await listener.handle(protocols)\n      const Muxer = muxers.get(protocol)\n      return { stream, Muxer }\n    } catch (err) {\n      throw errCode(err, codes.ERR_MUXER_UNAVAILABLE)\n    }\n  }\n}\n\nmodule.exports = Upgrader\n","'use strict'\n\nconst select = require('./select')\nconst handle = require('./handle')\nconst ls = require('./ls')\nconst { PROTOCOL_ID } = require('./constants')\n\nexports.PROTOCOL_ID = PROTOCOL_ID\n\nclass MultistreamSelect {\n  constructor (stream) {\n    this._stream = stream\n    this._shaken = false\n  }\n\n  // Perform the multistream-select handshake\n  async _handshake () {\n    if (this._shaken) return\n    const { stream } = await select(this._stream, PROTOCOL_ID)\n    this._stream = stream\n    this._shaken = true\n  }\n}\n\nclass Dialer extends MultistreamSelect {\n  select (protocols) {\n    return select(this._stream, protocols, this._shaken ? null : PROTOCOL_ID)\n  }\n\n  async ls () {\n    await this._handshake()\n    const { stream, protocols } = await ls(this._stream)\n    this._stream = stream\n    return protocols\n  }\n}\n\nexports.Dialer = Dialer\n\nclass Listener extends MultistreamSelect {\n  handle (protocols) {\n    return handle(this._stream, protocols)\n  }\n}\n\nexports.Listener = Listener\n","'use strict'\n\nconst log = require('debug')('mss:select')\nconst errCode = require('err-code')\nconst multistream = require('./multistream')\nconst handshake = require('it-handshake')\n\nmodule.exports = async (stream, protocols, protocolId) => {\n  protocols = Array.isArray(protocols) ? [...protocols] : [protocols]\n  const { reader, writer, rest, stream: shakeStream } = handshake(stream)\n\n  const protocol = protocols.shift()\n  if (protocolId) {\n    log('select: write [\"%s\", \"%s\"]', protocolId, protocol)\n    multistream.writeAll(writer, [protocolId, protocol])\n  } else {\n    log('select: write \"%s\"', protocol)\n    multistream.write(writer, protocol)\n  }\n\n  let response = (await multistream.read(reader)).toString()\n  log('select: read \"%s\"', response)\n\n  // Read the protocol response if we got the protocolId in return\n  if (response === protocolId) {\n    response = (await multistream.read(reader)).toString()\n    log('select: read \"%s\"', response)\n  }\n\n  // We're done\n  if (response === protocol) {\n    rest()\n    return { stream: shakeStream, protocol }\n  }\n\n  // We haven't gotten a valid ack, try the other protocols\n  for (const protocol of protocols) {\n    log('select: write \"%s\"', protocol)\n    multistream.write(writer, protocol)\n    const response = (await multistream.read(reader)).toString()\n    log('select: read \"%s\" for \"%s\"', response, protocol)\n\n    if (response === protocol) {\n      rest() // End our writer so others can start writing to stream\n      return { stream: shakeStream, protocol }\n    }\n  }\n\n  rest()\n  throw errCode(new Error('protocol selection failed'), 'ERR_UNSUPPORTED_PROTOCOL')\n}\n","'use strict'\n\nconst BufferList = require('bl/BufferList')\nconst lp = require('it-length-prefixed')\nconst pipe = require('it-pipe')\nconst errCode = require('err-code')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst first = require('it-first')\n\nconst NewLine = uint8ArrayFromString('\\n')\n\nexports.encode = buffer => lp.encode.single(new BufferList([buffer, NewLine]))\n\n// `write` encodes and writes a single buffer\nexports.write = (writer, buffer) => writer.push(exports.encode(buffer))\n\n// `writeAll` behaves like `write`, except it encodes an array of items as a single write\nexports.writeAll = (writer, buffers) => {\n  writer.push(buffers.reduce((bl, buffer) => bl.append(exports.encode(buffer)), new BufferList()))\n}\n\nexports.read = async reader => {\n  let byteLength = 1 // Read single byte chunks until the length is known\n  const varByteSource = { // No return impl - we want the reader to remain readable\n    [Symbol.asyncIterator] () { return this },\n    next: () => reader.next(byteLength)\n  }\n\n  // Once the length has been parsed, read chunk for that length\n  const onLength = l => { byteLength = l }\n  const buf = await pipe(varByteSource, lp.decode({ onLength }), first)\n\n  if (buf.get(buf.length - 1) !== NewLine[0]) {\n    throw errCode(new Error('missing newline'), 'ERR_INVALID_MULTISTREAM_SELECT_MESSAGE')\n  }\n\n  return buf.shallowSlice(0, -1) // Remove newline\n}\n","'use strict'\n\nconst log = require('debug')('mss:handle')\nconst BufferList = require('bl/BufferList')\nconst multistream = require('./multistream')\nconst handshake = require('it-handshake')\nconst { PROTOCOL_ID } = require('./constants')\n\nmodule.exports = async (stream, protocols) => {\n  protocols = Array.isArray(protocols) ? protocols : [protocols]\n  const { writer, reader, rest, stream: shakeStream } = handshake(stream)\n\n  while (true) {\n    const protocol = (await multistream.read(reader)).toString()\n    log('read \"%s\"', protocol)\n\n    if (protocol === PROTOCOL_ID) {\n      log('respond with \"%s\" for \"%s\"', PROTOCOL_ID, protocol)\n      multistream.write(writer, PROTOCOL_ID)\n      continue\n    }\n\n    if (protocols.includes(protocol)) {\n      multistream.write(writer, protocol)\n      log('respond with \"%s\" for \"%s\"', protocol, protocol)\n      rest()\n      return { stream: shakeStream, protocol }\n    }\n\n    if (protocol === 'ls') {\n      // <varint-msg-len><varint-proto-name-len><proto-name>\\n<varint-proto-name-len><proto-name>\\n\\n\n      multistream.write(writer, new BufferList(\n        protocols.map(p => multistream.encode(p))\n      ))\n      log('respond with \"%s\" for %s', protocols, protocol)\n      continue\n    }\n\n    multistream.write(writer, 'na')\n    log('respond with \"na\" for \"%s\"', protocol)\n  }\n}\n","'use strict'\n\nexports.PROTOCOL_ID = '/multistream/1.0.0'\n","'use strict'\n\nconst Reader = require('it-reader')\nconst log = require('debug')('it-multistream-select:ls')\nconst multistream = require('./multistream')\nconst handshake = require('it-handshake')\nconst lp = require('it-length-prefixed')\nconst pipe = require('it-pipe')\n\nmodule.exports = async stream => {\n  const { reader, writer, rest, stream: shakeStream } = handshake(stream)\n\n  log('write \"ls\"')\n  multistream.write(writer, 'ls')\n  rest()\n\n  // Next message from remote will be (e.g. for 2 protocols):\n  // <varint-msg-len><varint-proto-name-len><proto-name>\\n<varint-proto-name-len><proto-name>\\n\n  const res = await multistream.read(reader)\n\n  // After reading response we have:\n  // <varint-proto-name-len><proto-name>\\n<varint-proto-name-len><proto-name>\\n\n  const protocolsReader = Reader([res])\n  const protocols = []\n\n  // Decode each of the protocols from the reader\n  await pipe(\n    protocolsReader,\n    lp.decode(),\n    async source => {\n      for await (const protocol of source) {\n        // Remove the newline\n        protocols.push(protocol.shallowSlice(0, -1).toString())\n      }\n    }\n  )\n\n  return { stream: shakeStream, protocols }\n}\n","'use strict'\n\nexports.Connection = require('./connection')\n","'use strict'\n\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\nconst errCode = require('err-code')\nconst { OPEN, CLOSING, CLOSED } = require('./status')\n\nconst connectionSymbol = Symbol.for('@libp2p/interface-connection/connection')\n\n/**\n * @typedef {import('../stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('./status').Status} Status\n */\n\n/**\n * @typedef {Object} Timeline\n * @property {number} open - connection opening timestamp.\n * @property {number} [upgraded] - connection upgraded timestamp.\n * @property {number} [close]\n *\n * @typedef {Object} ConectionStat\n * @property {'inbound' | 'outbound'} direction - connection establishment direction\n * @property {Timeline} timeline - connection relevant events timestamp.\n * @property {string} [multiplexer] - connection multiplexing identifier.\n * @property {string} [encryption] - connection encryption method identifier.\n *\n * @typedef {Object} ConnectionOptions\n * @property {Multiaddr} [localAddr] - local multiaddr of the connection if known.\n * @property {Multiaddr} remoteAddr - remote multiaddr of the connection.\n * @property {PeerId} localPeer - local peer-id.\n * @property {PeerId} remotePeer - remote peer-id.\n * @property {(protocols: string|string[]) => Promise<{stream: MuxedStream, protocol: string}>} newStream - new stream muxer function.\n * @property {() => Promise<void>} close - close raw connection function.\n * @property {() => MuxedStream[]} getStreams - get streams from muxer function.\n * @property {ConectionStat} stat - metadata of the connection.\n *\n * @typedef {Object} StreamData\n * @property {string} protocol - the protocol used by the stream\n * @property {Object} [metadata] - metadata of the stream\n */\n\n/**\n * An implementation of the js-libp2p connection.\n * Any libp2p transport should use an upgrader to return this connection.\n */\nclass Connection {\n  /**\n   * An implementation of the js-libp2p connection.\n   * Any libp2p transport should use an upgrader to return this connection.\n   *\n   * @class\n   * @param {ConnectionOptions} options\n   */\n  constructor ({ localAddr, remoteAddr, localPeer, remotePeer, newStream, close, getStreams, stat }) {\n    validateArgs(localAddr, localPeer, remotePeer, newStream, close, getStreams, stat)\n\n    /**\n     * Connection identifier.\n     */\n    this.id = (parseInt(String(Math.random() * 1e9))).toString(36) + Date.now()\n\n    /**\n     * Observed multiaddr of the local peer\n     */\n    this.localAddr = localAddr\n\n    /**\n     * Observed multiaddr of the remote peer\n     */\n    this.remoteAddr = remoteAddr\n\n    /**\n     * Local peer id.\n     */\n    this.localPeer = localPeer\n\n    /**\n     * Remote peer id.\n     */\n    this.remotePeer = remotePeer\n\n    /**\n     * Connection metadata.\n     *\n     * @type {ConectionStat & {status: Status}}\n     */\n    this._stat = {\n      ...stat,\n      status: OPEN\n    }\n\n    /**\n     * Reference to the new stream function of the multiplexer\n     */\n    this._newStream = newStream\n\n    /**\n     * Reference to the close function of the raw connection\n     */\n    this._close = close\n\n    /**\n     * Reference to the getStreams function of the muxer\n     */\n    this._getStreams = getStreams\n\n    /**\n     * Connection streams registry\n     */\n    this.registry = new Map()\n\n    /**\n     * User provided tags\n     *\n     * @type {string[]}\n     */\n    this.tags = []\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Connection'\n  }\n\n  get [connectionSymbol] () {\n    return true\n  }\n\n  /**\n   * Checks if the given value is a `Connection` instance.\n   *\n   * @param {any} other\n   * @returns {other is Connection}\n   */\n  static isConnection (other) {\n    return Boolean(other && other[connectionSymbol])\n  }\n\n  /**\n   * Get connection metadata\n   *\n   * @this {Connection}\n   */\n  get stat () {\n    return this._stat\n  }\n\n  /**\n   * Get all the streams of the muxer.\n   *\n   * @this {Connection}\n   */\n  get streams () {\n    return this._getStreams()\n  }\n\n  /**\n   * Create a new stream from this connection\n   *\n   * @param {string|string[]} protocols - intended protocol for the stream\n   * @returns {Promise<{stream: MuxedStream, protocol: string}>} with muxed+multistream-selected stream and selected protocol\n   */\n  async newStream (protocols) {\n    if (this.stat.status === CLOSING) {\n      throw errCode(new Error('the connection is being closed'), 'ERR_CONNECTION_BEING_CLOSED')\n    }\n\n    if (this.stat.status === CLOSED) {\n      throw errCode(new Error('the connection is closed'), 'ERR_CONNECTION_CLOSED')\n    }\n\n    if (!Array.isArray(protocols)) protocols = [protocols]\n\n    const { stream, protocol } = await this._newStream(protocols)\n\n    this.addStream(stream, { protocol })\n\n    return {\n      stream,\n      protocol\n    }\n  }\n\n  /**\n   * Add a stream when it is opened to the registry.\n   *\n   * @param {MuxedStream} muxedStream - a muxed stream\n   * @param {StreamData} data - the stream data to be registered\n   * @returns {void}\n   */\n  addStream (muxedStream, { protocol, metadata = {} }) {\n    // Add metadata for the stream\n    this.registry.set(muxedStream.id, {\n      protocol,\n      ...metadata\n    })\n  }\n\n  /**\n   * Remove stream registry after it is closed.\n   *\n   * @param {string} id - identifier of the stream\n   */\n  removeStream (id) {\n    this.registry.delete(id)\n  }\n\n  /**\n   * Close the connection.\n   *\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this.stat.status === CLOSED) {\n      return\n    }\n\n    if (this._closing) {\n      return this._closing\n    }\n\n    this.stat.status = CLOSING\n\n    // Close raw connection\n    this._closing = await this._close()\n\n    this._stat.timeline.close = Date.now()\n    this.stat.status = CLOSED\n  }\n}\n\nmodule.exports = Connection\n\n/**\n * @param {Multiaddr|undefined} localAddr\n * @param {PeerId} localPeer\n * @param {PeerId} remotePeer\n * @param {(protocols: string | string[]) => Promise<{ stream: import(\"../stream-muxer/types\").MuxedStream; protocol: string; }>} newStream\n * @param {() => Promise<void>} close\n * @param {() => import(\"../stream-muxer/types\").MuxedStream[]} getStreams\n * @param {{ direction: any; timeline: any; multiplexer?: string | undefined; encryption?: string | undefined; }} stat\n */\nfunction validateArgs (localAddr, localPeer, remotePeer, newStream, close, getStreams, stat) {\n  if (localAddr && !Multiaddr.isMultiaddr(localAddr)) {\n    throw errCode(new Error('localAddr must be an instance of multiaddr'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!PeerId.isPeerId(localPeer)) {\n    throw errCode(new Error('localPeer must be an instance of peer-id'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!PeerId.isPeerId(remotePeer)) {\n    throw errCode(new Error('remotePeer must be an instance of peer-id'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof newStream !== 'function') {\n    throw errCode(new Error('new stream must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof close !== 'function') {\n    throw errCode(new Error('close must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof getStreams !== 'function') {\n    throw errCode(new Error('getStreams must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat) {\n    throw errCode(new Error('connection metadata object must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (stat.direction !== 'inbound' && stat.direction !== 'outbound') {\n    throw errCode(new Error('direction must be \"inbound\" or \"outbound\"'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline) {\n    throw errCode(new Error('connection timeline object must be provided in the stat object'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline.open) {\n    throw errCode(new Error('connection open timestamp must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline.upgraded) {\n    throw errCode(new Error('connection upgraded timestamp must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n}\n","'use strict'\n\nconst STATUS = {\n  OPEN: /** @type {'open'} */('open'),\n  CLOSING: /** @type {'closing'} */('closing'),\n  CLOSED: /** @type {'closed'} */('closed')\n}\nmodule.exports = STATUS\n\n/**\n * @typedef {STATUS[keyof STATUS]} Status\n */\n","'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = function mutableProxyFactory(defaultTarget) {\n  var mutableHandler = void 0;\n  var mutableTarget = void 0;\n\n  function setTarget(target) {\n    if (!(target instanceof Object)) {\n      throw new Error('Target \"' + target + '\" is not an object');\n    }\n    mutableTarget = target;\n  }\n\n  function setHandler(handler) {\n    Object.keys(handler).forEach(function (key) {\n      var value = handler[key];\n\n      if (typeof value !== 'function') {\n        throw new Error('Trap \"' + key + ': ' + value + '\" is not a function');\n      }\n\n      if (!Reflect[key]) {\n        throw new Error('Trap \"' + key + ': ' + value + '\" is not a valid trap');\n      }\n    });\n    mutableHandler = handler;\n  }\n  setTarget(function () {});\n\n  if (defaultTarget) {\n    setTarget(defaultTarget);\n  }\n  setHandler(Reflect);\n\n  // Dynamically forward all the traps to the associated methods on the mutable handler\n  var handler = new Proxy({}, {\n    get: function get(target, property) {\n      return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return mutableHandler[property].apply(null, [mutableTarget].concat(_toConsumableArray(args.slice(1))));\n      };\n    }\n  });\n\n  return {\n    setTarget: setTarget,\n    setHandler: setHandler,\n    getTarget: function getTarget() {\n      return mutableTarget;\n    },\n    getHandler: function getHandler() {\n      return mutableHandler;\n    },\n\n    proxy: new Proxy(mutableTarget, handler)\n  };\n};","'use strict'\n\nconst errcode = require('err-code')\n\nconst EventEmitter = require('events')\nconst PeerId = require('peer-id')\n\nconst AddressBook = require('./address-book')\nconst KeyBook = require('./key-book')\nconst MetadataBook = require('./metadata-book')\nconst ProtoBook = require('./proto-book')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\n\n/**\n * @typedef {import('./address-book').Address} Address\n */\n\n/**\n * @extends {EventEmitter}\n *\n * @fires PeerStore#peer Emitted when a new peer is added.\n * @fires PeerStore#change:protocols Emitted when a known peer supports a different set of protocols.\n * @fires PeerStore#change:multiaddrs Emitted when a known peer has a different set of multiaddrs.\n * @fires PeerStore#change:pubkey Emitted emitted when a peer's public key is known.\n * @fires PeerStore#change:metadata Emitted when the known metadata of a peer change.\n */\nclass PeerStore extends EventEmitter {\n  /**\n   * Peer object\n   *\n   * @typedef {Object} Peer\n   * @property {PeerId} id peer's peer-id instance.\n   * @property {Address[]} addresses peer's addresses containing its multiaddrs and metadata.\n   * @property {string[]} protocols peer's supported protocols.\n   * @property {Map<string, Uint8Array>|undefined} metadata peer's metadata map.\n   */\n\n  /**\n   * Responsible for managing known peers, as well as their addresses, protocols and metadata.\n   *\n   * @param {object} options\n   * @param {PeerId} options.peerId\n   * @class\n   */\n  constructor ({ peerId }) {\n    super()\n\n    this._peerId = peerId\n\n    /**\n     * AddressBook containing a map of peerIdStr to Address.\n     */\n    this.addressBook = new AddressBook(this)\n\n    /**\n     * KeyBook containing a map of peerIdStr to their PeerId with public keys.\n     */\n    this.keyBook = new KeyBook(this)\n\n    /**\n     * MetadataBook containing a map of peerIdStr to their metadata Map.\n     */\n    this.metadataBook = new MetadataBook(this)\n\n    /**\n     * ProtoBook containing a map of peerIdStr to supported protocols.\n     */\n    this.protoBook = new ProtoBook(this)\n  }\n\n  /**\n   * Start the PeerStore.\n   */\n  start () {}\n\n  /**\n   * Stop the PeerStore.\n   */\n  stop () {}\n\n  /**\n   * Get all the stored information of every peer known.\n   *\n   * @returns {Map<string, Peer>}\n   */\n  get peers () {\n    const storedPeers = new Set([\n      ...this.addressBook.data.keys(),\n      ...this.keyBook.data.keys(),\n      ...this.protoBook.data.keys(),\n      ...this.metadataBook.data.keys()\n    ])\n\n    // Remove self peer if present\n    this._peerId && storedPeers.delete(this._peerId.toB58String())\n\n    const peersData = new Map()\n    storedPeers.forEach((idStr) => {\n      peersData.set(idStr, this.get(PeerId.createFromCID(idStr)))\n    })\n\n    return peersData\n  }\n\n  /**\n   * Delete the information of the given peer in every book.\n   *\n   * @param {PeerId} peerId\n   * @returns {boolean} true if found and removed\n   */\n  delete (peerId) {\n    const addressesDeleted = this.addressBook.delete(peerId)\n    const keyDeleted = this.keyBook.delete(peerId)\n    const protocolsDeleted = this.protoBook.delete(peerId)\n    const metadataDeleted = this.metadataBook.delete(peerId)\n\n    return addressesDeleted || keyDeleted || protocolsDeleted || metadataDeleted\n  }\n\n  /**\n   * Get the stored information of a given peer.\n   *\n   * @param {PeerId} peerId\n   * @returns {Peer|undefined}\n   */\n  get (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const id = this.keyBook.data.get(peerId.toB58String())\n    const addresses = this.addressBook.get(peerId)\n    const metadata = this.metadataBook.get(peerId)\n    const protocols = this.protoBook.get(peerId)\n\n    if (!id && !addresses && !metadata && !protocols) {\n      return undefined\n    }\n\n    return {\n      id: id || peerId,\n      addresses: addresses || [],\n      protocols: protocols || [],\n      metadata: metadata\n    }\n  }\n}\n\nmodule.exports = PeerStore\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:peer-store:address-book'), {\n  error: debug('libp2p:peer-store:address-book:err')\n})\nconst errcode = require('err-code')\n\nconst { Multiaddr } = require('multiaddr')\nconst PeerId = require('peer-id')\n\nconst Book = require('./book')\nconst PeerRecord = require('../record/peer-record')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\nconst Envelope = require('../record/envelope')\n\n/**\n * @typedef {import('./')} PeerStore\n */\n\n/**\n * @typedef {Object} Address\n * @property {Multiaddr} multiaddr peer multiaddr.\n * @property {boolean} isCertified obtained from a signed peer record.\n *\n * @typedef {Object} CertifiedRecord\n * @property {Uint8Array} raw raw envelope.\n * @property {number} seqNumber seq counter.\n *\n * @typedef {Object} Entry\n * @property {Address[]} addresses peer Addresses.\n * @property {CertifiedRecord} record certified peer record.\n */\n\n/**\n * @extends {Book}\n */\nclass AddressBook extends Book {\n  /**\n   * The AddressBook is responsible for keeping the known multiaddrs of a peer.\n   *\n   * @class\n   * @param {PeerStore} peerStore\n   */\n  constructor (peerStore) {\n    /**\n     * PeerStore Event emitter, used by the AddressBook to emit:\n     * \"peer\" - emitted when a peer is discovered by the node.\n     * \"change:multiaddrs\" - emitted when the known multiaddrs of a peer change.\n     */\n    super({\n      peerStore,\n      eventName: 'change:multiaddrs',\n      eventProperty: 'multiaddrs',\n      eventTransformer: (data) => {\n        if (!data.addresses) {\n          return []\n        }\n        return data.addresses.map((/** @type {Address} */ address) => address.multiaddr)\n      }\n    })\n\n    /**\n     * Map known peers to their known Address Entries.\n     *\n     * @type {Map<string, Entry>}\n     */\n    this.data = new Map()\n  }\n\n  /**\n   * ConsumePeerRecord adds addresses from a signed peer record contained in a record envelope.\n   * This will return a boolean that indicates if the record was successfully processed and added\n   * into the AddressBook.\n   *\n   * @param {Envelope} envelope\n   * @returns {boolean}\n   */\n  consumePeerRecord (envelope) {\n    let peerRecord\n    try {\n      peerRecord = PeerRecord.createFromProtobuf(envelope.payload)\n    } catch (err) {\n      log.error('invalid peer record received')\n      return false\n    }\n\n    // Verify peerId\n    if (!peerRecord.peerId.equals(envelope.peerId)) {\n      log('signing key does not match PeerId in the PeerRecord')\n      return false\n    }\n\n    // ensure the record has multiaddrs\n    if (!peerRecord.multiaddrs || !peerRecord.multiaddrs.length) {\n      return false\n    }\n\n    const peerId = peerRecord.peerId\n    const id = peerId.toB58String()\n    const entry = this.data.get(id) || { record: undefined }\n    const storedRecord = entry.record\n\n    // ensure seq is greater than, or equal to, the last received\n    if (storedRecord && storedRecord.seqNumber >= peerRecord.seqNumber) {\n      return false\n    }\n\n    const addresses = this._toAddresses(peerRecord.multiaddrs, true)\n\n    // Replace unsigned addresses by the new ones from the record\n    // TODO: Once we have ttls for the addresses, we should merge these in.\n    this._setData(peerId, {\n      addresses,\n      record: {\n        raw: envelope.marshal(),\n        seqNumber: peerRecord.seqNumber\n      }\n    })\n    log(`stored provided peer record for ${id}`)\n\n    return true\n  }\n\n  /**\n   * Get the raw Envelope for a peer. Returns\n   * undefined if no Envelope is found.\n   *\n   * @param {PeerId} peerId\n   * @returns {Uint8Array|undefined}\n   */\n  getRawEnvelope (peerId) {\n    const entry = this.data.get(peerId.toB58String())\n\n    if (!entry || !entry.record || !entry.record.raw) {\n      return undefined\n    }\n\n    return entry.record.raw\n  }\n\n  /**\n   * Get an Envelope containing a PeerRecord for the given peer.\n   * Returns undefined if no record exists.\n   *\n   * @param {PeerId} peerId\n   * @returns {Promise<Envelope|void>|undefined}\n   */\n  getPeerRecord (peerId) {\n    const raw = this.getRawEnvelope(peerId)\n\n    if (!raw) {\n      return undefined\n    }\n\n    return Envelope.createFromProtobuf(raw)\n  }\n\n  /**\n   * Set known multiaddrs of a provided peer.\n   * This will replace previously stored multiaddrs, if available.\n   * Replacing stored multiaddrs might result in losing obtained certified addresses.\n   * If you are not sure, it's recommended to use `add` instead.\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {AddressBook}\n   */\n  set (peerId, multiaddrs) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const addresses = this._toAddresses(multiaddrs)\n\n    // Not replace multiaddrs\n    if (!addresses.length) {\n      return this\n    }\n\n    const id = peerId.toB58String()\n    const entry = this.data.get(id)\n\n    // Already knows the peer\n    if (entry && entry.addresses && entry.addresses.length === addresses.length) {\n      const intersection = entry.addresses.filter((addr) => addresses.some((newAddr) => addr.multiaddr.equals(newAddr.multiaddr)))\n\n      // Are new addresses equal to the old ones?\n      // If yes, no changes needed!\n      if (intersection.length === entry.addresses.length) {\n        log(`the addresses provided to store are equal to the already stored for ${id}`)\n        return this\n      }\n    }\n\n    this._setData(peerId, {\n      addresses,\n      record: entry && entry.record\n    })\n    log(`stored provided multiaddrs for ${id}`)\n\n    // Notify the existance of a new peer\n    if (!entry) {\n      this._ps.emit('peer', peerId)\n    }\n\n    return this\n  }\n\n  /**\n   * Add known addresses of a provided peer.\n   * If the peer is not known, it is set with the given addresses.\n   *\n   * @param {PeerId} peerId\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {AddressBook}\n   */\n  add (peerId, multiaddrs) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const addresses = this._toAddresses(multiaddrs)\n    const id = peerId.toB58String()\n\n    const entry = this.data.get(id)\n\n    if (entry && entry.addresses) {\n      // Add recorded uniquely to the new array (Union)\n      entry.addresses.forEach((addr) => {\n        if (!addresses.find(r => r.multiaddr.equals(addr.multiaddr))) {\n          addresses.push(addr)\n        }\n      })\n\n      // If the recorded length is equal to the new after the unique union\n      // The content is the same, no need to update.\n      if (entry.addresses.length === addresses.length) {\n        log(`the addresses provided to store are already stored for ${id}`)\n        return this\n      }\n    }\n\n    this._setData(peerId, {\n      addresses,\n      record: entry && entry.record\n    })\n\n    log(`added provided multiaddrs for ${id}`)\n\n    // Notify the existance of a new peer\n    if (!(entry && entry.addresses)) {\n      this._ps.emit('peer', peerId)\n    }\n\n    return this\n  }\n\n  /**\n   * Get the known data of a provided peer.\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @returns {Address[]|undefined}\n   */\n  get (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const entry = this.data.get(peerId.toB58String())\n\n    return entry && entry.addresses ? [...entry.addresses] : undefined\n  }\n\n  /**\n   * Transforms received multiaddrs into Address.\n   *\n   * @private\n   * @param {Multiaddr[]} multiaddrs\n   * @param {boolean} [isCertified]\n   * @returns {Address[]}\n   */\n  _toAddresses (multiaddrs, isCertified = false) {\n    if (!multiaddrs) {\n      log.error('multiaddrs must be provided to store data')\n      throw errcode(new Error('multiaddrs must be provided'), ERR_INVALID_PARAMETERS)\n    }\n\n    // create Address for each address\n    /** @type {Address[]} */\n    const addresses = []\n    multiaddrs.forEach((addr) => {\n      if (!Multiaddr.isMultiaddr(addr)) {\n        log.error(`multiaddr ${addr} must be an instance of multiaddr`)\n        throw errcode(new Error(`multiaddr ${addr} must be an instance of multiaddr`), ERR_INVALID_PARAMETERS)\n      }\n\n      addresses.push({\n        multiaddr: addr,\n        isCertified\n      })\n    })\n\n    return addresses\n  }\n\n  /**\n   * Get the known multiaddrs for a given peer. All returned multiaddrs\n   * will include the encapsulated `PeerId` of the peer.\n   * Returns `undefined` if there are no known multiaddrs for the given peer.\n   *\n   * @param {PeerId} peerId\n   * @param {(addresses: Address[]) => Address[]} [addressSorter]\n   * @returns {Multiaddr[]|undefined}\n   */\n  getMultiaddrsForPeer (peerId, addressSorter = (ms) => ms) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const entry = this.data.get(peerId.toB58String())\n    if (!entry || !entry.addresses) {\n      return undefined\n    }\n\n    return addressSorter(\n      entry.addresses || []\n    ).map((address) => {\n      const multiaddr = address.multiaddr\n\n      const idString = multiaddr.getPeerId()\n      if (idString && idString === peerId.toB58String()) return multiaddr\n\n      return multiaddr.encapsulate(`/p2p/${peerId.toB58String()}`)\n    })\n  }\n}\n\nmodule.exports = AddressBook\n","'use strict'\n\nconst errcode = require('err-code')\nconst PeerId = require('peer-id')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\n\n/**\n * @param {any} data\n */\nconst passthrough = data => data\n\n/**\n * @typedef {import('./')} PeerStore\n */\n\nclass Book {\n  /**\n   * The Book is the skeleton for the PeerStore books.\n   *\n   * @class\n   * @param {Object} properties\n   * @param {PeerStore} properties.peerStore - PeerStore instance.\n   * @param {string} properties.eventName - Name of the event to emit by the PeerStore.\n   * @param {string} properties.eventProperty - Name of the property to emit by the PeerStore.\n   * @param {(data: any) => any[]} [properties.eventTransformer] - Transformer function of the provided data for being emitted.\n   */\n  constructor ({ peerStore, eventName, eventProperty, eventTransformer = passthrough }) {\n    this._ps = peerStore\n    this.eventName = eventName\n    this.eventProperty = eventProperty\n    this.eventTransformer = eventTransformer\n\n    /**\n     * Map known peers to their data.\n     *\n     * @type {Map<string, any[]|any>}\n     */\n    this.data = new Map()\n  }\n\n  /**\n   * Set known data of a provided peer.\n   *\n   * @param {PeerId} peerId\n   * @param {any[]|any} data\n   */\n  set (peerId, data) {\n    throw errcode(new Error('set must be implemented by the subclass'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Set data into the datastructure, persistence and emit it using the provided transformers.\n   *\n   * @protected\n   * @param {PeerId} peerId - peerId of the data to store\n   * @param {any} data - data to store.\n   * @param {Object} [options] - storing options.\n   * @param {boolean} [options.emit = true] - emit the provided data.\n   * @returns {void}\n   */\n  _setData (peerId, data, { emit = true } = {}) {\n    const b58key = peerId.toB58String()\n\n    // Store data in memory\n    this.data.set(b58key, data)\n\n    // Emit event\n    emit && this._emit(peerId, data)\n  }\n\n  /**\n   * Emit data.\n   *\n   * @protected\n   * @param {PeerId} peerId\n   * @param {any} [data]\n   */\n  _emit (peerId, data) {\n    this._ps.emit(this.eventName, {\n      peerId,\n      [this.eventProperty]: this.eventTransformer(data)\n    })\n  }\n\n  /**\n   * Get the known data of a provided peer.\n   * Returns `undefined` if there is no available data for the given peer.\n   *\n   * @param {PeerId} peerId\n   * @returns {any[]|any|undefined}\n   */\n  get (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const rec = this.data.get(peerId.toB58String())\n\n    // @ts-ignore\n    return rec ? [...rec] : undefined\n  }\n\n  /**\n   * Deletes the provided peer from the book.\n   *\n   * @param {PeerId} peerId\n   * @returns {boolean}\n   */\n  delete (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    if (!this.data.delete(peerId.toB58String())) {\n      return false\n    }\n\n    this._emit(peerId, [])\n\n    return true\n  }\n}\n\nmodule.exports = Book\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:peer-store:key-book'), {\n  error: debug('libp2p:peer-store:key-book:err')\n})\nconst errcode = require('err-code')\n\nconst PeerId = require('peer-id')\n\nconst Book = require('./book')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\n\n/**\n * @typedef {import('./')} PeerStore\n * @typedef {import('libp2p-crypto').PublicKey} PublicKey\n */\n\n/**\n * @extends {Book}\n */\nclass KeyBook extends Book {\n  /**\n   * The KeyBook is responsible for keeping the known public keys of a peer.\n   *\n   * @class\n   * @param {PeerStore} peerStore\n   */\n  constructor (peerStore) {\n    super({\n      peerStore,\n      eventName: 'change:pubkey',\n      eventProperty: 'pubkey',\n      eventTransformer: (data) => data.pubKey\n    })\n\n    /**\n     * Map known peers to their known Public Key.\n     *\n     * @type {Map<string, PeerId>}\n     */\n    this.data = new Map()\n  }\n\n  /**\n   * Set the Peer public key.\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @param {PublicKey} publicKey\n   * @returns {KeyBook}\n   */\n  set (peerId, publicKey) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const id = peerId.toB58String()\n    const recPeerId = this.data.get(id)\n\n    // If no record available, and this is valid\n    if (!recPeerId && publicKey) {\n      // This might be unecessary, but we want to store the PeerId\n      // to avoid an async operation when reconstructing the PeerId\n      peerId.pubKey = publicKey\n\n      this._setData(peerId, peerId)\n      log(`stored provided public key for ${id}`)\n    }\n\n    return this\n  }\n\n  /**\n   * Get Public key of the given PeerId, if stored.\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @returns {PublicKey | undefined}\n   */\n  get (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const rec = this.data.get(peerId.toB58String())\n\n    return rec ? rec.pubKey : undefined\n  }\n}\n\nmodule.exports = KeyBook\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:peer-store:proto-book'), {\n  error: debug('libp2p:peer-store:proto-book:err')\n})\nconst errcode = require('err-code')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\nconst PeerId = require('peer-id')\n\nconst Book = require('./book')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\n\n/**\n * @typedef {import('./')} PeerStore\n */\n\n/**\n * @extends {Book}\n *\n * @fires MetadataBook#change:metadata\n */\nclass MetadataBook extends Book {\n  /**\n   * The MetadataBook is responsible for keeping the known supported\n   * protocols of a peer.\n   *\n   * @class\n   * @param {PeerStore} peerStore\n   */\n  constructor (peerStore) {\n    /**\n     * PeerStore Event emitter, used by the MetadataBook to emit:\n     * \"change:metadata\" - emitted when the known metadata of a peer change.\n     */\n    super({\n      peerStore,\n      eventName: 'change:metadata',\n      eventProperty: 'metadata'\n    })\n\n    /**\n     * Map known peers to their known protocols.\n     *\n     * @type {Map<string, Map<string, Uint8Array>>}\n     */\n    this.data = new Map()\n  }\n\n  /**\n   * Set metadata key and value of a provided peer.\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @param {string} key - metadata key\n   * @param {Uint8Array} value - metadata value\n   * @returns {MetadataBook}\n   */\n  // @ts-ignore override with more then the parameters expected in Book\n  set (peerId, key, value) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    if (typeof key !== 'string' || !(value instanceof Uint8Array)) {\n      log.error('valid key and value must be provided to store data')\n      throw errcode(new Error('valid key and value must be provided'), ERR_INVALID_PARAMETERS)\n    }\n\n    this._setValue(peerId, key, value)\n\n    return this\n  }\n\n  /**\n   * Set data into the datastructure\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @param {string} key\n   * @param {Uint8Array} value\n   */\n  _setValue (peerId, key, value, { emit = true } = {}) {\n    const id = peerId.toB58String()\n    const rec = this.data.get(id) || new Map()\n    const recMap = rec.get(key)\n\n    // Already exists and is equal\n    if (recMap && uint8ArrayEquals(value, recMap)) {\n      log(`the metadata provided to store is equal to the already stored for ${id} on ${key}`)\n      return\n    }\n\n    rec.set(key, value)\n    this.data.set(id, rec)\n\n    emit && this._emit(peerId, key)\n  }\n\n  /**\n   * Get the known data of a provided peer.\n   *\n   * @param {PeerId} peerId\n   * @returns {Map<string, Uint8Array>|undefined}\n   */\n  get (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    return this.data.get(peerId.toB58String())\n  }\n\n  /**\n   * Get specific metadata value, if it exists\n   *\n   * @param {PeerId} peerId\n   * @param {string} key\n   * @returns {Uint8Array | undefined}\n   */\n  getValue (peerId, key) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const rec = this.data.get(peerId.toB58String())\n    return rec && rec.get(key)\n  }\n\n  /**\n   * Deletes the provided peer from the book.\n   *\n   * @param {PeerId} peerId\n   * @returns {boolean}\n   */\n  delete (peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    if (!this.data.delete(peerId.toB58String())) {\n      return false\n    }\n\n    this._emit(peerId)\n\n    return true\n  }\n\n  /**\n   * Deletes the provided peer metadata key from the book.\n   *\n   * @param {PeerId} peerId\n   * @param {string} key\n   * @returns {boolean}\n   */\n  deleteValue (peerId, key) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    const rec = this.data.get(peerId.toB58String())\n\n    if (!rec || !rec.delete(key)) {\n      return false\n    }\n\n    this._emit(peerId, key)\n\n    return true\n  }\n}\n\nmodule.exports = MetadataBook\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:peer-store:proto-book'), {\n  error: debug('libp2p:peer-store:proto-book:err')\n})\nconst errcode = require('err-code')\nconst PeerId = require('peer-id')\n\nconst Book = require('./book')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('../errors')\n\n/**\n * @typedef {import('./')} PeerStore\n */\n\n/**\n * @extends {Book}\n *\n * @fires ProtoBook#change:protocols\n */\nclass ProtoBook extends Book {\n  /**\n   * The ProtoBook is responsible for keeping the known supported\n   * protocols of a peer.\n   *\n   * @class\n   * @param {PeerStore} peerStore\n   */\n  constructor (peerStore) {\n    /**\n     * PeerStore Event emitter, used by the ProtoBook to emit:\n     * \"change:protocols\" - emitted when the known protocols of a peer change.\n     */\n    super({\n      peerStore,\n      eventName: 'change:protocols',\n      eventProperty: 'protocols',\n      eventTransformer: (data) => Array.from(data)\n    })\n\n    /**\n     * Map known peers to their known protocols.\n     *\n     * @type {Map<string, Set<string>>}\n     */\n    this.data = new Map()\n  }\n\n  /**\n   * Set known protocols of a provided peer.\n   * If the peer was not known before, it will be added.\n   *\n   * @override\n   * @param {PeerId} peerId\n   * @param {string[]} protocols\n   * @returns {ProtoBook}\n   */\n  set (peerId, protocols) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    if (!protocols) {\n      log.error('protocols must be provided to store data')\n      throw errcode(new Error('protocols must be provided'), ERR_INVALID_PARAMETERS)\n    }\n\n    const id = peerId.toB58String()\n    const recSet = this.data.get(id)\n    const newSet = new Set(protocols)\n\n    /**\n     * @param {Set<string>} a\n     * @param {Set<string>} b\n     */\n    const isSetEqual = (a, b) => a.size === b.size && [...a].every(value => b.has(value))\n\n    // Already knows the peer and the recorded protocols are the same?\n    // If yes, no changes needed!\n    if (recSet && isSetEqual(recSet, newSet)) {\n      log(`the protocols provided to store are equal to the already stored for ${id}`)\n      return this\n    }\n\n    this._setData(peerId, newSet)\n    log(`stored provided protocols for ${id}`)\n\n    return this\n  }\n\n  /**\n   * Adds known protocols of a provided peer.\n   * If the peer was not known before, it will be added.\n   *\n   * @param {PeerId} peerId\n   * @param {string[]} protocols\n   * @returns {ProtoBook}\n   */\n  add (peerId, protocols) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    if (!protocols) {\n      log.error('protocols must be provided to store data')\n      throw errcode(new Error('protocols must be provided'), ERR_INVALID_PARAMETERS)\n    }\n\n    const id = peerId.toB58String()\n    const recSet = this.data.get(id) || new Set()\n    const newSet = new Set([...recSet, ...protocols]) // Set Union\n\n    // Any new protocol added?\n    if (recSet.size === newSet.size) {\n      log(`the protocols provided to store are already stored for ${id}`)\n      return this\n    }\n\n    this._setData(peerId, newSet)\n    log(`added provided protocols for ${id}`)\n\n    return this\n  }\n\n  /**\n   * Removes known protocols of a provided peer.\n   * If the protocols did not exist before, nothing will be done.\n   *\n   * @param {PeerId} peerId\n   * @param {string[]} protocols\n   * @returns {ProtoBook}\n   */\n  remove (peerId, protocols) {\n    if (!PeerId.isPeerId(peerId)) {\n      log.error('peerId must be an instance of peer-id to store data')\n      throw errcode(new Error('peerId must be an instance of peer-id'), ERR_INVALID_PARAMETERS)\n    }\n\n    if (!protocols) {\n      log.error('protocols must be provided to store data')\n      throw errcode(new Error('protocols must be provided'), ERR_INVALID_PARAMETERS)\n    }\n\n    const id = peerId.toB58String()\n    const recSet = this.data.get(id)\n\n    if (recSet) {\n      const newSet = new Set([\n        ...recSet\n      ].filter((p) => !protocols.includes(p)))\n\n      // Any protocol removed?\n      if (recSet.size === newSet.size) {\n        return this\n      }\n\n      this._setData(peerId, newSet)\n      log(`removed provided protocols for ${id}`)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = ProtoBook\n","'use strict'\n\n// Pubsub adapter to keep API with handlers while not removed.\n/**\n * @typedef {import('libp2p-interfaces/src/pubsub').InMessage} InMessage\n * @typedef {import('libp2p-interfaces/src/pubsub')} PubsubRouter\n */\n\n/**\n * @param {import(\"libp2p-interfaces/src/pubsub\")} PubsubRouter\n * @param {import('.')} libp2p\n * @param {{ enabled: boolean; } & import(\".\").PubsubLocalOptions & import(\"libp2p-interfaces/src/pubsub\").PubsubOptions} options\n */\nfunction pubsubAdapter (PubsubRouter, libp2p, options) {\n  // @ts-ignore Pubsub constructor type not defined\n  const pubsub = new PubsubRouter(libp2p, options)\n  pubsub._subscribeAdapter = pubsub.subscribe\n  pubsub._unsubscribeAdapter = pubsub.unsubscribe\n\n  /**\n   * Subscribes to a given topic.\n   *\n   * @override\n   * @param {string} topic\n   * @param {(msg: InMessage) => void} [handler]\n   * @returns {void}\n   */\n  function subscribe (topic, handler) {\n    // Bind provided handler\n    handler && pubsub.on(topic, handler)\n    pubsub._subscribeAdapter(topic)\n  }\n\n  /**\n   * Unsubscribe from the given topic.\n   *\n   * @override\n   * @param {string} topic\n   * @param {(msg: InMessage) => void} [handler]\n   * @returns {void}\n   */\n  function unsubscribe (topic, handler) {\n    if (!handler) {\n      pubsub.removeAllListeners(topic)\n    } else {\n      pubsub.removeListener(topic, handler)\n    }\n\n    if (pubsub.listenerCount(topic) === 0) {\n      pubsub._unsubscribeAdapter(topic)\n    }\n  }\n\n  pubsub.subscribe = subscribe\n  pubsub.unsubscribe = unsubscribe\n\n  return pubsub\n}\n\nmodule.exports = pubsubAdapter\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:persistent-peer-store'), {\n  error: debug('libp2p:persistent-peer-store:err')\n})\nconst { Key } = require('interface-datastore')\nconst { Multiaddr } = require('multiaddr')\nconst PeerId = require('peer-id')\n\nconst PeerStore = require('..')\n\nconst {\n  NAMESPACE_ADDRESS,\n  NAMESPACE_COMMON,\n  NAMESPACE_KEYS,\n  NAMESPACE_METADATA,\n  NAMESPACE_PROTOCOL\n} = require('./consts')\n\nconst { Addresses } = require('./pb/address-book')\nconst { Protocols } = require('./pb/proto-book')\n\n/**\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('../address-book.js').Address} Address\n */\n\n/**\n * @typedef {Object} PersistentPeerStoreProperties\n * @property {PeerId} peerId\n * @property {import('interface-datastore').Datastore} datastore\n *\n * @typedef {Object} PersistentPeerStoreOptions\n * @property {number} [threshold = 5] - Number of dirty peers allowed before commit data.\n */\n\n/**\n * Responsible for managing the persistence of data in the PeerStore.\n */\nclass PersistentPeerStore extends PeerStore {\n  /**\n   * @class\n   * @param {PersistentPeerStoreProperties & PersistentPeerStoreOptions} properties\n   */\n  constructor ({ peerId, datastore, threshold = 5 }) {\n    super({ peerId })\n\n    /**\n     * Backend datastore used to persist data.\n     */\n    this._datastore = datastore\n\n    /**\n     * Peers modified after the latest data persisted.\n     */\n    this._dirtyPeers = new Set()\n\n    /**\n     * Peers metadata changed mapping peer identifers to metadata changed.\n     *\n     * @type {Map<string, Set<string>>}\n     */\n    this._dirtyMetadata = new Map()\n\n    this.threshold = threshold\n    this._addDirtyPeer = this._addDirtyPeer.bind(this)\n  }\n\n  /**\n   * Start Persistent PeerStore.\n   *\n   * @returns {Promise<void>}\n   */\n  async start () {\n    log('PeerStore is starting')\n\n    // Handlers for dirty peers\n    this.on('change:protocols', this._addDirtyPeer)\n    this.on('change:multiaddrs', this._addDirtyPeer)\n    this.on('change:pubkey', this._addDirtyPeerKey)\n    this.on('change:metadata', this._addDirtyPeerMetadata)\n\n    // Load data\n    for await (const entry of this._datastore.query({ prefix: NAMESPACE_COMMON })) {\n      await this._processDatastoreEntry(entry)\n    }\n\n    log('PeerStore started')\n  }\n\n  /**\n   * Stop Persistent PeerStore.\n   *\n   * @returns {Promise<void>}\n   */\n  async stop () {\n    log('PeerStore is stopping')\n    this.removeAllListeners()\n    await this._commitData()\n    log('PeerStore stopped')\n  }\n\n  /**\n   * Add modified peer to the dirty set\n   *\n   * @private\n   * @param {Object} params\n   * @param {PeerId} params.peerId\n   */\n  _addDirtyPeer ({ peerId }) {\n    const peerIdstr = peerId.toB58String()\n\n    log('add dirty peer', peerIdstr)\n    this._dirtyPeers.add(peerIdstr)\n\n    if (this._dirtyPeers.size >= this.threshold) {\n      // Commit current data\n      this._commitData().catch(err => {\n        log.error('error committing data', err)\n      })\n    }\n  }\n\n  /**\n   * Add modified peer key to the dirty set\n   *\n   * @private\n   * @param {Object} params\n   * @param {PeerId} params.peerId\n   */\n  _addDirtyPeerKey ({ peerId }) {\n    // Not add if inline key available\n    if (peerId.hasInlinePublicKey()) {\n      return\n    }\n\n    const peerIdstr = peerId.toB58String()\n\n    log('add dirty peer key', peerIdstr)\n    this._dirtyPeers.add(peerIdstr)\n\n    if (this._dirtyPeers.size >= this.threshold) {\n      // Commit current data\n      this._commitData().catch(err => {\n        log.error('error committing data', err)\n      })\n    }\n  }\n\n  /**\n   * Add modified metadata peer to the set.\n   *\n   * @private\n   * @param {Object} params\n   * @param {PeerId} params.peerId\n   * @param {string} params.metadata\n   */\n  _addDirtyPeerMetadata ({ peerId, metadata }) {\n    const peerIdstr = peerId.toB58String()\n\n    log('add dirty metadata peer', peerIdstr)\n    this._dirtyPeers.add(peerIdstr)\n\n    // Add dirty metadata key\n    const mData = this._dirtyMetadata.get(peerIdstr) || new Set()\n    mData.add(metadata)\n    this._dirtyMetadata.set(peerIdstr, mData)\n\n    if (this._dirtyPeers.size >= this.threshold) {\n      // Commit current data\n      this._commitData().catch(err => {\n        log.error('error committing data', err)\n      })\n    }\n  }\n\n  /**\n   * Add all the peers current data to a datastore batch and commit it.\n   *\n   * @private\n   * @returns {Promise<void>}\n   */\n  async _commitData () {\n    const commitPeers = Array.from(this._dirtyPeers)\n\n    if (!commitPeers.length) {\n      return\n    }\n\n    // Clear Dirty Peers set\n    this._dirtyPeers.clear()\n\n    log('create batch commit')\n    const batch = this._datastore.batch()\n    for (const peerIdStr of commitPeers) {\n      // PeerId\n      const peerId = this.keyBook.data.get(peerIdStr) || PeerId.createFromCID(peerIdStr)\n\n      // Address Book\n      this._batchAddressBook(peerId, batch)\n\n      // Key Book\n      !peerId.hasInlinePublicKey() && this._batchKeyBook(peerId, batch)\n\n      // Metadata Book\n      this._batchMetadataBook(peerId, batch)\n\n      // Proto Book\n      this._batchProtoBook(peerId, batch)\n    }\n\n    await batch.commit()\n    log('batch committed')\n  }\n\n  /**\n   * Add address book data of the peer to the batch.\n   *\n   * @private\n   * @param {PeerId} peerId\n   * @param {Batch} batch\n   */\n  _batchAddressBook (peerId, batch) {\n    const b32key = peerId.toString()\n    const key = new Key(`${NAMESPACE_ADDRESS}${b32key}`)\n\n    const entry = this.addressBook.data.get(peerId.toB58String())\n\n    try {\n      // Deleted from the book\n      if (!entry) {\n        batch.delete(key)\n        return\n      }\n\n      const encodedData = Addresses.encode({\n        addrs: entry.addresses.map((address) => ({\n          multiaddr: address.multiaddr.bytes,\n          isCertified: address.isCertified\n        })),\n        certifiedRecord: entry.record\n          ? {\n              seq: entry.record.seqNumber,\n              raw: entry.record.raw\n            }\n          : undefined\n      }).finish()\n\n      batch.put(key, encodedData)\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Add Key book data of the peer to the batch.\n   *\n   * @private\n   * @param {PeerId} peerId\n   * @param {Batch} batch\n   */\n  _batchKeyBook (peerId, batch) {\n    const b32key = peerId.toString()\n    const key = new Key(`${NAMESPACE_KEYS}${b32key}`)\n\n    try {\n      // Deleted from the book\n      if (!peerId.pubKey) {\n        batch.delete(key)\n        return\n      }\n\n      const encodedData = peerId.marshalPubKey()\n\n      batch.put(key, encodedData)\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Add metadata book data of the peer to the batch.\n   *\n   * @private\n   * @param {PeerId} peerId\n   * @param {Batch} batch\n   */\n  _batchMetadataBook (peerId, batch) {\n    const b32key = peerId.toString()\n    const dirtyMetada = this._dirtyMetadata.get(peerId.toB58String()) || []\n\n    try {\n      dirtyMetada.forEach((/** @type {string} */ dirtyKey) => {\n        const key = new Key(`${NAMESPACE_METADATA}${b32key}/${dirtyKey}`)\n        const dirtyValue = this.metadataBook.getValue(peerId, dirtyKey)\n\n        if (dirtyValue) {\n          batch.put(key, dirtyValue)\n        } else {\n          batch.delete(key)\n        }\n      })\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Add proto book data of the peer to the batch.\n   *\n   * @private\n   * @param {PeerId} peerId\n   * @param {Batch} batch\n   */\n  _batchProtoBook (peerId, batch) {\n    const b32key = peerId.toString()\n    const key = new Key(`${NAMESPACE_PROTOCOL}${b32key}`)\n\n    const protocols = this.protoBook.get(peerId)\n\n    try {\n      // Deleted from the book\n      if (!protocols) {\n        batch.delete(key)\n        return\n      }\n\n      const encodedData = Protocols.encode({ protocols }).finish()\n\n      batch.put(key, encodedData)\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Process datastore entry and add its data to the correct book.\n   *\n   * @private\n   * @param {Object} params\n   * @param {Key} params.key - datastore key\n   * @param {Uint8Array} params.value - datastore value stored\n   * @returns {Promise<void>}\n   */\n  async _processDatastoreEntry ({ key, value }) {\n    try {\n      const keyParts = key.toString().split('/')\n      const peerId = PeerId.createFromCID(keyParts[3])\n\n      let decoded\n      switch (keyParts[2]) {\n        case 'addrs':\n          decoded = Addresses.decode(value)\n\n          // @ts-ignore protected function\n          this.addressBook._setData(\n            peerId,\n            {\n              addresses: decoded.addrs.map((address) => ({\n                multiaddr: new Multiaddr(address.multiaddr),\n                isCertified: Boolean(address.isCertified)\n              })),\n              record: decoded.certifiedRecord\n                ? {\n                    raw: decoded.certifiedRecord.raw,\n                    seqNumber: decoded.certifiedRecord.seq\n                  }\n                : undefined\n            },\n            { emit: false })\n          break\n        case 'keys':\n          decoded = await PeerId.createFromPubKey(value)\n\n          // @ts-ignore protected function\n          this.keyBook._setData(\n            decoded,\n            decoded,\n            { emit: false })\n          break\n        case 'metadata':\n          this.metadataBook._setValue(\n            peerId,\n            keyParts[4],\n            value,\n            { emit: false })\n          break\n        case 'protos':\n          decoded = Protocols.decode(value)\n\n          // @ts-ignore protected function\n          this.protoBook._setData(\n            peerId,\n            new Set(decoded.protocols),\n            { emit: false })\n          break\n        default:\n          log('invalid data persisted for: ', key.toString())\n      }\n    } catch (err) {\n      log.error(err)\n    }\n  }\n}\n\nmodule.exports = PersistentPeerStore\n","'use strict'\n\nmodule.exports.NAMESPACE_COMMON = '/peers/'\n\n// /peers/protos/<b32 peer id no padding>\nmodule.exports.NAMESPACE_ADDRESS = '/peers/addrs/'\n\n// /peers/keys/<b32 peer id no padding>\nmodule.exports.NAMESPACE_KEYS = '/peers/keys/'\n\n// /peers/metadata/<b32 peer id no padding>/<key>\nmodule.exports.NAMESPACE_METADATA = '/peers/metadata/'\n\n// /peers/addrs/<b32 peer id no padding>\nmodule.exports.NAMESPACE_PROTOCOL = '/peers/protos/'\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.Addresses = (function() {\n\n    /**\n     * Properties of an Addresses.\n     * @exports IAddresses\n     * @interface IAddresses\n     * @property {Array.<Addresses.IAddress>|null} [addrs] Addresses addrs\n     * @property {Addresses.ICertifiedRecord|null} [certifiedRecord] Addresses certifiedRecord\n     */\n\n    /**\n     * Constructs a new Addresses.\n     * @exports Addresses\n     * @classdesc Represents an Addresses.\n     * @implements IAddresses\n     * @constructor\n     * @param {IAddresses=} [p] Properties to set\n     */\n    function Addresses(p) {\n        this.addrs = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Addresses addrs.\n     * @member {Array.<Addresses.IAddress>} addrs\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.addrs = $util.emptyArray;\n\n    /**\n     * Addresses certifiedRecord.\n     * @member {Addresses.ICertifiedRecord|null|undefined} certifiedRecord\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.certifiedRecord = null;\n\n    /**\n     * Encodes the specified Addresses message. Does not implicitly {@link Addresses.verify|verify} messages.\n     * @function encode\n     * @memberof Addresses\n     * @static\n     * @param {IAddresses} m Addresses message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Addresses.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addrs != null && m.addrs.length) {\n            for (var i = 0; i < m.addrs.length; ++i)\n                $root.Addresses.Address.encode(m.addrs[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.certifiedRecord != null && Object.hasOwnProperty.call(m, \"certifiedRecord\"))\n            $root.Addresses.CertifiedRecord.encode(m.certifiedRecord, w.uint32(18).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes an Addresses message from the specified reader or buffer.\n     * @function decode\n     * @memberof Addresses\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Addresses} Addresses\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Addresses.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addrs && m.addrs.length))\n                    m.addrs = [];\n                m.addrs.push($root.Addresses.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                m.certifiedRecord = $root.Addresses.CertifiedRecord.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Addresses message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Addresses\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Addresses} Addresses\n     */\n    Addresses.fromObject = function fromObject(d) {\n        if (d instanceof $root.Addresses)\n            return d;\n        var m = new $root.Addresses();\n        if (d.addrs) {\n            if (!Array.isArray(d.addrs))\n                throw TypeError(\".Addresses.addrs: array expected\");\n            m.addrs = [];\n            for (var i = 0; i < d.addrs.length; ++i) {\n                if (typeof d.addrs[i] !== \"object\")\n                    throw TypeError(\".Addresses.addrs: object expected\");\n                m.addrs[i] = $root.Addresses.Address.fromObject(d.addrs[i]);\n            }\n        }\n        if (d.certifiedRecord != null) {\n            if (typeof d.certifiedRecord !== \"object\")\n                throw TypeError(\".Addresses.certifiedRecord: object expected\");\n            m.certifiedRecord = $root.Addresses.CertifiedRecord.fromObject(d.certifiedRecord);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Addresses message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Addresses\n     * @static\n     * @param {Addresses} m Addresses\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Addresses.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addrs = [];\n        }\n        if (o.defaults) {\n            d.certifiedRecord = null;\n        }\n        if (m.addrs && m.addrs.length) {\n            d.addrs = [];\n            for (var j = 0; j < m.addrs.length; ++j) {\n                d.addrs[j] = $root.Addresses.Address.toObject(m.addrs[j], o);\n            }\n        }\n        if (m.certifiedRecord != null && m.hasOwnProperty(\"certifiedRecord\")) {\n            d.certifiedRecord = $root.Addresses.CertifiedRecord.toObject(m.certifiedRecord, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Addresses to JSON.\n     * @function toJSON\n     * @memberof Addresses\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Addresses.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    Addresses.Address = (function() {\n\n        /**\n         * Properties of an Address.\n         * @memberof Addresses\n         * @interface IAddress\n         * @property {Uint8Array|null} [multiaddr] Address multiaddr\n         * @property {boolean|null} [isCertified] Address isCertified\n         */\n\n        /**\n         * Constructs a new Address.\n         * @memberof Addresses\n         * @classdesc Represents an Address.\n         * @implements IAddress\n         * @constructor\n         * @param {Addresses.IAddress=} [p] Properties to set\n         */\n        function Address(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Address multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Address isCertified.\n         * @member {boolean} isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.isCertified = false;\n\n        /**\n         * Encodes the specified Address message. Does not implicitly {@link Addresses.Address.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.IAddress} m Address message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Address.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n                w.uint32(16).bool(m.isCertified);\n            return w;\n        };\n\n        /**\n         * Decodes an Address message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.Address\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.Address} Address\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Address.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.Address();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                case 2:\n                    m.isCertified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an Address message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.Address} Address\n         */\n        Address.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.Address)\n                return d;\n            var m = new $root.Addresses.Address();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            if (d.isCertified != null) {\n                m.isCertified = Boolean(d.isCertified);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an Address message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.Address} m Address\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Address.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n                d.isCertified = false;\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n                d.isCertified = m.isCertified;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Address to JSON.\n         * @function toJSON\n         * @memberof Addresses.Address\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Address.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Address;\n    })();\n\n    Addresses.CertifiedRecord = (function() {\n\n        /**\n         * Properties of a CertifiedRecord.\n         * @memberof Addresses\n         * @interface ICertifiedRecord\n         * @property {number|null} [seq] CertifiedRecord seq\n         * @property {Uint8Array|null} [raw] CertifiedRecord raw\n         */\n\n        /**\n         * Constructs a new CertifiedRecord.\n         * @memberof Addresses\n         * @classdesc Represents a CertifiedRecord.\n         * @implements ICertifiedRecord\n         * @constructor\n         * @param {Addresses.ICertifiedRecord=} [p] Properties to set\n         */\n        function CertifiedRecord(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CertifiedRecord seq.\n         * @member {number} seq\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * CertifiedRecord raw.\n         * @member {Uint8Array} raw\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.raw = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified CertifiedRecord message. Does not implicitly {@link Addresses.CertifiedRecord.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.ICertifiedRecord} m CertifiedRecord message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CertifiedRecord.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n                w.uint32(8).uint64(m.seq);\n            if (m.raw != null && Object.hasOwnProperty.call(m, \"raw\"))\n                w.uint32(18).bytes(m.raw);\n            return w;\n        };\n\n        /**\n         * Decodes a CertifiedRecord message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CertifiedRecord.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.CertifiedRecord();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.seq = r.uint64();\n                    break;\n                case 2:\n                    m.raw = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a CertifiedRecord message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         */\n        CertifiedRecord.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.CertifiedRecord)\n                return d;\n            var m = new $root.Addresses.CertifiedRecord();\n            if (d.seq != null) {\n                if ($util.Long)\n                    (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n                else if (typeof d.seq === \"string\")\n                    m.seq = parseInt(d.seq, 10);\n                else if (typeof d.seq === \"number\")\n                    m.seq = d.seq;\n                else if (typeof d.seq === \"object\")\n                    m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n            }\n            if (d.raw != null) {\n                if (typeof d.raw === \"string\")\n                    $util.base64.decode(d.raw, m.raw = $util.newBuffer($util.base64.length(d.raw)), 0);\n                else if (d.raw.length)\n                    m.raw = d.raw;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a CertifiedRecord message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.CertifiedRecord} m CertifiedRecord\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CertifiedRecord.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if ($util.Long) {\n                    var n = new $util.Long(0, 0, true);\n                    d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n                } else\n                    d.seq = o.longs === String ? \"0\" : 0;\n                if (o.bytes === String)\n                    d.raw = \"\";\n                else {\n                    d.raw = [];\n                    if (o.bytes !== Array)\n                        d.raw = $util.newBuffer(d.raw);\n                }\n            }\n            if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n                if (typeof m.seq === \"number\")\n                    d.seq = o.longs === String ? String(m.seq) : m.seq;\n                else\n                    d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n            }\n            if (m.raw != null && m.hasOwnProperty(\"raw\")) {\n                d.raw = o.bytes === String ? $util.base64.encode(m.raw, 0, m.raw.length) : o.bytes === Array ? Array.prototype.slice.call(m.raw) : m.raw;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this CertifiedRecord to JSON.\n         * @function toJSON\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CertifiedRecord.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CertifiedRecord;\n    })();\n\n    return Addresses;\n})();\n\nmodule.exports = $root;\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.Protocols = (function() {\n\n    /**\n     * Properties of a Protocols.\n     * @exports IProtocols\n     * @interface IProtocols\n     * @property {Array.<string>|null} [protocols] Protocols protocols\n     */\n\n    /**\n     * Constructs a new Protocols.\n     * @exports Protocols\n     * @classdesc Represents a Protocols.\n     * @implements IProtocols\n     * @constructor\n     * @param {IProtocols=} [p] Properties to set\n     */\n    function Protocols(p) {\n        this.protocols = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Protocols protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Protocols\n     * @instance\n     */\n    Protocols.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Encodes the specified Protocols message. Does not implicitly {@link Protocols.verify|verify} messages.\n     * @function encode\n     * @memberof Protocols\n     * @static\n     * @param {IProtocols} m Protocols message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Protocols.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(10).string(m.protocols[i]);\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a Protocols message from the specified reader or buffer.\n     * @function decode\n     * @memberof Protocols\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Protocols} Protocols\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Protocols.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Protocols();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Protocols message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Protocols\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Protocols} Protocols\n     */\n    Protocols.fromObject = function fromObject(d) {\n        if (d instanceof $root.Protocols)\n            return d;\n        var m = new $root.Protocols();\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Protocols.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Protocols message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Protocols\n     * @static\n     * @param {Protocols} m Protocols\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Protocols.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.protocols = [];\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Protocols to JSON.\n     * @function toJSON\n     * @memberof Protocols\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Protocols.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Protocols;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:registrar'), {\n  error: debug('libp2p:registrar:err')\n})\nconst errcode = require('err-code')\n\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('./errors')\nconst Topology = require('libp2p-interfaces/src/topology')\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('./peer-store')} PeerStore\n * @typedef {import('./connection-manager')} ConnectionManager\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('./').HandlerProps} HandlerProps\n */\n\n/**\n *\n */\n\n/**\n * Responsible for notifying registered protocols of events in the network.\n */\nclass Registrar {\n  /**\n   * @param {Object} props\n   * @param {PeerStore} props.peerStore\n   * @param {ConnectionManager} props.connectionManager\n   * @class\n   */\n  constructor ({ peerStore, connectionManager }) {\n    // Used on topology to listen for protocol changes\n    this.peerStore = peerStore\n\n    this.connectionManager = connectionManager\n\n    /**\n     * Map of topologies\n     *\n     * @type {Map<string, Topology>}\n     */\n    this.topologies = new Map()\n\n    /** @type {(protocols: string[]|string, handler: (props: HandlerProps) => void) => void} */\n    // @ts-ignore handle is not optional\n    this._handle = undefined\n\n    this._onDisconnect = this._onDisconnect.bind(this)\n    this.connectionManager.on('peer:disconnect', this._onDisconnect)\n  }\n\n  /**\n   * @returns {(protocols: string[]|string, handler: (props: HandlerProps) => void) => void}\n   */\n  get handle () {\n    return this._handle\n  }\n\n  /**\n   * @param {(protocols: string[]|string, handler: (props: HandlerProps) => void) => void} handle\n   */\n  set handle (handle) {\n    this._handle = handle\n  }\n\n  /**\n   * Get a connection with a peer.\n   *\n   * @param {PeerId} peerId\n   * @returns {Connection | null}\n   */\n  getConnection (peerId) {\n    return this.connectionManager.get(peerId)\n  }\n\n  /**\n   * Register handlers for a set of multicodecs given\n   *\n   * @param {Topology} topology - protocol topology\n   * @returns {string} registrar identifier\n   */\n  register (topology) {\n    if (!Topology.isTopology(topology)) {\n      log.error('topology must be an instance of interfaces/topology')\n      throw errcode(new Error('topology must be an instance of interfaces/topology'), ERR_INVALID_PARAMETERS)\n    }\n\n    // Create topology\n    const id = (Math.random() * 1e9).toString(36) + Date.now()\n\n    this.topologies.set(id, topology)\n\n    // Set registrar\n    topology.registrar = this\n\n    return id\n  }\n\n  /**\n   * Unregister topology.\n   *\n   * @param {string} id - registrar identifier\n   * @returns {boolean} unregistered successfully\n   */\n  unregister (id) {\n    return this.topologies.delete(id)\n  }\n\n  /**\n   * Remove a disconnected peer from the record\n   *\n   * @param {Connection} connection\n   * @returns {void}\n   */\n  _onDisconnect (connection) {\n    for (const [, topology] of this.topologies) {\n      topology.disconnect(connection.remotePeer)\n    }\n  }\n}\n\nmodule.exports = Registrar\n","'use strict'\n\nconst noop = () => {}\nconst topologySymbol = Symbol.for('@libp2p/js-interfaces/topology')\n\n/**\n * @typedef {import('peer-id')} PeerId\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [min=0] - minimum needed connections.\n * @property {number} [max=Infinity] - maximum needed connections.\n * @property {Handlers} [handlers]\n *\n * @typedef {Object} Handlers\n * @property {(peerId: PeerId, conn: Connection) => void} [onConnect] - protocol \"onConnect\" handler\n * @property {(peerId: PeerId, error?:Error) => void} [onDisconnect] - protocol \"onDisconnect\" handler\n *\n * @typedef {import('../connection/connection')} Connection\n */\n\nclass Topology {\n  /**\n   * @param {Options} options\n   */\n  constructor ({\n    min = 0,\n    max = Infinity,\n    handlers = {}\n  }) {\n    this.min = min\n    this.max = max\n\n    // Handlers\n    this._onConnect = handlers.onConnect || noop\n    this._onDisconnect = handlers.onDisconnect || noop\n\n    /**\n     * Set of peers that support the protocol.\n     *\n     * @type {Set<string>}\n     */\n    this.peers = new Set()\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Topology'\n  }\n\n  get [topologySymbol] () {\n    return true\n  }\n\n  /**\n   * Checks if the given value is a Topology instance.\n   *\n   * @param {any} other\n   * @returns {other is Topology}\n   */\n  static isTopology (other) {\n    return Boolean(other && other[topologySymbol])\n  }\n\n  /**\n   * @param {any} registrar\n   */\n  set registrar (registrar) { // eslint-disable-line\n    this._registrar = registrar\n  }\n\n  /**\n   * Notify about peer disconnected event.\n   *\n   * @param {PeerId} peerId\n   * @returns {void}\n   */\n  disconnect (peerId) {\n    this._onDisconnect(peerId)\n  }\n}\n\nmodule.exports = Topology\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:ping'), {\n  error: debug('libp2p:ping:err')\n})\nconst errCode = require('err-code')\n\nconst crypto = require('libp2p-crypto')\nconst { pipe } = require('it-pipe')\n// @ts-ignore it-buffer has no types exported\nconst { toBuffer } = require('it-buffer')\nconst { collect, take } = require('streaming-iterables')\nconst equals = require('uint8arrays/equals')\n\nconst { PROTOCOL, PING_LENGTH } = require('./constants')\n\n/**\n * @typedef {import('../')} Libp2p\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n */\n\n/**\n * Ping a given peer and wait for its response, getting the operation latency.\n *\n * @param {Libp2p} node\n * @param {PeerId|Multiaddr} peer\n * @returns {Promise<number>}\n */\nasync function ping (node, peer) {\n  // @ts-ignore multiaddr might not have toB58String\n  log('dialing %s to %s', PROTOCOL, peer.toB58String ? peer.toB58String() : peer)\n\n  const connection = await node.dial(peer)\n  const { stream } = await connection.newStream(PROTOCOL)\n\n  const start = Date.now()\n  const data = crypto.randomBytes(PING_LENGTH)\n\n  const [result] = await pipe(\n    [data],\n    stream,\n    (/** @type {MuxedStream} */ stream) => take(1, stream),\n    toBuffer,\n    collect\n  )\n  const end = Date.now()\n\n  if (!equals(data, result)) {\n    throw errCode(new Error('Received wrong ping ack'), 'ERR_WRONG_PING_ACK')\n  }\n\n  return end - start\n}\n\n/**\n * Subscribe ping protocol handler.\n *\n * @param {Libp2p} node\n */\nfunction mount (node) {\n  node.handle(PROTOCOL, ({ stream }) => pipe(stream, stream))\n}\n\n/**\n * Unsubscribe ping protocol handler.\n *\n * @param {Libp2p} node\n */\nfunction unmount (node) {\n  node.unhandle(PROTOCOL)\n}\n\nexports = module.exports = ping\nexports.mount = mount\nexports.unmount = unmount\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\n\nmodule.exports = async function * (source) {\n  for await (const b of source) {\n    if (Buffer.isBuffer(b)) {\n      yield b\n    } else if (BufferList.isBufferList(b)) {\n      yield b.slice()\n    } else {\n      yield Buffer.from(b)\n    }\n  }\n}\n\nmodule.exports.toBuffer = module.exports\n\nmodule.exports.toList = async function * (source) {\n  for await (const b of source) {\n    if (Buffer.isBuffer(b)) {\n      yield new BufferList().append(b)\n    } else if (BufferList.isBufferList(b)) {\n      yield b\n    } else {\n      yield new BufferList().append(Buffer.from(b))\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = {\n  PROTOCOL: '/ipfs/ping/1.0.0',\n  PING_LENGTH: 32\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p:identify'), {\n  error: debug('libp2p:identify:err')\n})\nconst errCode = require('err-code')\nconst lp = require('it-length-prefixed')\nconst { pipe } = require('it-pipe')\nconst { collect, take, consume } = require('streaming-iterables')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\n// @ts-ignore it-buffer does not have types\nconst { toBuffer } = require('it-buffer')\n\nconst Message = require('./message')\n\nconst Envelope = require('../record/envelope')\nconst PeerRecord = require('../record/peer-record')\n\nconst {\n  MULTICODEC_IDENTIFY,\n  MULTICODEC_IDENTIFY_PUSH,\n  PROTOCOL_VERSION\n} = require('./consts')\n\nconst { codes } = require('../errors')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n */\n\n/**\n * @typedef {Object} HostProperties\n * @property {string} agentVersion\n */\n\nclass IdentifyService {\n  /**\n   * @class\n   * @param {Object} options\n   * @param {import('../')} options.libp2p\n   */\n  constructor ({ libp2p }) {\n    this._libp2p = libp2p\n    this.peerStore = libp2p.peerStore\n    this.addressManager = libp2p.addressManager\n    this.connectionManager = libp2p.connectionManager\n    this.peerId = libp2p.peerId\n\n    this.handleMessage = this.handleMessage.bind(this)\n\n    // Store self host metadata\n    this._host = {\n      protocolVersion: PROTOCOL_VERSION,\n      ...libp2p._options.host\n    }\n\n    this.peerStore.metadataBook.set(this.peerId, 'AgentVersion', uint8ArrayFromString(this._host.agentVersion))\n    this.peerStore.metadataBook.set(this.peerId, 'ProtocolVersion', uint8ArrayFromString(this._host.protocolVersion))\n    // When a new connection happens, trigger identify\n    this.connectionManager.on('peer:connect', (connection) => {\n      this.identify(connection).catch(log.error)\n    })\n\n    // When self multiaddrs change, trigger identify-push\n    this.peerStore.on('change:multiaddrs', ({ peerId }) => {\n      if (peerId.toString() === this.peerId.toString()) {\n        this.pushToPeerStore()\n      }\n    })\n\n    // When self protocols change, trigger identify-push\n    this.peerStore.on('change:protocols', ({ peerId }) => {\n      if (peerId.toString() === this.peerId.toString()) {\n        this.pushToPeerStore()\n      }\n    })\n  }\n\n  /**\n   * Send an Identify Push update to the list of connections\n   *\n   * @param {Connection[]} connections\n   * @returns {Promise<void[]>}\n   */\n  async push (connections) {\n    const signedPeerRecord = await this.peerStore.addressBook.getRawEnvelope(this.peerId)\n    const listenAddrs = this._libp2p.multiaddrs.map((ma) => ma.bytes)\n    const protocols = this.peerStore.protoBook.get(this.peerId) || []\n\n    const pushes = connections.map(async connection => {\n      try {\n        const { stream } = await connection.newStream(MULTICODEC_IDENTIFY_PUSH)\n\n        await pipe(\n          [Message.Identify.encode({\n            listenAddrs,\n            signedPeerRecord,\n            protocols\n          }).finish()],\n          lp.encode(),\n          stream,\n          consume\n        )\n      } catch (err) {\n        // Just log errors\n        log.error('could not push identify update to peer', err)\n      }\n    })\n\n    return Promise.all(pushes)\n  }\n\n  /**\n   * Calls `push` for all peers in the `peerStore` that are connected\n   *\n   * @returns {void}\n   */\n  pushToPeerStore () {\n    // Do not try to push if libp2p node is not running\n    if (!this._libp2p.isStarted()) {\n      return\n    }\n\n    const connections = []\n    let connection\n    for (const peer of this.peerStore.peers.values()) {\n      if (peer.protocols.includes(MULTICODEC_IDENTIFY_PUSH) && (connection = this.connectionManager.get(peer.id))) {\n        connections.push(connection)\n      }\n    }\n\n    this.push(connections)\n  }\n\n  /**\n   * Requests the `Identify` message from peer associated with the given `connection`.\n   * If the identified peer does not match the `PeerId` associated with the connection,\n   * an error will be thrown.\n   *\n   * @async\n   * @param {Connection} connection\n   * @returns {Promise<void>}\n   */\n  async identify (connection) {\n    const { stream } = await connection.newStream(MULTICODEC_IDENTIFY)\n    const [data] = await pipe(\n      [],\n      stream,\n      lp.decode(),\n      take(1),\n      toBuffer,\n      collect\n    )\n\n    if (!data) {\n      throw errCode(new Error('No data could be retrieved'), codes.ERR_CONNECTION_ENDED)\n    }\n\n    let message\n    try {\n      message = Message.Identify.decode(data)\n    } catch (err) {\n      throw errCode(err, codes.ERR_INVALID_MESSAGE)\n    }\n\n    const {\n      publicKey,\n      listenAddrs,\n      protocols,\n      observedAddr,\n      signedPeerRecord\n    } = message\n\n    const id = await PeerId.createFromPubKey(publicKey)\n\n    if (connection.remotePeer.toB58String() !== id.toB58String()) {\n      throw errCode(new Error('identified peer does not match the expected peer'), codes.ERR_INVALID_PEER)\n    }\n\n    // Get the observedAddr if there is one\n    const cleanObservedAddr = IdentifyService.getCleanMultiaddr(observedAddr)\n\n    try {\n      const envelope = await Envelope.openAndCertify(signedPeerRecord, PeerRecord.DOMAIN)\n      if (this.peerStore.addressBook.consumePeerRecord(envelope)) {\n        this.peerStore.protoBook.set(id, protocols)\n        return\n      }\n    } catch (err) {\n      log('received invalid envelope, discard it and fallback to listenAddrs is available', err)\n    }\n\n    // LEGACY: Update peers data in PeerStore\n    try {\n      this.peerStore.addressBook.set(id, listenAddrs.map((addr) => new Multiaddr(addr)))\n    } catch (err) {\n      log.error('received invalid addrs', err)\n    }\n\n    this.peerStore.protoBook.set(id, protocols)\n    this.peerStore.metadataBook.set(id, 'AgentVersion', uint8ArrayFromString(message.agentVersion))\n\n    // TODO: Add and score our observed addr\n    log('received observed address of %s', cleanObservedAddr)\n    // this.addressManager.addObservedAddr(observedAddr)\n  }\n\n  /**\n   * A handler to register with Libp2p to process identify messages.\n   *\n   * @param {Object} options\n   * @param {Connection} options.connection\n   * @param {MuxedStream} options.stream\n   * @param {string} options.protocol\n   * @returns {Promise<void>|undefined}\n   */\n  handleMessage ({ connection, stream, protocol }) {\n    switch (protocol) {\n      case MULTICODEC_IDENTIFY:\n        return this._handleIdentify({ connection, stream })\n      case MULTICODEC_IDENTIFY_PUSH:\n        return this._handlePush({ connection, stream })\n      default:\n        log.error('cannot handle unknown protocol %s', protocol)\n    }\n  }\n\n  /**\n   * Sends the `Identify` response with the Signed Peer Record\n   * to the requesting peer over the given `connection`\n   *\n   * @private\n   * @param {Object} options\n   * @param {MuxedStream} options.stream\n   * @param {Connection} options.connection\n   * @returns {Promise<void>}\n   */\n  async _handleIdentify ({ connection, stream }) {\n    let publicKey = new Uint8Array(0)\n    if (this.peerId.pubKey) {\n      publicKey = this.peerId.pubKey.bytes\n    }\n\n    const signedPeerRecord = await this.peerStore.addressBook.getRawEnvelope(this.peerId)\n    const protocols = this.peerStore.protoBook.get(this.peerId) || []\n\n    const message = Message.Identify.encode({\n      protocolVersion: this._host.protocolVersion,\n      agentVersion: this._host.agentVersion,\n      publicKey,\n      listenAddrs: this._libp2p.multiaddrs.map((ma) => ma.bytes),\n      signedPeerRecord,\n      observedAddr: connection.remoteAddr.bytes,\n      protocols\n    }).finish()\n\n    try {\n      await pipe(\n        [message],\n        lp.encode(),\n        stream,\n        consume\n      )\n    } catch (err) {\n      log.error('could not respond to identify request', err)\n    }\n  }\n\n  /**\n   * Reads the Identify Push message from the given `connection`\n   *\n   * @private\n   * @param {object} options\n   * @param {MuxedStream} options.stream\n   * @param {Connection} options.connection\n   * @returns {Promise<void>}\n   */\n  async _handlePush ({ connection, stream }) {\n    let message\n    try {\n      const [data] = await pipe(\n        [],\n        stream,\n        lp.decode(),\n        take(1),\n        toBuffer,\n        collect\n      )\n      message = Message.Identify.decode(data)\n    } catch (err) {\n      return log.error('received invalid message', err)\n    }\n\n    const id = connection.remotePeer\n\n    try {\n      const envelope = await Envelope.openAndCertify(message.signedPeerRecord, PeerRecord.DOMAIN)\n      if (this.peerStore.addressBook.consumePeerRecord(envelope)) {\n        this.peerStore.protoBook.set(id, message.protocols)\n        return\n      }\n    } catch (err) {\n      log('received invalid envelope, discard it and fallback to listenAddrs is available', err)\n    }\n\n    // LEGACY: Update peers data in PeerStore\n    try {\n      this.peerStore.addressBook.set(id,\n        message.listenAddrs.map((addr) => new Multiaddr(addr)))\n    } catch (err) {\n      log.error('received invalid addrs', err)\n    }\n\n    // Update the protocols\n    this.peerStore.protoBook.set(id, message.protocols)\n  }\n\n  /**\n   * Takes the `addr` and converts it to a Multiaddr if possible\n   *\n   * @param {Uint8Array | string} addr\n   * @returns {Multiaddr|null}\n   */\n  static getCleanMultiaddr (addr) {\n    if (addr && addr.length > 0) {\n      try {\n        return new Multiaddr(addr)\n      } catch (_) {\n        return null\n      }\n    }\n    return null\n  }\n}\n\n/**\n * The protocols the IdentifyService supports\n *\n * @property multicodecs\n */\nconst multicodecs = {\n  IDENTIFY: MULTICODEC_IDENTIFY,\n  IDENTIFY_PUSH: MULTICODEC_IDENTIFY_PUSH\n}\n\nIdentifyService.multicodecs = multicodecs\nIdentifyService.Messsage = Message\n\nmodule.exports = IdentifyService\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.Identify = (function() {\n\n    /**\n     * Properties of an Identify.\n     * @exports IIdentify\n     * @interface IIdentify\n     * @property {string|null} [protocolVersion] Identify protocolVersion\n     * @property {string|null} [agentVersion] Identify agentVersion\n     * @property {Uint8Array|null} [publicKey] Identify publicKey\n     * @property {Array.<Uint8Array>|null} [listenAddrs] Identify listenAddrs\n     * @property {Uint8Array|null} [observedAddr] Identify observedAddr\n     * @property {Array.<string>|null} [protocols] Identify protocols\n     * @property {Uint8Array|null} [signedPeerRecord] Identify signedPeerRecord\n     */\n\n    /**\n     * Constructs a new Identify.\n     * @exports Identify\n     * @classdesc Represents an Identify.\n     * @implements IIdentify\n     * @constructor\n     * @param {IIdentify=} [p] Properties to set\n     */\n    function Identify(p) {\n        this.listenAddrs = [];\n        this.protocols = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Identify protocolVersion.\n     * @member {string} protocolVersion\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.protocolVersion = \"\";\n\n    /**\n     * Identify agentVersion.\n     * @member {string} agentVersion\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.agentVersion = \"\";\n\n    /**\n     * Identify publicKey.\n     * @member {Uint8Array} publicKey\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.publicKey = $util.newBuffer([]);\n\n    /**\n     * Identify listenAddrs.\n     * @member {Array.<Uint8Array>} listenAddrs\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.listenAddrs = $util.emptyArray;\n\n    /**\n     * Identify observedAddr.\n     * @member {Uint8Array} observedAddr\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.observedAddr = $util.newBuffer([]);\n\n    /**\n     * Identify protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Identify signedPeerRecord.\n     * @member {Uint8Array} signedPeerRecord\n     * @memberof Identify\n     * @instance\n     */\n    Identify.prototype.signedPeerRecord = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Identify message. Does not implicitly {@link Identify.verify|verify} messages.\n     * @function encode\n     * @memberof Identify\n     * @static\n     * @param {IIdentify} m Identify message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Identify.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n            w.uint32(10).bytes(m.publicKey);\n        if (m.listenAddrs != null && m.listenAddrs.length) {\n            for (var i = 0; i < m.listenAddrs.length; ++i)\n                w.uint32(18).bytes(m.listenAddrs[i]);\n        }\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(26).string(m.protocols[i]);\n        }\n        if (m.observedAddr != null && Object.hasOwnProperty.call(m, \"observedAddr\"))\n            w.uint32(34).bytes(m.observedAddr);\n        if (m.protocolVersion != null && Object.hasOwnProperty.call(m, \"protocolVersion\"))\n            w.uint32(42).string(m.protocolVersion);\n        if (m.agentVersion != null && Object.hasOwnProperty.call(m, \"agentVersion\"))\n            w.uint32(50).string(m.agentVersion);\n        if (m.signedPeerRecord != null && Object.hasOwnProperty.call(m, \"signedPeerRecord\"))\n            w.uint32(66).bytes(m.signedPeerRecord);\n        return w;\n    };\n\n    /**\n     * Decodes an Identify message from the specified reader or buffer.\n     * @function decode\n     * @memberof Identify\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Identify} Identify\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Identify.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Identify();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 5:\n                m.protocolVersion = r.string();\n                break;\n            case 6:\n                m.agentVersion = r.string();\n                break;\n            case 1:\n                m.publicKey = r.bytes();\n                break;\n            case 2:\n                if (!(m.listenAddrs && m.listenAddrs.length))\n                    m.listenAddrs = [];\n                m.listenAddrs.push(r.bytes());\n                break;\n            case 4:\n                m.observedAddr = r.bytes();\n                break;\n            case 3:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            case 8:\n                m.signedPeerRecord = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Identify message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Identify\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Identify} Identify\n     */\n    Identify.fromObject = function fromObject(d) {\n        if (d instanceof $root.Identify)\n            return d;\n        var m = new $root.Identify();\n        if (d.protocolVersion != null) {\n            m.protocolVersion = String(d.protocolVersion);\n        }\n        if (d.agentVersion != null) {\n            m.agentVersion = String(d.agentVersion);\n        }\n        if (d.publicKey != null) {\n            if (typeof d.publicKey === \"string\")\n                $util.base64.decode(d.publicKey, m.publicKey = $util.newBuffer($util.base64.length(d.publicKey)), 0);\n            else if (d.publicKey.length)\n                m.publicKey = d.publicKey;\n        }\n        if (d.listenAddrs) {\n            if (!Array.isArray(d.listenAddrs))\n                throw TypeError(\".Identify.listenAddrs: array expected\");\n            m.listenAddrs = [];\n            for (var i = 0; i < d.listenAddrs.length; ++i) {\n                if (typeof d.listenAddrs[i] === \"string\")\n                    $util.base64.decode(d.listenAddrs[i], m.listenAddrs[i] = $util.newBuffer($util.base64.length(d.listenAddrs[i])), 0);\n                else if (d.listenAddrs[i].length)\n                    m.listenAddrs[i] = d.listenAddrs[i];\n            }\n        }\n        if (d.observedAddr != null) {\n            if (typeof d.observedAddr === \"string\")\n                $util.base64.decode(d.observedAddr, m.observedAddr = $util.newBuffer($util.base64.length(d.observedAddr)), 0);\n            else if (d.observedAddr.length)\n                m.observedAddr = d.observedAddr;\n        }\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Identify.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        if (d.signedPeerRecord != null) {\n            if (typeof d.signedPeerRecord === \"string\")\n                $util.base64.decode(d.signedPeerRecord, m.signedPeerRecord = $util.newBuffer($util.base64.length(d.signedPeerRecord)), 0);\n            else if (d.signedPeerRecord.length)\n                m.signedPeerRecord = d.signedPeerRecord;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Identify message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Identify\n     * @static\n     * @param {Identify} m Identify\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Identify.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.listenAddrs = [];\n            d.protocols = [];\n        }\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.publicKey = \"\";\n            else {\n                d.publicKey = [];\n                if (o.bytes !== Array)\n                    d.publicKey = $util.newBuffer(d.publicKey);\n            }\n            if (o.bytes === String)\n                d.observedAddr = \"\";\n            else {\n                d.observedAddr = [];\n                if (o.bytes !== Array)\n                    d.observedAddr = $util.newBuffer(d.observedAddr);\n            }\n            d.protocolVersion = \"\";\n            d.agentVersion = \"\";\n            if (o.bytes === String)\n                d.signedPeerRecord = \"\";\n            else {\n                d.signedPeerRecord = [];\n                if (o.bytes !== Array)\n                    d.signedPeerRecord = $util.newBuffer(d.signedPeerRecord);\n            }\n        }\n        if (m.publicKey != null && m.hasOwnProperty(\"publicKey\")) {\n            d.publicKey = o.bytes === String ? $util.base64.encode(m.publicKey, 0, m.publicKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.publicKey) : m.publicKey;\n        }\n        if (m.listenAddrs && m.listenAddrs.length) {\n            d.listenAddrs = [];\n            for (var j = 0; j < m.listenAddrs.length; ++j) {\n                d.listenAddrs[j] = o.bytes === String ? $util.base64.encode(m.listenAddrs[j], 0, m.listenAddrs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.listenAddrs[j]) : m.listenAddrs[j];\n            }\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        if (m.observedAddr != null && m.hasOwnProperty(\"observedAddr\")) {\n            d.observedAddr = o.bytes === String ? $util.base64.encode(m.observedAddr, 0, m.observedAddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.observedAddr) : m.observedAddr;\n        }\n        if (m.protocolVersion != null && m.hasOwnProperty(\"protocolVersion\")) {\n            d.protocolVersion = m.protocolVersion;\n        }\n        if (m.agentVersion != null && m.hasOwnProperty(\"agentVersion\")) {\n            d.agentVersion = m.agentVersion;\n        }\n        if (m.signedPeerRecord != null && m.hasOwnProperty(\"signedPeerRecord\")) {\n            d.signedPeerRecord = o.bytes === String ? $util.base64.encode(m.signedPeerRecord, 0, m.signedPeerRecord.length) : o.bytes === Array ? Array.prototype.slice.call(m.signedPeerRecord) : m.signedPeerRecord;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Identify to JSON.\n     * @function toJSON\n     * @memberof Identify\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Identify.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Identify;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\n// @ts-ignore nat-api does not export types\nconst NatAPI = require('@motrix/nat-api')\nconst debug = require('debug')\nconst { promisify } = require('es6-promisify')\nconst { Multiaddr } = require('multiaddr')\nconst log = Object.assign(debug('libp2p:nat'), {\n  error: debug('libp2p:nat:err')\n})\nconst { isBrowser } = require('ipfs-utils/src/env')\nconst retry = require('p-retry')\n// @ts-ignore private-api does not export types\nconst isPrivateIp = require('private-ip')\nconst pkg = require('../package.json')\nconst errcode = require('err-code')\nconst {\n  codes: { ERR_INVALID_PARAMETERS }\n} = require('./errors')\nconst isLoopback = require('libp2p-utils/src/multiaddr/is-loopback')\n\nconst DEFAULT_TTL = 7200\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('./transport-manager')} TransportManager\n * @typedef {import('./address-manager')} AddressManager\n */\n\n/**\n * @typedef {Object} NatManagerProperties\n * @property {PeerId} peerId - The peer ID of the current node\n * @property {TransportManager} transportManager - A transport manager\n * @property {AddressManager} addressManager - An address manager\n *\n * @typedef {Object} NatManagerOptions\n * @property {boolean} enabled - Whether to enable the NAT manager\n * @property {string} [externalIp] - Pass a value to use instead of auto-detection\n * @property {string} [description] - A string value to use for the port mapping description on the gateway\n * @property {number} [ttl = DEFAULT_TTL] - How long UPnP port mappings should last for in seconds (minimum 1200)\n * @property {boolean} [keepAlive] - Whether to automatically refresh UPnP port mappings when their TTL is reached\n * @property {string} [gateway] - Pass a value to use instead of auto-detection\n * @property {object} [pmp] - PMP options\n * @property {boolean} [pmp.enabled] - Whether to enable PMP as well as UPnP\n */\n\nfunction highPort (min = 1024, max = 65535) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nclass NatManager {\n  /**\n   * @class\n   * @param {NatManagerProperties & NatManagerOptions} options\n   */\n  constructor ({ peerId, addressManager, transportManager, ...options }) {\n    this._peerId = peerId\n    this._addressManager = addressManager\n    this._transportManager = transportManager\n\n    this._enabled = options.enabled\n    this._externalIp = options.externalIp\n    this._options = {\n      description: options.description || `${pkg.name}@${pkg.version} ${this._peerId}`,\n      ttl: options.ttl || DEFAULT_TTL,\n      autoUpdate: options.keepAlive || true,\n      gateway: options.gateway,\n      enablePMP: Boolean(options.pmp && options.pmp.enabled)\n    }\n\n    if (this._options.ttl < DEFAULT_TTL) {\n      throw errcode(new Error(`NatManager ttl should be at least ${DEFAULT_TTL} seconds`), ERR_INVALID_PARAMETERS)\n    }\n  }\n\n  /**\n   * Starts the NAT manager\n   */\n  start () {\n    if (isBrowser || !this._enabled) {\n      return\n    }\n\n    // done async to not slow down startup\n    this._start().catch((err) => {\n      // hole punching errors are non-fatal\n      log.error(err)\n    })\n  }\n\n  async _start () {\n    const addrs = this._transportManager.getAddrs()\n\n    for (const addr of addrs) {\n      // try to open uPnP ports for each thin waist address\n      const { family, host, port, transport } = addr.toOptions()\n\n      if (!addr.isThinWaistAddress() || transport !== 'tcp') {\n        // only bare tcp addresses\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      if (isLoopback(addr)) {\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      if (family !== 4) {\n        // ignore ipv6\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      const client = this._getClient()\n      const publicIp = this._externalIp || await client.externalIp()\n\n      if (isPrivateIp(publicIp)) {\n        throw new Error(`${publicIp} is private - please set config.nat.externalIp to an externally routable IP or ensure you are not behind a double NAT`)\n      }\n\n      const publicPort = highPort()\n\n      log(`opening uPnP connection from ${publicIp}:${publicPort} to ${host}:${port}`)\n\n      await client.map({\n        publicPort,\n        privatePort: port,\n        protocol: transport.toUpperCase()\n      })\n\n      this._addressManager.addObservedAddr(Multiaddr.fromNodeAddress({\n        family: 4,\n        address: publicIp,\n        port: publicPort\n      }, transport))\n    }\n  }\n\n  _getClient () {\n    if (this._client) {\n      return this._client\n    }\n\n    const client = new NatAPI(this._options)\n\n    /** @type {(...any: any) => any} */\n    const map = promisify(client.map.bind(client))\n    /** @type {(...any: any) => any} */\n    const destroy = promisify(client.destroy.bind(client))\n    /** @type {(...any: any) => any} */\n    const externalIp = promisify(client.externalIp.bind(client))\n\n    // these are all network operations so add a retry\n    this._client = {\n      /**\n       * @param  {...any} args\n       * @returns {Promise<void>}\n       */\n      map: (...args) => retry(() => map(...args), { onFailedAttempt: log.error, unref: true }),\n\n      /**\n       * @param  {...any} args\n       * @returns {Promise<void>}\n       */\n      destroy: (...args) => retry(() => destroy(...args), { onFailedAttempt: log.error, unref: true }),\n\n      /**\n       * @param  {...any} args\n       * @returns {Promise<string>}\n       */\n      externalIp: (...args) => retry(() => externalIp(...args), { onFailedAttempt: log.error, unref: true })\n    }\n\n    return this._client\n  }\n\n  /**\n   * Stops the NAT manager\n   *\n   * @async\n   */\n  async stop () {\n    if (isBrowser || !this._client) {\n      return\n    }\n\n    try {\n      await this._client.destroy()\n      this._client = null\n    } catch (err) {\n      log.error(err)\n    }\n  }\n}\n\nmodule.exports = NatManager\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promisify = promisify;\n// Symbols is a better way to do this, but not all browsers have good support,\n// so instead we'll just make do with a very unlikely string.\nvar customArgumentsToken = \"__ES6-PROMISIFY--CUSTOM-ARGUMENTS__\";\n/**\n * promisify()\n * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) --\n * into an ES6-compatible Promise. Promisify provides a default callback of the\n * form (error, result) and rejects when `error` is truthy.\n *\n * @param {function} original - The function to promisify\n * @return {function} A promisified version of `original`\n */\n\nfunction promisify(original) {\n  // Ensure the argument is a function\n  if (typeof original !== \"function\") {\n    throw new TypeError(\"Argument to promisify must be a function\");\n  } // If the user has asked us to decode argument names for them, honour that\n\n\n  var argumentNames = original[customArgumentsToken]; // If the user has supplied a custom Promise implementation, use it.\n  // Otherwise fall back to whatever we can find on the global object.\n\n  var ES6Promise = promisify.Promise || Promise; // If we can find no Promise implemention, then fail now.\n\n  if (typeof ES6Promise !== \"function\") {\n    throw new Error(\"No Promise implementation found; do you need a polyfill?\");\n  }\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new ES6Promise(function (resolve, reject) {\n      // Append the callback bound to the context\n      args.push(function callback(err) {\n        if (err) {\n          return reject(err);\n        }\n\n        for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          values[_key2 - 1] = arguments[_key2];\n        }\n\n        if (values.length === 1 || !argumentNames) {\n          return resolve(values[0]);\n        }\n\n        var o = {};\n        values.forEach(function (value, index) {\n          var name = argumentNames[index];\n\n          if (name) {\n            o[name] = value;\n          }\n        });\n        resolve(o);\n      }); // Call the function.\n\n      original.apply(_this, args);\n    });\n  };\n} // Attach this symbol to the exported function, so users can use it\n\n\npromisify.argumentNames = customArgumentsToken;\npromisify.Promise = undefined; // Export the public API","'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM\n}\n","// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to true\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource', // Firefox\n\t'The Internet connection appears to be offline', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","module.exports = require('./lib/retry');","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && options.forever,\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * opts.minTimeout * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","'use strict'\n\n// @ts-ignore is-loopback-addr does not publish types\nconst isLoopbackAddr = require('is-loopback-addr')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * Check if a given multiaddr is a loopback address.\n *\n * @param {Multiaddr} ma\n * @returns {boolean}\n */\nfunction isLoopback (ma) {\n  const { address } = ma.nodeAddress()\n\n  return isLoopbackAddr(address)\n}\n\nmodule.exports = isLoopback\n","'use strict'\n\n/**\n * Check if a given ip address is a loopback address\n *\n * @param {string} ip - ip address to check\n * @returns {boolean}\n */\nfunction isLoopbackAddr (ip) {\n  return /^127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n    /^::1$/.test(ip)\n}\n\nmodule.exports = isLoopbackAddr\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","addEventListener","txt","info","textContent","trim","create","addresses","listen","transport","connEncryption","streamMuxer","peerDiscovery","config","tag","enabled","list","libp2p","status","on","peerId","toB58String","connectionManager","connection","remotePeer","start","innerText","require","global","_babelPolyfill","Error","DEFINE_PROPERTY","O","key","value","Object","writable","configurable","define","String","prototype","padStart","padEnd","bind","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","enumKeys","anObject","isObject","toObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$GOPS","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","a","it","D","protoDesc","wrap","sym","_k","isSymbol","iterator","$defineProperty","enumerable","$defineProperties","P","keys","l","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","result","$getOwnPropertySymbols","IS_OP","TypeError","arguments","$set","set","name","G","W","F","es6Symbols","j","wellKnownSymbols","store","S","keyFor","useSetter","useSimple","defineProperty","defineProperties","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","FAILS_ON_PRIMITIVES","args","replacer","$replacer","valueOf","Math","exports","self","__g","core","hide","ctx","source","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","own","out","exp","U","R","SRC","$toString","TO_STRING","TPL","inspectSource","val","safe","isFunction","SHARED","version","mode","copyright","LIBRARY","charAt","cof","inheritIfRequired","fails","$trim","NUMBER","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","first","charCodeAt","third","radix","maxCode","NaN","digits","slice","code","parseInt","that","constructor","SPECIES","C","isRegExp","$flags","$RegExp","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","proxy","flags","classof","aFunction","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","PROMISE","process","versions","v8","$Promise","isNode","empty","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","newPromiseCapability","promise","resolve","FakePromise","exec","PromiseRejectionEvent","then","isThenable","notify","isReject","_n","chain","_c","_v","ok","_s","run","reaction","handler","fail","reject","domain","exited","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","Promise","r","capability","$$reject","x","iter","all","iterable","values","index","remaining","$index","alreadyCalled","race","invoke","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","defer","channel","hasOwnProperty","listener","nextTick","port2","port1","postMessage","importScripts","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","next","navigator","standalone","toggle","node","createTextNode","observe","characterData","redefineAll","meta","$iterDetect","NAME","methods","common","IS_MAP","IS_WEAK","ADDER","fixMethod","b","entries","getConstructor","NEED","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","each","assign","weak","validate","NATIVE_WEAK_MAP","IS_IE11","ActiveXObject","WEAK_MAP","getWeak","isExtensible","uncaughtFrozenStore","ufstore","InternalMap","_i","def","$WeakMap","method","_f","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","Typed","TypedArrayConstructors","$typed","toInteger","toLength","toIndex","arrayFill","ARRAY_BUFFER","DATA_VIEW","WRONG_LENGTH","WRONG_INDEX","$ArrayBuffer","$DataView","RangeError","Infinity","BaseBuffer","abs","pow","floor","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","mLen","nBytes","buffer","eLen","eMax","eBias","rt","s","m","c","nBits","bytes","packIEEE754","internal","view","isLittleEndian","numIndex","intIndex","_b","pack","reverse","conversion","byteLength","byteOffset","bufferLength","offset","addGetter","getInt8","getUint8","getInt16","getUint16","getInt32","unpackI32","getUint32","getFloat32","unpackIEEE754","getFloat64","setInt8","packI8","setUint8","setInt16","packI16","setUint16","setInt32","packI32","setUint32","setFloat32","packF32","setFloat64","packF64","ArrayBufferProto","$setInt8","onFinally","asap","OBSERVABLE","RETURN","getMethod","cleanupSubscription","subscription","cleanup","subscriptionClosed","_o","closeSubscription","Subscription","observer","subscriber","SubscriptionObserver","unsubscribe","complete","$Observable","subscribe","from","observable","done","of","items","Observable","MSIE","time","boundArgs","setInterval","$iterators","getKeys","Iterators","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","Op","hasOwn","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","obj","arg","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","record","tryCatch","unwrapped","previousPromise","callInvokeWithMethodAndArg","enqueue","defineIteratorMethods","AsyncIterator","async","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","nextLoc","toString","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","completion","pushTryEntry","reset","object","pop","iteratorMethod","isNaN","skipTempReset","prev","resetTryEntry","stop","rootEntry","rootRecord","rval","exception","loc","caught","handle","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","formatArgs","save","load","useColors","storage","localstorage","destroy","warned","colors","__nwjs","toLowerCase","match","documentElement","style","WebkitAppearance","firebug","table","$1","namespace","humanize","diff","color","splice","lastC","replace","debug","namespaces","setItem","removeItem","getItem","localStorage","formatters","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","clearTimeout","defaultClearTimeout","fun","marker","draining","currentQueue","queueIndex","drainQueue","timeout","runTimeout","cleanUpNextTick","len","runClearTimeout","Item","array","title","browser","env","argv","noop","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","util","asPromise","base64","EventEmitter","float","inquire","utf8","pool","LongBits","Boolean","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isString","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","dst","src","ifNotSet","merge","lcFirst","str","substring","properties","CustomError","captureStackTrace","newError","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","encoding","allocUnsafe","size","forge","baseN","callback","msg","callbacks","stopPropagation","copy","attr","div","attributes","oldSetImmediate","isNodejs","globalScope","isArrayBuffer","isArrayBufferView","n","ByteBuffer","ByteStringBuffer","read","arr","fromCharCode","putByte","_constructedStringLength","_MAX_CONSTRUCTED_STRING_LENGTH","_optimizeConstructedString","substr","isEmpty","putBytes","fillWithByte","putString","encodeUtf8","putInt16","putInt24","putInt32","putInt16Le","putInt24Le","putInt32Le","putInt","_checkBitsParam","putSignedInt","putBuffer","getBytes","getByte","getInt24","getInt16Le","getInt24Le","getInt32Le","getInt","getSignedInt","max","count","min","at","setAt","createBuffer","compact","truncate","toHex","decodeUtf8","options","readOffset","growSize","write","writeOffset","DataBuffer","accommodate","amount","ceil","binary","hex","decode","raw","Uint16Array","text","utf16","encode","input","fillString","xorBytes","s1","s2","s3","t","hexToBytes","bytesToHex","int32ToBytes","_base64","_base64Idx","_base58","encode64","maxline","line","chr1","chr2","chr3","decode64","enc1","enc2","enc3","enc4","unescape","encodeURIComponent","decodeURIComponent","escape","base58","subarray","deflate","api","flg","inflate","_setStorageObject","_getStorageObject","init","_setItem","_getItem","_removeItem","_clearItems","_callStorageFunction","func","idx","ex","clearItems","parseUrl","regex","lastIndex","url","full","scheme","host","path","fullHost","_queryVariables","getQueryVariables","query","q","kvpairs","pos","search","parseFragment","fragment","fp","fq","shift","pathString","queryString","makeRequest","reqString","frag","req","getPath","getQuery","getQueryLast","_default","vals","makeLink","jQuery","qstr","param","format","re","part","argi","parts","formatNumber","number","decimals","dec_point","thousands_sep","toFixed","formatSize","bytesFromIP","ip","bytesFromIPv4","bytesFromIPv6","num","blanks","zeros","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","end","group","unshift","estimateCores","update","cores","hardwareConcurrency","Worker","Blob","blobUrl","URL","createObjectURL","st","et","sample","samples","numWorkers","avg","reduce","revokeObjectURL","results","workers","worker","terminate","overlaps","r1","overlap","r2","_reverseAlphabets","alphabet","_encodeWithByteBuffer","base","carry","pkcs5","crypto","usePureJavaScript","pbkdf2","dkLen","md","pbkdf2Sync","algorithms","hLen","digestLength","prf","hmac","dk","xor","u_c","u_c1","digest","inner","outer","_crypto","prng","plugin","seed","reseeds","generated","keyBytes","pools","generate","generateSync","cipher","increment","formatKey","formatSeed","_reseed","_reseedSync","messageLength","_seed","needed","seedFile","collect","seedFileSync","_2powK","seedBytes","getRandomValues","msCrypto","entropy","Uint32Array","QuotaExceededError","random","randomBytes","defaultSeedFile","collectInt","registerWorker","removeEventListener","asn1Validator","publicKeyValidator","privateKeyValidator","BigInteger","jsbn","NativeBuffer","pki","ed25519","constants","PUBLIC_KEY_BYTE_LENGTH","PRIVATE_KEY_BYTE_LENGTH","SEED_BYTE_LENGTH","SIGN_BYTE_LENGTH","HASH_BYTE_LENGTH","generateKeyPair","getBytesSync","messageToNativeBuffer","pk","sk","crypto_sign_keypair","publicKey","privateKey","privateKeyFromAsn1","capture","errors","valid","asn1","oid","derToOid","privateKeyOid","ed25519Oid","oids","EdDSA25519","privateKeyBytes","fromDer","publicKeyFromAsn1","publicKeyOid","publicKeyBytes","ed25519PublicKey","publicKeyFromPrivateKey","sign","keyPair","signedMsg","crypto_sign","sig","verify","signature","sm","crypto_sign_open","gf0","gf","gf1","D2","X","Y","L","Float64Array","I","msgLen","sha512","scalarbase","smlen","h","modL","mlen","unpackneg","scalarmult","add","crypto_verify_32","g","Z","M","A","sel25519","tx","ty","zi","inv25519","pack25519","par25519","o","car25519","chk","den","den2","den4","den6","set25519","unpack25519","pow2523","neq25519","xi","y","yi","vn","cswap","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","getGlobal","fetch","default","Headers","Request","Response","BufferList","varintEncode","MIN_POOL_SIZE","DEFAULT_POOL_SIZE","poolSize","minPoolSize","encodeLength","lengthEncoder","encoder","alloc","poolOffset","chunk","encodedLength","append","single","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","foo","isBuffer","buf","encodingOrOffset","fromString","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","fromObject","fill","assertSize","checked","allocUnsafeSlow","string","isEncoding","actual","arrayView","fromArrayLike","numberIsNaN","_isBuffer","compare","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap16","swap","swap32","swap64","slowToString","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","includes","bidirectionalIndexOf","strLen","parsed","blitBuffer","asciiToBytes","utf16leToBytes","hexWrite","asciiWrite","base64Write","ucs2Write","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","hexSliceLookupTable","newBuf","ext","readUintLE","readUIntLE","noAssert","checkOffset","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","checkInt","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","littleEndian","checkIEEE754","writeFloatLE","writeFloat","writeFloatBE","writeDoubleLE","writeDouble","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","units","leadSurrogate","byteArray","toByteArray","base64clean","i16","symbol","for","_init","_bufs","_new","_offset","tot","_t","_reverseOffset","blOffset","bufferId","dstStart","srcStart","srcEnd","bufoff","shallowSlice","startOffset","endOffset","buffers","consume","trunc","duplicate","_appendBuffer","_isBufferList","blIndex","buffOffset","buff","availableWindow","nativeSearchResult","revOffset","_match","searchOffset","isBufferList","Varint","varintDecode","MAX_LENGTH_LENGTH","MAX_DATA_LENGTH","Empty","ReadModes","LENGTH","DATA","ReadHandlers","dataLength","lengthDecoder","maxLengthLength","maxDataLength","onLength","onData","nextChunk","opts","decoder","fromReader","reader","varByteSource","toBufferProxy","bl","Proxy","_","int32BEEncode","INPUT_ERROR","FINALIZE_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA3_NO_NODE_JS","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","amd","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","SHAKE_PADDING","CSHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","padding","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","createKmacOutputMethod","createOutputMethods","createMethod","createShakeMethod","createCshakeMethod","w","bytepad","createKmacMethod","Kmac","methodNames","algorithm","methodName","newMethodName","blocks","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","right","encodeString","strs","paddingBytes","finalize","arrayBuffer","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","library","_x86Multiply","_x64Xor","_x64Multiply","x86","hash32","inputValidation","_validBytes","remainder","h1","k1","_x86Rotl","_x86Fmix","hash128","h2","h3","h4","k2","k3","k4","x64","_x64Rotl","_x64Add","_x64LeftShift","_x64Fmix","murmurHash3","_murmurHash3","noConflict","ERROR_MSG_INPUT","label","uint32ToHex","toUpperCase","hashFn","N","startMs","getTime","genMs","hashHex","hashMs","ms","round","normalizeInput","debugPrint","testSpeed","urlAlphabet","POOL_SIZE_MULTIPLIER","randomFillSync","customRandom","getRandom","mask","clz32","step","customAlphabet","nanoid","MAX_BYTES","MAX_UINT32","oldBrowser","copyProps","SafeBuffer","inherits","HashBase","ARRAY16","MD5","_update","_block","fnF","fnG","fnH","fnI","_digest","_blockOffset","_length","rotl","Transform","prefix","blockSize","_blockSize","_finalized","_transform","_flush","throwIfNotStringOrBuffer","Readable","Duplex","ReadableState","EE","EElistenerCount","emitter","Stream","OurUint8Array","debugUtil","debuglog","destroyImpl","_require","getHighWaterMark","_require$codes","codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","StringDecoder","createReadableStreamAsyncIterator","errorOrDestroy","kProxyEvents","_events","stream","isDuplex","objectMode","readableObjectMode","highWaterMark","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","destroyed","defaultEncoding","awaitDrain","readingMore","_readableState","readable","_read","_destroy","_undestroy","undestroy","skipChunkCheck","readableAddChunk","addToFront","onEofChunk","er","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","emitReadable","_isUint8Array","isPaused","setEncoding","enc","content","MAX_HWM","computeNewHighWaterMark","nOrig","endReadable","howMuchToRead","doRead","fromList","emitReadable_","flow","maybeReadMore_","pipe","dest","pipeOpts","doEnd","stdout","stderr","endFn","onend","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","pipeOnDrain","cleanedUp","onfinish","ondata","_writableState","needDrain","pause","resume","dests","ev","listenerCount","nReadingNextTick","updateReadableListening","resume_","_this","_fromList","endReadableNT","wState","finished","xs","enumerableOnly","symbols","ownKeys","_defineProperty","getOwnPropertyDescriptors","Constructor","props","descriptor","protoProps","staticProps","_defineProperties","_require2","custom","_classCallCheck","tail","_createClass","copyBuffer","hasStrings","_getString","_getBuffer","nb","_objectSpread","depth","customInspect","readableDestroyed","writableDestroyed","emitErrorNT","errorEmitted","emitErrorAndCloseNT","emitCloseNT","ending","finalCalled","prefinished","rState","objectKeys","Writable","allowHalfOpen","getBuffer","onEndNT","onCorkedFinish","WritableState","internalUtil","deprecate","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","writableObjectMode","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","bufferedRequestCount","corkedRequestsFree","CorkedRequest","current","realHasInstance","hasInstance","_write","writev","_writev","final","_final","isBuf","nop","writeAfterEnd","validChunk","writeOrBuffer","cork","uncork","clearBuffer","setDefaultEncoding","newChunk","decodeChunk","doWrite","finishMaybe","onwriteStateUpdate","onwriteError","needFinish","afterWrite","onwriteDrain","holder","allBuffers","endWritable","callFinal","need","prefinish","corkReq","trace","deprecated","retried","nenc","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8End","utf8Text","byte","utf8CheckByte","utf8CheckExtraBytes","total","utf8CheckIncomplete","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","lastPromise","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","wrapForNext","_this2","_Object$create","onReadable","zl","zr","sl","sr","hl","hr","_e","RIPEMD160","words","al","cl","dl","el","ar","br","cr","dr","tl","tr","fn1","fn5","fn2","fn4","fn3","Hash","K","Sha","rotl5","ft","rotl30","_hash","H","finalSize","_finalSize","_len","accum","assigned","rem","lowBits","highBits","Sha1","rotl1","Sha256","Sha224","_g","z","gamma1","gamma0","T1","sigma1","ch","T2","sigma0","maj","SHA512","Sha384","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","writeInt64BE","Sha512","xl","ah","bh","dh","eh","fh","gh","hh","fl","gl","xh","Gamma0","gamma0l","Gamma0l","Gamma1","gamma1l","Gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","getCarry","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","Ch","chl","t1l","t1h","t2l","t2h","hashMode","_finalOrDigest","__final","_decoder","_encoding","CipherBase","inputEnc","outputEnc","outData","_toString","setAutoPadding","getAuthTag","setAuthTag","setAAD","fin","Legacy","md5","sha","ZEROS","alg","blocksize","_alg","_key","ipad","_ipad","opad","_opad","Hmac","checkParameters","toBuffer","ZERO_BUF","subtle","toBrowser","sha1","sha256","sha384","checks","algo","importKey","deriveBits","prom","browserPbkdf2","catch","queueMicrotask","password","salt","iterations","getNextTick","keylen","resolvePromise","checkNative","resp","pVersionMajor","sizes","sha224","rmd160","ripemd160","saltLen","getDigest","ipad1","ipad2","rmd160Func","shaFunc","DK","block1","destPos","T","thing","des","modes","CBC","instantiate","EDE","DES","des3","modeName","decrypt","iv","_des","MODES","AuthCipher","StreamCipher","aes","ebtk","_cache","Splitter","_cipher","AES","_prev","_mode","_autopadding","Cipher","encrypt","scrub","setTo","padBuff","suite","createCipheriv","createCipher","encryptBlock","encryptStart","byteParam","pad","encryptByte","bit","shiftIn","getBlock","incr32","encryptBlockRaw","chunkNum","GHASH","ck","_finID","ghash","toPad","ivBits","_ghash","calcIv","_secCache","_decrypt","_alen","_authTag","_called","rump","xorTest","keySchedule","SUB_MIX","SBOX","nRounds","SUB_MIX0","SUB_MIX1","SUB_MIX2","SUB_MIX3","s0","ksRow","RCON","INV_SBOX","INV_SUB_MIX","sx","x2","x4","x8","asUInt32Array","_reset","keySize","keyWords","ksRows","invKeySchedule","ik","ksR","tt","_nRounds","_keySchedule","_invKeySchedule","cryptBlock","decryptBlock","m1","scrubVec","ZEROES","_multiply","Vi","toArray","Zi","lsbVi","fromArray","abl","keyBits","ivLen","keyLen","tmp","used","keyStart","ivStart","EVP_BytesToKey","_last","Decipher","unpad","autoPadding","padded","createDecipheriv","createDecipher","generatePrime","primes","DH","mod","prime","gen","ENCODINGS","genc","createDiffieHellman","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","DiffieHellman","BN","MillerRabin","millerRabin","TWENTYFOUR","ELEVEN","TEN","THREE","SEVEN","pub","_pub","priv","_priv","primeCache","isEven","simpleSieve","fermatTest","shrn","cmp","malleable","setGenerator","__prime","_prime","mont","_primeLen","_primeCode","setPublicKey","setPrivateKey","checkPrime","__gen","generateKeys","_gen","toRed","redPow","fromRed","getPublicKey","computeSecret","other","secret","getPrime","front","formatReturnValue","getPrivateKey","getGenerator","bn","createHash","_hashType","_tag","_signType","Sign","Verify","createSign","createVerify","createHmac","crt","EC","ec","parseKeys","curves","hashType","signType","curve","ecSign","dsaSign","modulus","curveId","keyFromPrivate","toDER","params","priv_key","bits2int","kv","getKey","makeKey","makeR","invm","imul","cmpn","hlen","hbits","bits2octets","obits","bitLength","ishrn","getr","blinder","publicExponent","unblinder","umod","prime1","prime2","blinds","blind","blinded","qinv","coefficient","exponent1","m2","exponent2","isub","iadd","toArrayLike","aesid","fixProc","ciphers","compat","passphrase","stripped","subtype","ndata","certificate","tbsCertificate","subjectPublicKeyInfo","PublicKey","RSAPublicKey","subjectPublicKey","subjectPrivateKey","pub_key","DSAparam","EncryptedPrivateKey","PrivateKey","RSAPrivateKey","ECPrivateKey","DSAPrivateKey","parameters","kde","kdeparams","iters","cipherText","Node","der","entity","tree","DERNode","DEREncoder","reporter","_encode","_encodeComposite","primitive","cls","encodedTag","encodeTag","header","_createEncoderBuffer","lenOctets","_encodeStr","unused","_isNumstr","_isPrintstr","_encodeObjid","relative","ident","objid","_encodeTime","date","two","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_encodeNull","_encodeInt","numArray","_encodeBool","_use","_getEncoder","_skipDefault","dataBuffer","_baseState","defaultBuffer","_encodeValue","tagByName","tagClassByName","safer","Safer","kStringMaxLength","MAX_LENGTH","MAX_STRING_LENGTH","Reporter","DecoderBuffer","isDecoderBuffer","isCompatible","restore","skip","_reporterState","item","EncoderBuffer","isEncoderBuffer","DERDecoder","PEMDecoder","lines","findProc","startRegex","fullRegex","evp","okey","decrypted","match2","cipherKey","ecVerify","dsaVerify","padNum","red","pubkey","unpacked","checkValue","montp","elliptic","ECDH","aliases","secp256k1","secp224r1","prime256v1","prime192v1","secp384r1","secp521r1","p224","p256","secp256r1","p192","secp192r1","p384","p521","curveType","genKeyPair","inenc","otherPub","keyFromPublic","getPublic","getPrivate","getX","_importPublic","_importPrivate","mgf","withPublic","paddedMsg","oaep","pkcs1","iHash","hLen2","ps","dblen","maskedDb","maskedSeed","nonZero","cur","i2ops","zBuffer","db","p1","dif","safeBuffer","randombytes","kBufferMaxLength","kMaxUint32","randomFill","assertOffset","actualFill","ourBuf","uint","factory","globalThis","streamingIterables","dataBatch","curriedIterable","batch","_batch","_syncBatch","resolveFunc","rejectFunc","getIterator","resultQueue","readQueue","readDeferred","fulfillReadQueue","fillQueue","deferred","asyncIterableIterator","valueQueue","_buffer","syncBuffer","_collect","iterables","hasAnyAsync","find","itr","_concat","_syncConcat","_consume","filterFunc","_filter","maybeItr","flatten","_map","flatMap","concurrency","inflightCount","lastError","mapAndQueue","itrValue","asyncVal","curriedFunc","flatTransform","_flatTransform","onceReadable","_fromStream","sources","Set","nextVal","delete","firstFn","fns","previousFn","transformError","wrapFunc","stopOnError","pipeline","parallelMap","_parallelMap","parallelFlatMap","inputs","concurrentWork","Map","errCb","valueCb","notifyError","notifyDone","waitForQueue","queueNext","nextItem","curriedStart","_reduce","taken","take","_take","_syncTake","_asyncTap","seconds","nanoseconds","hrtime","delta","addTime","progress","_asyncTime","_syncTime","transform","drainCb","notifyDrain","waitForDrain","_writeToStream","fromStream","parallelMerge","tap","writeToStream","globalObject","BigNumber","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","configObject","convertBase","parseNumeric","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","caseChanged","isNum","_isBigNumber","intCheck","DEBUG","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","maxOrMin","lt","minimum","gt","pow2_53","random53bitInt","dp","rand","sum","plus","decimal","baseIn","baseOut","arrL","callerIsToString","xc","rm","toBaseOut","toFixedPoint","coeffToString","temp","xlo","xhi","klo","khi","aL","bL","more","prod","prodL","qc","remL","rem0","xL","yc0","yL","yz","yc","bitFloor","multiply","subtract","ne","toExponential","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p2","sd","ni","rd","pows10","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isOdd","times","integerValue","isEqualTo","eq","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","normalise","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","d0","d1","d2","n0","n1","toPrecision","zs","toList","isElectron","IS_ENV_WITH_DOM","nodeType","IS_ELECTRON","IS_BROWSER","IS_ELECTRON_MAIN","IS_ELECTRON_RENDERER","IS_NODE","release","IS_WEBWORKER","WorkerGlobalScope","IS_TEST","isTest","isElectronMain","isElectronRenderer","isBrowser","isWebWorker","isEnvWithDom","electron","EventIterator","socket","messages","connected","readyState","connError","cleanUp","cont","onOpen","onError","descriptors","formatRegExp","objects","isNull","noDeprecation","throwDeprecation","traceDeprecation","debugs","debugEnvRegex","debugEnv","pid","seen","stylize","stylizeNoColor","isBoolean","showHidden","_extend","isUndefined","stylizeWithColor","formatValue","styles","styleType","recurseTimes","formatPrimitive","visibleKeys","arrayToHash","isError","formatError","isDate","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","desc","numLinesEst","types","isNullOrUndefined","objectToString","isNativeError","isPrimitive","months","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","kCustomPromisifiedSymbol","promisify","original","promiseReject","newReason","maybeCb","rej","callbackifyOnRejected","callbackified","callbackify","availableTypedArrays","callBound","hasSymbols","hasToStringTag","typedArrays","$slice","toStrTags","typedArray","EvalError","superProto","tryTypedArrays","foundName","getter","isTypedArray","$indexOf","anyTrue","not_string","not_bool","not_type","not_primitive","numeric_arg","not_json","placeholder","key_access","index_access","sprintf_format","sprintf_parse","fmt","sprintf","parse_tree","cursor","tree_length","ph","pad_character","pad_length","is_positive","param_no","width","parseFloat","pad_char","repeat","align","sprintf_cache","_fmt","arg_names","field_list","replacement_field","field_match","SyntaxError","vsprintf","Transport","parser","parseqs","yeast","pick","usingBrowserWebSocket","defaultBinaryType","isReactNative","product","supportsBinary","forceBase64","doOpen","check","uri","protocols","extraHeaders","headers","binaryType","addEventListeners","onopen","onClose","packets","packet","encodePacket","compress","perMessageDeflate","threshold","send","doClose","close","schema","secure","timestampRequests","timestampParam","b64","ipv6","WS","assert","rng","eid","pre","_pre","_curve","_edwards","native","edwards","precompute","fieldSize","fieldBits","privateKeyGenerate","scalarSize","clamp","privateKeyVerify","privateKeyExport","publicKeyCreate","publicKeyExport","privateKeyImport","endian","encodeScalar","decodeClamped","mulBlind","pointFromEdwards","toX","publicKeyConvert","decodePoint","pointFromMont","neg","publicKeyFromUniform","u","decodeUniform","pointFromUniform","publicKeyToUniform","randomInt","pointToUniform","encodeUniform","publicKeyFromHash","pake","pointFromHash","publicKeyToHash","subgroup","pointToHash","publicKeyVerify","decodeX","publicKeyIsSmall","isSmall","publicKeyHasTorsion","hasTorsion","encodeField","publicKeyImport","point","pointFromX","derive","groupSizes","groupBases","k256","p251","p25519","p448","NONE","QUO","REM","BOTH","ALL","WND_WIDTH","WND_SIZE","HAS_BIGINT","BigInt","negative","_iadd","_alloc","_iaddn","enforce","isBN","ucmp","_isub","iaddn","isSMI","_isubn","addn","_strip","_normalize","isubn","subn","_mul","comb10MulTo","smallMulTo","bigMulTo","jumboMulTo","_move","imuln","muln","mulShift","utestn","iushrn","_div","nonzero","as","bs","quon","remn","_wordDiv","word","countBits","iushln","_ishlnsubmul","ahi","alo","quo","qj","ineg","_expand","quorem","iquo","iquon","irem","iremn","remrn","acc","divmod","idivn","divn","imod","imodn","modrn","modn","divRound","ipow","ipown","pown","sqr","isqr","_rootrem","ucmpn","rootrem","iroot","isPower","sqrtrem","isqrt","isSquare","iand","iuand","iuor","inotn","iandn","and","andn","andrn","iuandn","uand","uandn","uandrn","ior","iorn","or","orn","iuorn","uor","uorn","ixor","iuxor","ixorn","xorn","iuxorn","uxor","uxorn","inot","not","notn","ishl","ishln","shl","shln","iushl","ncarry","ushl","ushln","_split","ishr","shr","iushr","ushr","ushrn","setn","usetn","testn","imaskn","iumaskn","maskn","umaskn","andln","iabs","eqn","gtn","gten","ltn","lten","isPos","legendre","redLegendre","jacobi","_cloneNormal","_makeOdd","bmod8","kronecker","igcd","gcd","_factor2","ilcm","lcm","egcd","xp","yp","iinvert","invert","range","_invertp","ifermat","fermat","redFermat","ipowm","powm","ipowmn","powmn","redPown","isqrtm","sqrtm","redSqrt","isqrtpq","sqrtpq","sp","sq","mp","mq","lhs","rhs","isPrime","reps","isPrimeMR","isPrimeLucas","force2","nm1","nm3","zeroBits","rnm1","rone","redSqr","vk","vk1","toTwos","fromTwos","Red","convertTo","convertFrom","forceRed","_forceRed","redIAdd","redAdd","redIAddn","redAddn","redISub","redSub","redISubn","redSubn","redIMul","redMul","redIMuln","redMuln","redIDiv","redDiv","redIDivn","redDivn","redIPow","nonred","redIPown","redISqr","redISqrt","redIDivSqrt","idivsqrt","redDivSqrt","divsqrt","redIsSquare","redIShl","redShl","redIShln","redShln","redINeg","redNeg","redEq","redEqn","redIsHigh","isHigh","redIsLow","isLow","redIsOdd","redIsEven","redJacobi","redKronecker","redIInvert","redInvert","redIFermat","_check","inject","fromNumber","fromBuffer","isSafe","toDouble","toBigInt","s52","s26","toBool","getBase","groupBase","ArrayType","allocate","fromDouble","fromBigInt","_fromHex","fromBool","_fromBase","parseHex","limbLen","limbPow","parseBase","fromJSON","fromBN","left","barrett","Barrett","Mont","P192","P224","P521","K256","P251","P25519","P448","randomBits","cast","space","wordSize","one","ireduce","imulK","pm2","x1","Prime","pm3d4","pp1d4","SquareRootError","u2","u3","u5","v3","sm1","pm5d8","pp3d8","v7","mc","powS","powE","sqrn","Prime34","sqrnmul","x3","x6","x12","x24","x30","x31","x62","x124","x127","r0","x16","x32","x128","Prime116","x48","x96","x120","x126","x7","x256","x512","x519","x9","x11","x22","x44","x88","x176","x220","x223","r3","r4","r5","r6","r7","x192","x240","x246","x247","Prime58","x5","x10","x20","x40","x50","x100","x200","x250","x222","mb","_verify1","_verify2","intTo","intFrom","powInt","powNum","wnd","a2","sqrt3mod4","sqrt5mod8sm1","sqrt5mod8","sqrt0","alpha","beta","divsqrt3mod4","divsqrt5mod8","invertAll","elems","elem","invs","_shift","ri","mi","rib","makeError","isSafeInteger","rword","hncarry","zero","a0","al0","ah0","a1","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","bl7","bh7","bl8","bh8","bl9","bh9","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","AFFINE","JACOBIAN","PROJECTIVE","EXTENDED","jsfIndex","USE_FIXED","Point","conf","ossl","adjustedSize","signBit","nh","scalarBits","three","four","i2","i3","i4","i6","torsion","endo","_scale","memoize","isIsomorphic","isIsogenous","_finalize","pointFromJSON","_findTorsion","isInfinity","normalize","sort","_fixedMul","windows","points","_getWindows","steps","jpoint","_fixedNafMul","doubles","_getDoubles","naf","getFixedNAF","nafW","_wnafMul","_safeNAF","getNAF","dbl","_wnafMulAdd","coeffs","coeff","ppoint","pcoeff","_getNAF","_getJNAF","getJNAF","nafw","_endoWnafMulAdd","Curve","_scaleShort","_scaleMont","_scaleEdwards","isElliptic","jinv","isComplete","scalar","field","xpoint","cpoint","xx","xz","yy","solveX2","solveX","solveY2","solveY","pointFromY","pointFromShort","u1","p3","mulH","p0","randomField","randomScalar","randomPoint","mulAll","jmulAll","imulH","normalizeAll","scale","affinizeAll","top","lsb","msb","splitHash","decodeField","encodeAdjusted","decodeAdjusted","decodeScalar","encodeClamped","clamped","encodePoint","encodeX","decodeEven","decodeSquare","toShort","toMont","toEdwards","pointToJSON","toJ","NAF","odds","wnds","dblp","Windows","power","dbls","Doubles","_getBeta","_getBlinding","blinding","unblind","Blinding","_hasWindows","_hasDoubles","_blind","randomize","Precomp","diffAddDbl","getY","isOrder2","eqX","eqR","jmulH","jmul","order","jmuln","jmulBlind","mulAdd","jmulAdd","jdiv","jdivn","divH","jdivH","toP","ShortPoint","ai","zeroA","threeA","redN","pmodn","highOrder","smallGap","Endo","_getEndomorphism","_isomorphism","curveA","curveB","odd","customB","u6","uncube","customA","u4","_short","ShortCurve","_mont","_findRS","MontCurve","EdwardsCurve","_scale0","_scale1","nx","bi","ny","d5","dma","d5a","da5","ypz","ymz","_getEndoRoots","l1","l2","lambda","basis","_getEndoBasis","_getEndoPrecomp","rl","rl1","tl1","rl2","tl2","_egcdSqrt","Vector","sqrtn","y1","y2","v1","v2","_endoSplit","q1","q2","_endoBeta","npoints","ncoeffs","_sswu","z2","ba","bza","_sswui","a2x2","abx2","axb","_svdwf","gz","z3","u2t1","y3","_svdw","_svdwi","z4","gz2","x2z","xz2","n2","n3","x0","JPoint","cubeRoots","inf","coords","ad6","MontPoint","EdwardsPoint","wrapErrors","xb","comb","form","toPretty","zOne","z6","aa","nz","_mixedAdd","_add","_addJA","_addJJ","z1z1","z2z2","hhh","_dbl0","_dbl3","_dblJ","zz","xb2","gamma","xmdelta","xpdelta","beta4","beta8","gamma28","zz1","zz2","zzz1","zzz2","inf1","inf2","rx","rn","a24","wa","wb","_solveY0","_elligator2","y0","_invert2","XPoint","by2","nu","nv","uu","uz","vv","vz","ax2","bb","da","z5","si","smi","twisted","oneA","mOneA","smallD","alt","curveD","d3","ad14","a2d","ad2","apd","_mulA","_mulD","_elligator1","ci","ci2","cm1","f0","f1","f2","X1","rX","X12","_invert1","nn","nr1","YY","X2","tz","_alt","ad","amd4","dxy","xy","d24","nt","u0","_addM1","_addA","xyxy","_dbl","P256","P384","SECP256K1","BRAINPOOLP256","BRAINPOOLP384","BRAINPOOLP512","X25519","X448","MONT448","ED25519","ISO448","ED448","repr","jsf","m14","m24","m8","getJSF","ja","jb","mod9","cubeRoot","WeakMap","chunks","register","HAS_CRYPTO","randomValues","poolPos","randomRange","ikm","mac","prk","ctr","extract","expand","HMAC","FINALIZED","DESC","want","writeU32","readU32","Sigma1","Sigma0","Maj","SHA256","multi","$protobuf","$Reader","Reader","$Writer","Writer","$util","$root","roots","pb","NoiseHandshakePayload","identityKey","identitySig","writer","uint32","encodeDelimited","ldelim","skipType","decodeDelimited","defaults","ChaCha20","Poly1305","zero16","chacha","poly","aadLen","cipherLen","aad","_pad16","auth","writeU64","aead","AEAD","BIG_ENDIAN","Int8Array","Int16Array","nonce","qround","rotl32","leftover","readU16","_blocks","hibit","writeU16","DUMP_SESSION_KEYS","NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG","NOISE_MSG_MAX_LENGTH_BYTES"],"version":3,"file":"index.fd532818.js.map","sourceRoot":"/__parcel_source_root/"}